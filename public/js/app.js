/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_roots_bud_sage"] = self["webpackChunk_roots_bud_sage"] || []).push([["app"],{

/***/ "../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* global __webpack_require__ */\nvar Refresh = __webpack_require__(\"../node_modules/react-refresh/runtime.js\");\n\n/**\n * Extracts exports from a webpack module object.\n * @param {string} moduleId A Webpack module ID.\n * @returns {*} An exports object from the module.\n */\nfunction getModuleExports(moduleId) {\n  if (typeof moduleId === 'undefined') {\n    // `moduleId` is unavailable, which indicates that this module is not in the cache,\n    // which means we won't be able to capture any exports,\n    // and thus they cannot be refreshed safely.\n    // These are likely runtime or dynamically generated modules.\n    return {};\n  }\n\n  var maybeModule = __webpack_require__.c[moduleId];\n  if (typeof maybeModule === 'undefined') {\n    // `moduleId` is available but the module in cache is unavailable,\n    // which indicates the module is somehow corrupted (e.g. broken Webpacak `module` globals).\n    // We will warn the user (as this is likely a mistake) and assume they cannot be refreshed.\n    console.warn('[React Refresh] Failed to get exports for module: ' + moduleId + '.');\n    return {};\n  }\n\n  var exportsOrPromise = maybeModule.exports;\n  if (typeof Promise !== 'undefined' && exportsOrPromise instanceof Promise) {\n    return exportsOrPromise.then(function (exports) {\n      return exports;\n    });\n  }\n  return exportsOrPromise;\n}\n\n/**\n * Calculates the signature of a React refresh boundary.\n * If this signature changes, it's unsafe to accept the boundary.\n *\n * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L795-L816).\n * @param {*} moduleExports A Webpack module exports object.\n * @returns {string[]} A React refresh boundary signature array.\n */\nfunction getReactRefreshBoundarySignature(moduleExports) {\n  var signature = [];\n  signature.push(Refresh.getFamilyByType(moduleExports));\n\n  if (moduleExports == null || typeof moduleExports !== 'object') {\n    // Exit if we can't iterate over exports.\n    return signature;\n  }\n\n  for (var key in moduleExports) {\n    if (key === '__esModule') {\n      continue;\n    }\n\n    signature.push(key);\n    signature.push(Refresh.getFamilyByType(moduleExports[key]));\n  }\n\n  return signature;\n}\n\n/**\n * Creates a data object to be retained across refreshes.\n * This object should not transtively reference previous exports,\n * which can form infinite chain of objects across refreshes, which can pressure RAM.\n *\n * @param {*} moduleExports A Webpack module exports object.\n * @returns {*} A React refresh boundary signature array.\n */\nfunction getWebpackHotData(moduleExports) {\n  return {\n    signature: getReactRefreshBoundarySignature(moduleExports),\n    isReactRefreshBoundary: isReactRefreshBoundary(moduleExports),\n  };\n}\n\n/**\n * Creates a helper that performs a delayed React refresh.\n * @returns {function(function(): void): void} A debounced React refresh function.\n */\nfunction createDebounceUpdate() {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  var refreshTimeout;\n\n  /**\n   * Performs react refresh on a delay and clears the error overlay.\n   * @param {function(): void} callback\n   * @returns {void}\n   */\n  function enqueueUpdate(callback) {\n    if (typeof refreshTimeout === 'undefined') {\n      refreshTimeout = setTimeout(function () {\n        refreshTimeout = undefined;\n        Refresh.performReactRefresh();\n        callback();\n      }, 30);\n    }\n  }\n\n  return enqueueUpdate;\n}\n\n/**\n * Checks if all exports are likely a React component.\n *\n * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L748-L774).\n * @param {*} moduleExports A Webpack module exports object.\n * @returns {boolean} Whether the exports are React component like.\n */\nfunction isReactRefreshBoundary(moduleExports) {\n  if (Refresh.isLikelyComponentType(moduleExports)) {\n    return true;\n  }\n  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {\n    // Exit if we can't iterate over exports.\n    return false;\n  }\n\n  var hasExports = false;\n  var areAllExportsComponents = true;\n  for (var key in moduleExports) {\n    hasExports = true;\n\n    // This is the ES Module indicator flag\n    if (key === '__esModule') {\n      continue;\n    }\n\n    // We can (and have to) safely execute getters here,\n    // as Webpack manually assigns harmony exports to getters,\n    // without any side-effects attached.\n    // Ref: https://github.com/webpack/webpack/blob/b93048643fe74de2a6931755911da1212df55897/lib/MainTemplate.js#L281\n    var exportValue = moduleExports[key];\n    if (!Refresh.isLikelyComponentType(exportValue)) {\n      areAllExportsComponents = false;\n    }\n  }\n\n  return hasExports && areAllExportsComponents;\n}\n\n/**\n * Checks if exports are likely a React component and registers them.\n *\n * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L818-L835).\n * @param {*} moduleExports A Webpack module exports object.\n * @param {string} moduleId A Webpack module ID.\n * @returns {void}\n */\nfunction registerExportsForReactRefresh(moduleExports, moduleId) {\n  if (Refresh.isLikelyComponentType(moduleExports)) {\n    // Register module.exports if it is likely a component\n    Refresh.register(moduleExports, moduleId + ' %exports%');\n  }\n\n  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {\n    // Exit if we can't iterate over the exports.\n    return;\n  }\n\n  for (var key in moduleExports) {\n    // Skip registering the ES Module indicator\n    if (key === '__esModule') {\n      continue;\n    }\n\n    var exportValue = moduleExports[key];\n    if (Refresh.isLikelyComponentType(exportValue)) {\n      var typeID = moduleId + ' %exports% ' + key;\n      Refresh.register(exportValue, typeID);\n    }\n  }\n}\n\n/**\n * Compares previous and next module objects to check for mutated boundaries.\n *\n * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L776-L792).\n * @param {*} prevSignature The signature of the current Webpack module exports object.\n * @param {*} nextSignature The signature of the next Webpack module exports object.\n * @returns {boolean} Whether the React refresh boundary should be invalidated.\n */\nfunction shouldInvalidateReactRefreshBoundary(prevSignature, nextSignature) {\n  if (prevSignature.length !== nextSignature.length) {\n    return true;\n  }\n\n  for (var i = 0; i < nextSignature.length; i += 1) {\n    if (prevSignature[i] !== nextSignature[i]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar enqueueUpdate = createDebounceUpdate();\nfunction executeRuntime(moduleExports, moduleId, webpackHot, refreshOverlay, isTest) {\n  registerExportsForReactRefresh(moduleExports, moduleId);\n\n  if (webpackHot) {\n    var isHotUpdate = !!webpackHot.data;\n    var prevData;\n    if (isHotUpdate) {\n      prevData = webpackHot.data.prevData;\n    }\n\n    if (isReactRefreshBoundary(moduleExports)) {\n      webpackHot.dispose(\n        /**\n         * A callback to performs a full refresh if React has unrecoverable errors,\n         * and also caches the to-be-disposed module.\n         * @param {*} data A hot module data object from Webpack HMR.\n         * @returns {void}\n         */\n        function hotDisposeCallback(data) {\n          // We have to mutate the data object to get data registered and cached\n          data.prevData = getWebpackHotData(moduleExports);\n        }\n      );\n      webpackHot.accept(\n        /**\n         * An error handler to allow self-recovering behaviours.\n         * @param {Error} error An error occurred during evaluation of a module.\n         * @returns {void}\n         */\n        function hotErrorHandler(error) {\n          if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {\n            refreshOverlay.handleRuntimeError(error);\n          }\n\n          if (typeof isTest !== 'undefined' && isTest) {\n            if (window.onHotAcceptError) {\n              window.onHotAcceptError(error.message);\n            }\n          }\n\n          __webpack_require__.c[moduleId].hot.accept(hotErrorHandler);\n        }\n      );\n\n      if (isHotUpdate) {\n        if (\n          prevData &&\n          prevData.isReactRefreshBoundary &&\n          shouldInvalidateReactRefreshBoundary(\n            prevData.signature,\n            getReactRefreshBoundarySignature(moduleExports)\n          )\n        ) {\n          webpackHot.invalidate();\n        } else {\n          enqueueUpdate(\n            /**\n             * A function to dismiss the error overlay after performing React refresh.\n             * @returns {void}\n             */\n            function updateCallback() {\n              if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {\n                refreshOverlay.clearRuntimeErrors();\n              }\n            }\n          );\n        }\n      }\n    } else {\n      if (isHotUpdate && typeof prevData !== 'undefined') {\n        webpackHot.invalidate();\n      }\n    }\n  }\n}\n\nmodule.exports = Object.freeze({\n  enqueueUpdate: enqueueUpdate,\n  executeRuntime: executeRuntime,\n  getModuleExports: getModuleExports,\n  isReactRefreshBoundary: isReactRefreshBoundary,\n  registerExportsForReactRefresh: registerExportsForReactRefresh,\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-support/lib/css-loader/index.cjs??css!../node_modules/postcss-loader/dist/cjs.js??postcss!./styles/app.css":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(\"./fonts/Raleway-Medium.woff2\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(\"./fonts/Raleway-SemiBold.woff2\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(\"./fonts/Raleway-Bold.woff2\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(\"./fonts/Raleway-ExtraBold.woff2\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(\"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 14.58 13.85\\\"><ellipse fill=\\\"rgb%28255,206,155%29\\\" cx=\\\"7.29\\\" cy=\\\"6.48\\\"  rx=\\\"7.29\\\" ry=\\\"6.48\\\"/><path fill=\\\"rgb%28255,206,155%29\\\" d=\\\"M12.8 10.69s-.63 1.64.2 2.25-1.09 1.18-1.83.77c-.57-.31-2.1-.97-2.1-.97l3.73-2.05Z\\\"/></svg>\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(\"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba%281,105,125%29\\\" ><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M12 4.5v15m7.5-7.5h-15\\\" /></svg>\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(\"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba%281,105,125%29\\\" >  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M5 12h14\\\" /></svg>\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: currentColor; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\n\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: RalewayCL, Raleway, Avenir, Helvetica Neue, Helvetica, Arial, sans-serif; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  text-decoration: underline;\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden] {\\n  display: none;\\n}\\n  @font-face {\\n    font-family: 'RalewayCL';\\n    font-weight: 400;\\n    src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('woff2');\\n  }\\n\\n  @font-face {\\n    font-family: 'RalewayCL';\\n    font-weight: 600;\\n    src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('woff2');\\n  }\\n\\n  @font-face {\\n    font-family: 'RalewayCL';\\n    font-weight: 700;\\n    src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('woff2');\\n  }\\n\\n  @font-face {\\n    font-family: 'RalewayCL';\\n    font-weight: 800;\\n    src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format('woff2');\\n  }\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\\n  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-ring-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-shadow-colored: 0 0 rgba(0,0,0,0);\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\\n  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-ring-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-shadow: 0 0 rgba(0,0,0,0);\\n  --tw-shadow-colored: 0 0 rgba(0,0,0,0);\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n.container {\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  padding-right: 1rem;\\n  padding-left: 1rem;\\n}\\n@media (min-width: 640px) {\\n\\n  .container {\\n    max-width: 640px;\\n    padding-right: 1.5rem;\\n    padding-left: 1.5rem;\\n  }\\n}\\n@media (min-width: 768px) {\\n\\n  .container {\\n    max-width: 768px;\\n  }\\n}\\n@media (min-width: 1024px) {\\n\\n  .container {\\n    max-width: 1024px;\\n    padding-right: 2rem;\\n    padding-left: 2rem;\\n  }\\n}\\n@media (min-width: 1280px) {\\n\\n  .container {\\n    max-width: 1280px;\\n    padding-right: 2.5rem;\\n    padding-left: 2.5rem;\\n  }\\n}\\n@media (min-width: 1536px) {\\n\\n  .container {\\n    max-width: 1536px;\\n    padding-right: 3rem;\\n    padding-left: 3rem;\\n  }\\n}\\n.prose {\\n  color: var(--tw-prose-body);\\n  max-width: 65ch;\\n}\\n.prose :where(p):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 1.25em;\\n  margin-bottom: 1.25em;\\n}\\n.prose :where([class~=\\\"lead\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-lead);\\n  font-size: 1.25em;\\n  line-height: 1.6;\\n  margin-top: 1.2em;\\n  margin-bottom: 1.2em;\\n}\\n.prose :where(a):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-links);\\n  -webkit-text-decoration: underline;\\n  text-decoration: underline;\\n  font-weight: 500;\\n}\\n.prose :where(strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-bold);\\n  font-weight: 600;\\n}\\n.prose :where(a strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(blockquote strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(thead th strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(ol):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: decimal;\\n  margin-top: 1.25em;\\n  margin-bottom: 1.25em;\\n  padding-left: 1.625em;\\n}\\n.prose :where(ol[type=\\\"A\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: upper-alpha;\\n}\\n.prose :where(ol[type=\\\"a\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: lower-alpha;\\n}\\n.prose :where(ol[type=\\\"A\\\" s]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: upper-alpha;\\n}\\n.prose :where(ol[type=\\\"a\\\" s]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: lower-alpha;\\n}\\n.prose :where(ol[type=\\\"I\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: upper-roman;\\n}\\n.prose :where(ol[type=\\\"i\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: lower-roman;\\n}\\n.prose :where(ol[type=\\\"I\\\" s]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: upper-roman;\\n}\\n.prose :where(ol[type=\\\"i\\\" s]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: lower-roman;\\n}\\n.prose :where(ol[type=\\\"1\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: decimal;\\n}\\n.prose :where(ul):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  list-style-type: disc;\\n  margin-top: 1.25em;\\n  margin-bottom: 1.25em;\\n  padding-left: 1.625em;\\n}\\n.prose :where(ol > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::marker {\\n  font-weight: 400;\\n  color: var(--tw-prose-counters);\\n}\\n.prose :where(ul > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::marker {\\n  color: var(--tw-prose-bullets);\\n}\\n.prose :where(dt):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 600;\\n  margin-top: 1.25em;\\n}\\n.prose :where(hr):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  border-color: var(--tw-prose-hr);\\n  border-top-width: 1px;\\n  margin-top: 3em;\\n  margin-bottom: 3em;\\n}\\n.prose :where(blockquote):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 500;\\n  font-style: italic;\\n  color: var(--tw-prose-quotes);\\n  border-left-width: 0.25rem;\\n  border-left-color: var(--tw-prose-quote-borders);\\n  quotes: \\\"\\\\201C\\\"\\\"\\\\201D\\\"\\\"\\\\2018\\\"\\\"\\\\2019\\\";\\n  margin-top: 1.6em;\\n  margin-bottom: 1.6em;\\n  padding-left: 1em;\\n}\\n.prose :where(blockquote p:first-of-type):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::before {\\n  content: open-quote;\\n}\\n.prose :where(blockquote p:last-of-type):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::after {\\n  content: close-quote;\\n}\\n.prose :where(h1):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 800;\\n  font-size: 2.25em;\\n  margin-top: 0;\\n  margin-bottom: 0.8888889em;\\n  line-height: 1.1111111;\\n}\\n.prose :where(h1 strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 900;\\n  color: inherit;\\n}\\n.prose :where(h2):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 700;\\n  font-size: 1.5em;\\n  margin-top: 2em;\\n  margin-bottom: 1em;\\n  line-height: 1.3333333;\\n}\\n.prose :where(h2 strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 800;\\n  color: inherit;\\n}\\n.prose :where(h3):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 600;\\n  font-size: 1.25em;\\n  margin-top: 1.6em;\\n  margin-bottom: 0.6em;\\n  line-height: 1.6;\\n}\\n.prose :where(h3 strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 700;\\n  color: inherit;\\n}\\n.prose :where(h4):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 600;\\n  margin-top: 1.5em;\\n  margin-bottom: 0.5em;\\n  line-height: 1.5;\\n}\\n.prose :where(h4 strong):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 700;\\n  color: inherit;\\n}\\n.prose :where(img):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n}\\n.prose :where(picture):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  display: block;\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n}\\n.prose :where(video):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n}\\n.prose :where(kbd):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  font-weight: 500;\\n  font-family: inherit;\\n  color: var(--tw-prose-kbd);\\n  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);\\n  font-size: 0.875em;\\n  border-radius: 0.3125rem;\\n  padding-top: 0.1875em;\\n  padding-right: 0.375em;\\n  padding-bottom: 0.1875em;\\n  padding-left: 0.375em;\\n}\\n.prose :where(code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-code);\\n  font-weight: 600;\\n  font-size: 0.875em;\\n}\\n.prose :where(code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::before {\\n  content: \\\"`\\\";\\n}\\n.prose :where(code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::after {\\n  content: \\\"`\\\";\\n}\\n.prose :where(a code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(h1 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(h2 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n  font-size: 0.875em;\\n}\\n.prose :where(h3 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n  font-size: 0.9em;\\n}\\n.prose :where(h4 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(blockquote code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(thead th code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: inherit;\\n}\\n.prose :where(pre):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-pre-code);\\n  background-color: var(--tw-prose-pre-bg);\\n  overflow-x: auto;\\n  font-weight: 400;\\n  font-size: 0.875em;\\n  line-height: 1.7142857;\\n  margin-top: 1.7142857em;\\n  margin-bottom: 1.7142857em;\\n  border-radius: 0.375rem;\\n  padding-top: 0.8571429em;\\n  padding-right: 1.1428571em;\\n  padding-bottom: 0.8571429em;\\n  padding-left: 1.1428571em;\\n}\\n.prose :where(pre code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  background-color: transparent;\\n  border-width: 0;\\n  border-radius: 0;\\n  padding: 0;\\n  font-weight: inherit;\\n  color: inherit;\\n  font-size: inherit;\\n  font-family: inherit;\\n  line-height: inherit;\\n}\\n.prose :where(pre code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::before {\\n  content: none;\\n}\\n.prose :where(pre code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *))::after {\\n  content: none;\\n}\\n.prose :where(table):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  width: 100%;\\n  table-layout: auto;\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n  font-size: 0.875em;\\n  line-height: 1.7142857;\\n}\\n.prose :where(thead):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  border-bottom-width: 1px;\\n  border-bottom-color: var(--tw-prose-th-borders);\\n}\\n.prose :where(thead th):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-headings);\\n  font-weight: 600;\\n  vertical-align: bottom;\\n  padding-right: 0.5714286em;\\n  padding-bottom: 0.5714286em;\\n  padding-left: 0.5714286em;\\n}\\n.prose :where(tbody tr):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  border-bottom-width: 1px;\\n  border-bottom-color: var(--tw-prose-td-borders);\\n}\\n.prose :where(tbody tr:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  border-bottom-width: 0;\\n}\\n.prose :where(tbody td):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  vertical-align: baseline;\\n}\\n.prose :where(tfoot):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  border-top-width: 1px;\\n  border-top-color: var(--tw-prose-th-borders);\\n}\\n.prose :where(tfoot td):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  vertical-align: top;\\n}\\n.prose :where(th, td):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  text-align: left;\\n}\\n.prose :where(figure > *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n.prose :where(figcaption):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  color: var(--tw-prose-captions);\\n  font-size: 0.875em;\\n  line-height: 1.4285714;\\n  margin-top: 0.8571429em;\\n}\\n.prose :where(--tw-prose-body):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  dark: #074D56;\\n  -d-e-f-a-u-l-t: #01697D;\\n  bright: #00A0AD;\\n  light: #d7eaed;\\n}\\n.prose :where(--tw-prose-headings):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  dark: #074D56;\\n  -d-e-f-a-u-l-t: #01697D;\\n  bright: #00A0AD;\\n  light: #d7eaed;\\n}\\n.prose {\\n  --tw-prose-lead: #4b5563;\\n}\\n.prose :where(--tw-prose-links):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  dark: #074D56;\\n  -d-e-f-a-u-l-t: #01697D;\\n  bright: #00A0AD;\\n  light: #d7eaed;\\n}\\n.prose :where(--tw-prose-bold):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  dark: #074D56;\\n  -d-e-f-a-u-l-t: #01697D;\\n  bright: #00A0AD;\\n  light: #d7eaed;\\n}\\n.prose {\\n  --tw-prose-counters: #6b7280;\\n  --tw-prose-bullets: #d1d5db;\\n  --tw-prose-hr: #e5e7eb;\\n  --tw-prose-quotes: #111827;\\n  --tw-prose-quote-borders: #e5e7eb;\\n  --tw-prose-captions: #6b7280;\\n  --tw-prose-kbd: #111827;\\n  --tw-prose-kbd-shadows: 17 24 39;\\n  --tw-prose-code: #111827;\\n  --tw-prose-pre-code: #e5e7eb;\\n  --tw-prose-pre-bg: #1f2937;\\n  --tw-prose-th-borders: #d1d5db;\\n  --tw-prose-td-borders: #e5e7eb;\\n  --tw-prose-invert-body: #d1d5db;\\n  --tw-prose-invert-headings: #fff;\\n  --tw-prose-invert-lead: #9ca3af;\\n  --tw-prose-invert-links: #fff;\\n  --tw-prose-invert-bold: #fff;\\n  --tw-prose-invert-counters: #9ca3af;\\n  --tw-prose-invert-bullets: #4b5563;\\n  --tw-prose-invert-hr: #374151;\\n  --tw-prose-invert-quotes: #f3f4f6;\\n  --tw-prose-invert-quote-borders: #374151;\\n  --tw-prose-invert-captions: #9ca3af;\\n  --tw-prose-invert-kbd: #fff;\\n  --tw-prose-invert-kbd-shadows: 255 255 255;\\n  --tw-prose-invert-code: #fff;\\n  --tw-prose-invert-pre-code: #d1d5db;\\n  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);\\n  --tw-prose-invert-th-borders: #4b5563;\\n  --tw-prose-invert-td-borders: #374151;\\n  font-size: 1rem;\\n  line-height: 1.75;\\n}\\n.prose :where(picture > img):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n.prose :where(li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0.5em;\\n  margin-bottom: 0.5em;\\n}\\n.prose :where(ol > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-left: 0.375em;\\n}\\n.prose :where(ul > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-left: 0.375em;\\n}\\n.prose :where(.prose > ul > li p):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0.75em;\\n  margin-bottom: 0.75em;\\n}\\n.prose :where(.prose > ul > li > p:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 1.25em;\\n}\\n.prose :where(.prose > ul > li > p:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-bottom: 1.25em;\\n}\\n.prose :where(.prose > ol > li > p:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 1.25em;\\n}\\n.prose :where(.prose > ol > li > p:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-bottom: 1.25em;\\n}\\n.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0.75em;\\n  margin-bottom: 0.75em;\\n}\\n.prose :where(dl):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 1.25em;\\n  margin-bottom: 1.25em;\\n}\\n.prose :where(dd):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0.5em;\\n  padding-left: 1.625em;\\n}\\n.prose :where(hr + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n}\\n.prose :where(h2 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n}\\n.prose :where(h3 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n}\\n.prose :where(h4 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n}\\n.prose :where(thead th:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-left: 0;\\n}\\n.prose :where(thead th:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-right: 0;\\n}\\n.prose :where(tbody td, tfoot td):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-top: 0.5714286em;\\n  padding-right: 0.5714286em;\\n  padding-bottom: 0.5714286em;\\n  padding-left: 0.5714286em;\\n}\\n.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-left: 0;\\n}\\n.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  padding-right: 0;\\n}\\n.prose :where(figure):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n}\\n.prose :where(.prose > :first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-top: 0;\\n}\\n.prose :where(.prose > :last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n  margin-bottom: 0;\\n}\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n.pointer-events-none {\\n  pointer-events: none;\\n}\\n.static {\\n  position: static;\\n}\\n.fixed {\\n  position: fixed;\\n}\\n.absolute {\\n  position: absolute;\\n}\\n.relative {\\n  position: relative;\\n}\\n.sticky {\\n  position: sticky;\\n}\\n.inset-0 {\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n}\\n.-bottom-20 {\\n  bottom: -5rem;\\n}\\n.-bottom-4 {\\n  bottom: -1rem;\\n}\\n.-left-16 {\\n  left: -4rem;\\n}\\n.-right-4 {\\n  right: -1rem;\\n}\\n.-right-6 {\\n  right: -1.5rem;\\n}\\n.-top-0 {\\n  top: -0px;\\n}\\n.-top-16 {\\n  top: -4rem;\\n}\\n.-top-2 {\\n  top: -0.5rem;\\n}\\n.bottom-0 {\\n  bottom: 0px;\\n}\\n.bottom-12 {\\n  bottom: 3rem;\\n}\\n.bottom-6 {\\n  bottom: 1.5rem;\\n}\\n.left-0 {\\n  left: 0px;\\n}\\n.left-1\\\\/2 {\\n  left: 50%;\\n}\\n.right-0 {\\n  right: 0px;\\n}\\n.right-2\\\\/3 {\\n  right: 66.666667%;\\n}\\n.right-4 {\\n  right: 1rem;\\n}\\n.top-0 {\\n  top: 0px;\\n}\\n.top-1\\\\/2 {\\n  top: 50%;\\n}\\n.top-12 {\\n  top: 3rem;\\n}\\n.top-4 {\\n  top: 1rem;\\n}\\n.top-\\\\[15\\\\%\\\\] {\\n  top: 15%;\\n}\\n.-z-10 {\\n  z-index: -10;\\n}\\n.z-10 {\\n  z-index: 10;\\n}\\n.z-20 {\\n  z-index: 20;\\n}\\n.z-40 {\\n  z-index: 40;\\n}\\n.z-50 {\\n  z-index: 50;\\n}\\n.m-0 {\\n  margin: 0px;\\n}\\n.m-0\\\\.5 {\\n  margin: 0.125rem;\\n}\\n.\\\\!my-0 {\\n  margin-top: 0px !important;\\n  margin-bottom: 0px !important;\\n}\\n.mx-4 {\\n  margin-left: 1rem;\\n  margin-right: 1rem;\\n}\\n.mx-8 {\\n  margin-left: 2rem;\\n  margin-right: 2rem;\\n}\\n.mx-auto {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.my-12 {\\n  margin-top: 3rem;\\n  margin-bottom: 3rem;\\n}\\n.my-16 {\\n  margin-top: 4rem;\\n  margin-bottom: 4rem;\\n}\\n.my-4 {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n}\\n.\\\\!-mt-4 {\\n  margin-top: -1rem !important;\\n}\\n.\\\\!mb-2 {\\n  margin-bottom: 0.5rem !important;\\n}\\n.\\\\!mb-8 {\\n  margin-bottom: 2rem !important;\\n}\\n.\\\\!mt-0 {\\n  margin-top: 0px !important;\\n}\\n.\\\\!mt-12 {\\n  margin-top: 3rem !important;\\n}\\n.-mb-16 {\\n  margin-bottom: -4rem;\\n}\\n.-mb-48 {\\n  margin-bottom: -12rem;\\n}\\n.-mb-8 {\\n  margin-bottom: -2rem;\\n}\\n.-ml-8 {\\n  margin-left: -2rem;\\n}\\n.-mt-6 {\\n  margin-top: -1.5rem;\\n}\\n.mb-1 {\\n  margin-bottom: 0.25rem;\\n}\\n.mb-1\\\\.5 {\\n  margin-bottom: 0.375rem;\\n}\\n.mb-12 {\\n  margin-bottom: 3rem;\\n}\\n.mb-16 {\\n  margin-bottom: 4rem;\\n}\\n.mb-2 {\\n  margin-bottom: 0.5rem;\\n}\\n.mb-24 {\\n  margin-bottom: 6rem;\\n}\\n.mb-3 {\\n  margin-bottom: 0.75rem;\\n}\\n.mb-4 {\\n  margin-bottom: 1rem;\\n}\\n.mb-6 {\\n  margin-bottom: 1.5rem;\\n}\\n.mb-8 {\\n  margin-bottom: 2rem;\\n}\\n.ml-4 {\\n  margin-left: 1rem;\\n}\\n.ml-auto {\\n  margin-left: auto;\\n}\\n.mr-1 {\\n  margin-right: 0.25rem;\\n}\\n.mr-4 {\\n  margin-right: 1rem;\\n}\\n.mr-auto {\\n  margin-right: auto;\\n}\\n.mt-1 {\\n  margin-top: 0.25rem;\\n}\\n.mt-12 {\\n  margin-top: 3rem;\\n}\\n.mt-2 {\\n  margin-top: 0.5rem;\\n}\\n.mt-2\\\\.5 {\\n  margin-top: 0.625rem;\\n}\\n.mt-3 {\\n  margin-top: 0.75rem;\\n}\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\n.mt-6 {\\n  margin-top: 1.5rem;\\n}\\n.mt-8 {\\n  margin-top: 2rem;\\n}\\n.mt-auto {\\n  margin-top: auto;\\n}\\n.mt-0 {\\n  margin-top: 0px;\\n}\\n.mt-0\\\\.5 {\\n  margin-top: 0.125rem;\\n}\\n.block {\\n  display: block;\\n}\\n.inline-block {\\n  display: inline-block;\\n}\\n.\\\\!flex {\\n  display: flex !important;\\n}\\n.flex {\\n  display: flex;\\n}\\n.inline-flex {\\n  display: inline-flex;\\n}\\n.table {\\n  display: table;\\n}\\n.grid {\\n  display: grid;\\n}\\n.contents {\\n  display: contents;\\n}\\n.hidden {\\n  display: none;\\n}\\n.aspect-\\\\[2\\\\] {\\n  aspect-ratio: 2;\\n}\\n.aspect-square {\\n  aspect-ratio: 1 / 1;\\n}\\n.\\\\!size-8 {\\n  width: 2rem !important;\\n  height: 2rem !important;\\n}\\n.size-12 {\\n  width: 3rem;\\n  height: 3rem;\\n}\\n.size-14 {\\n  width: 3.5rem;\\n  height: 3.5rem;\\n}\\n.size-3 {\\n  width: 0.75rem;\\n  height: 0.75rem;\\n}\\n.size-3\\\\.5 {\\n  width: 0.875rem;\\n  height: 0.875rem;\\n}\\n.size-5 {\\n  width: 1.25rem;\\n  height: 1.25rem;\\n}\\n.size-6 {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n.size-8 {\\n  width: 2rem;\\n  height: 2rem;\\n}\\n.h-0 {\\n  height: 0px;\\n}\\n.h-12 {\\n  height: 3rem;\\n}\\n.h-24 {\\n  height: 6rem;\\n}\\n.h-4 {\\n  height: 1rem;\\n}\\n.h-5 {\\n  height: 1.25rem;\\n}\\n.h-6 {\\n  height: 1.5rem;\\n}\\n.h-7 {\\n  height: 1.75rem;\\n}\\n.h-\\\\[80vh\\\\] {\\n  height: 80vh;\\n}\\n.h-\\\\[calc\\\\(50\\\\%\\\\+4rem\\\\)\\\\] {\\n  height: calc(50% + 4rem);\\n}\\n.h-auto {\\n  height: auto;\\n}\\n.h-full {\\n  height: 100%;\\n}\\n.min-h-24 {\\n  min-height: 6rem;\\n}\\n.min-h-32 {\\n  min-height: 8rem;\\n}\\n.min-h-80 {\\n  min-height: 20rem;\\n}\\n.min-h-\\\\[16rem\\\\] {\\n  min-height: 16rem;\\n}\\n.min-h-\\\\[60vh\\\\] {\\n  min-height: 60vh;\\n}\\n.min-h-full {\\n  min-height: 100%;\\n}\\n.min-h-screen {\\n  min-height: 100vh;\\n}\\n.\\\\!w-40 {\\n  width: 10rem !important;\\n}\\n.w-1\\\\/3 {\\n  width: 33.333333%;\\n}\\n.w-1\\\\/4 {\\n  width: 25%;\\n}\\n.w-10 {\\n  width: 2.5rem;\\n}\\n.w-12 {\\n  width: 3rem;\\n}\\n.w-2\\\\/3 {\\n  width: 66.666667%;\\n}\\n.w-24 {\\n  width: 6rem;\\n}\\n.w-28 {\\n  width: 7rem;\\n}\\n.w-3\\\\/4 {\\n  width: 75%;\\n}\\n.w-3\\\\/5 {\\n  width: 60%;\\n}\\n.w-32 {\\n  width: 8rem;\\n}\\n.w-4 {\\n  width: 1rem;\\n}\\n.w-48 {\\n  width: 12rem;\\n}\\n.w-5 {\\n  width: 1.25rem;\\n}\\n.w-6 {\\n  width: 1.5rem;\\n}\\n.w-64 {\\n  width: 16rem;\\n}\\n.w-7 {\\n  width: 1.75rem;\\n}\\n.w-80 {\\n  width: 20rem;\\n}\\n.w-96 {\\n  width: 24rem;\\n}\\n.w-\\\\[20rem\\\\] {\\n  width: 20rem;\\n}\\n.w-\\\\[40vw\\\\] {\\n  width: 40vw;\\n}\\n.w-\\\\[50vw\\\\] {\\n  width: 50vw;\\n}\\n.w-\\\\[60\\\\%\\\\] {\\n  width: 60%;\\n}\\n.w-\\\\[75vw\\\\] {\\n  width: 75vw;\\n}\\n.w-\\\\[calc\\\\(50\\\\%\\\\+3rem\\\\)\\\\] {\\n  width: calc(50% + 3rem);\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.w-screen {\\n  width: 100vw;\\n}\\n.w-16 {\\n  width: 4rem;\\n}\\n.w-20 {\\n  width: 5rem;\\n}\\n.min-w-96 {\\n  min-width: 24rem;\\n}\\n.\\\\!max-w-none {\\n  max-width: none !important;\\n}\\n.max-w-2xl {\\n  max-width: 42rem;\\n}\\n.max-w-3xl {\\n  max-width: 48rem;\\n}\\n.max-w-4xl {\\n  max-width: 56rem;\\n}\\n.max-w-80 {\\n  max-width: 20rem;\\n}\\n.max-w-96 {\\n  max-width: 24rem;\\n}\\n.max-w-\\\\[30\\\\%\\\\] {\\n  max-width: 30%;\\n}\\n.max-w-\\\\[50\\\\%\\\\] {\\n  max-width: 50%;\\n}\\n.max-w-lg {\\n  max-width: 32rem;\\n}\\n.max-w-md {\\n  max-width: 28rem;\\n}\\n.max-w-none {\\n  max-width: none;\\n}\\n.max-w-screen-sm {\\n  max-width: 640px;\\n}\\n.max-w-sm {\\n  max-width: 24rem;\\n}\\n.max-w-xl {\\n  max-width: 36rem;\\n}\\n.flex-1 {\\n  flex: 1 1 0%;\\n}\\n.flex-none {\\n  flex: none;\\n}\\n.origin-center {\\n  transform-origin: center;\\n}\\n.-translate-x-1\\\\/2 {\\n  --tw-translate-x: -50%;\\n  transform: translate(-50%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.-translate-x-full {\\n  --tw-translate-x: -100%;\\n  transform: translate(-100%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.-translate-y-1\\\\/2 {\\n  --tw-translate-y: -50%;\\n  transform: translate(var(--tw-translate-x), -50%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.-translate-y-1\\\\/4 {\\n  --tw-translate-y: -25%;\\n  transform: translate(var(--tw-translate-x), -25%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.-translate-y-6 {\\n  --tw-translate-y: -1.5rem;\\n  transform: translate(var(--tw-translate-x), -1.5rem) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.-translate-y-8 {\\n  --tw-translate-y: -2rem;\\n  transform: translate(var(--tw-translate-x), -2rem) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.translate-x-12 {\\n  --tw-translate-x: 3rem;\\n  transform: translate(3rem, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.translate-x-8 {\\n  --tw-translate-x: 2rem;\\n  transform: translate(2rem, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.translate-y-1\\\\/4 {\\n  --tw-translate-y: 25%;\\n  transform: translate(var(--tw-translate-x), 25%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.rotate-90 {\\n  --tw-rotate: 90deg;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.transform {\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n@keyframes spin {\\n\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.animate-spin {\\n  animation: spin 1s linear infinite;\\n}\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\n.list-inside {\\n  list-style-position: inside;\\n}\\n.list-disc {\\n  list-style-type: disc;\\n}\\n.columns-2 {\\n  -moz-columns: 2;\\n       columns: 2;\\n}\\n.grid-cols-1 {\\n  grid-template-columns: repeat(1, minmax(0, 1fr));\\n}\\n.grid-cols-2 {\\n  grid-template-columns: repeat(2, minmax(0, 1fr));\\n}\\n.grid-cols-3 {\\n  grid-template-columns: repeat(3, minmax(0, 1fr));\\n}\\n.grid-cols-4 {\\n  grid-template-columns: repeat(4, minmax(0, 1fr));\\n}\\n.flex-row {\\n  flex-direction: row;\\n}\\n.flex-col {\\n  flex-direction: column;\\n}\\n.flex-col-reverse {\\n  flex-direction: column-reverse;\\n}\\n.flex-wrap {\\n  flex-wrap: wrap;\\n}\\n.flex-nowrap {\\n  flex-wrap: nowrap;\\n}\\n.items-start {\\n  align-items: flex-start;\\n}\\n.items-end {\\n  align-items: flex-end;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.justify-end {\\n  justify-content: flex-end;\\n}\\n.justify-center {\\n  justify-content: center;\\n}\\n.justify-between {\\n  justify-content: space-between;\\n}\\n.justify-around {\\n  justify-content: space-around;\\n}\\n.gap-0 {\\n  gap: 0px;\\n}\\n.gap-0\\\\.5 {\\n  gap: 0.125rem;\\n}\\n.gap-1 {\\n  gap: 0.25rem;\\n}\\n.gap-1\\\\.5 {\\n  gap: 0.375rem;\\n}\\n.gap-12 {\\n  gap: 3rem;\\n}\\n.gap-2 {\\n  gap: 0.5rem;\\n}\\n.gap-3 {\\n  gap: 0.75rem;\\n}\\n.gap-4 {\\n  gap: 1rem;\\n}\\n.gap-8 {\\n  gap: 2rem;\\n}\\n.gap-x-8 {\\n  -moz-column-gap: 2rem;\\n       column-gap: 2rem;\\n}\\n.gap-y-16 {\\n  row-gap: 4rem;\\n}\\n.space-y-2 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(0.5rem * (1 - 0));\\n  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));\\n  margin-top: calc(0.5rem * calc(1 - 0));\\n  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(0.5rem * 0);\\n  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));\\n}\\n.space-y-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(1rem * (1 - 0));\\n  margin-top: calc(1rem * (1 - var(--tw-space-y-reverse)));\\n  margin-top: calc(1rem * calc(1 - 0));\\n  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(1rem * 0);\\n  margin-bottom: calc(1rem * var(--tw-space-y-reverse));\\n}\\n.space-y-8 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-y-reverse: 0;\\n  margin-top: calc(2rem * (1 - 0));\\n  margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));\\n  margin-top: calc(2rem * calc(1 - 0));\\n  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));\\n  margin-bottom: calc(2rem * 0);\\n  margin-bottom: calc(2rem * var(--tw-space-y-reverse));\\n}\\n.overflow-auto {\\n  overflow: auto;\\n}\\n.overflow-hidden {\\n  overflow: hidden;\\n}\\n.overflow-y-auto {\\n  overflow-y: auto;\\n}\\n.truncate {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n.text-balance {\\n  text-wrap: balance;\\n}\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\n.rounded-full {\\n  border-radius: 9999px;\\n}\\n.rounded-lg {\\n  border-radius: 0.5rem;\\n}\\n.rounded-medium {\\n  border-radius: 2rem;\\n}\\n.rounded-small {\\n  border-radius: 1.25rem;\\n}\\n.rounded-l-full {\\n  border-top-left-radius: 9999px;\\n  border-bottom-left-radius: 9999px;\\n}\\n.rounded-r-full {\\n  border-top-right-radius: 9999px;\\n  border-bottom-right-radius: 9999px;\\n}\\n.rounded-t-medium {\\n  border-top-left-radius: 2rem;\\n  border-top-right-radius: 2rem;\\n}\\n.border {\\n  border-width: 1px;\\n}\\n.border-2 {\\n  border-width: 2px;\\n}\\n.border-b {\\n  border-bottom-width: 1px;\\n}\\n.border-b-0 {\\n  border-bottom-width: 0px;\\n}\\n.border-b-2 {\\n  border-bottom-width: 2px;\\n}\\n.border-l-8 {\\n  border-left-width: 8px;\\n}\\n.border-r {\\n  border-right-width: 1px;\\n}\\n.border-t {\\n  border-top-width: 1px;\\n}\\n.border-blue {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(1, 105, 125, 1);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n}\\n.border-blue-bright {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(0, 160, 173, 1);\\n  border-color: rgba(0, 160, 173, var(--tw-border-opacity));\\n}\\n.border-blue-light {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(215, 234, 237, 1);\\n  border-color: rgba(215, 234, 237, var(--tw-border-opacity));\\n}\\n.border-gold {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(255, 209, 158, 1);\\n  border-color: rgba(255, 209, 158, var(--tw-border-opacity));\\n}\\n.border-green {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(101, 190, 197, 1);\\n  border-color: rgba(101, 190, 197, var(--tw-border-opacity));\\n}\\n.border-pink {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(238, 189, 188, 1);\\n  border-color: rgba(238, 189, 188, var(--tw-border-opacity));\\n}\\n.border-white {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(255, 255, 255, 1);\\n  border-color: rgba(255, 255, 255, var(--tw-border-opacity));\\n}\\n.border-b-blue-bright {\\n  --tw-border-opacity: 1;\\n  border-bottom-color: rgba(0, 160, 173, 1);\\n  border-bottom-color: rgba(0, 160, 173, var(--tw-border-opacity));\\n}\\n.border-opacity-25 {\\n  --tw-border-opacity: 0.25;\\n}\\n.border-opacity-30 {\\n  --tw-border-opacity: 0.3;\\n}\\n.border-opacity-75 {\\n  --tw-border-opacity: 0.75;\\n}\\n.bg-beige {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(245, 241, 237, 1);\\n  background-color: rgba(245, 241, 237, var(--tw-bg-opacity));\\n}\\n.bg-beige-dark {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(228, 211, 196, 1);\\n  background-color: rgba(228, 211, 196, var(--tw-bg-opacity));\\n}\\n.bg-beige-light {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(252, 250, 249, 1);\\n  background-color: rgba(252, 250, 249, var(--tw-bg-opacity));\\n}\\n.bg-black {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(12, 12, 12, 1);\\n  background-color: rgba(12, 12, 12, var(--tw-bg-opacity));\\n}\\n.bg-blue {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(1, 105, 125, 1);\\n  background-color: rgba(1, 105, 125, var(--tw-bg-opacity));\\n}\\n.bg-blue-bright {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(0, 160, 173, 1);\\n  background-color: rgba(0, 160, 173, var(--tw-bg-opacity));\\n}\\n.bg-blue-dark {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(7, 77, 86, 1);\\n  background-color: rgba(7, 77, 86, var(--tw-bg-opacity));\\n}\\n.bg-blue-light {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(215, 234, 237, 1);\\n  background-color: rgba(215, 234, 237, var(--tw-bg-opacity));\\n}\\n.bg-gold {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(255, 209, 158, 1);\\n  background-color: rgba(255, 209, 158, var(--tw-bg-opacity));\\n}\\n.bg-gold-light {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(254, 250, 246, 1);\\n  background-color: rgba(254, 250, 246, var(--tw-bg-opacity));\\n}\\n.bg-green {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(101, 190, 197, 1);\\n  background-color: rgba(101, 190, 197, var(--tw-bg-opacity));\\n}\\n.bg-green-light {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(241, 248, 249, 1);\\n  background-color: rgba(241, 248, 249, var(--tw-bg-opacity));\\n}\\n.bg-pink {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(238, 189, 188, 1);\\n  background-color: rgba(238, 189, 188, var(--tw-bg-opacity));\\n}\\n.bg-pink-light {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(247, 236, 234, 1);\\n  background-color: rgba(247, 236, 234, var(--tw-bg-opacity));\\n}\\n.bg-transparent {\\n  background-color: transparent;\\n}\\n.bg-white {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(255, 255, 255, 1);\\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\\n}\\n.bg-opacity-30 {\\n  --tw-bg-opacity: 0.3;\\n}\\n.bg-opacity-50 {\\n  --tw-bg-opacity: 0.5;\\n}\\n.bg-opacity-60 {\\n  --tw-bg-opacity: 0.6;\\n}\\n.bg-opacity-75 {\\n  --tw-bg-opacity: 0.75;\\n}\\n.bg-opacity-80 {\\n  --tw-bg-opacity: 0.8;\\n}\\n.bg-opacity-95 {\\n  --tw-bg-opacity: 0.95;\\n}\\n.bg-gradient-to-r {\\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\\n}\\n.from-green {\\n  --tw-gradient-from: #65BEC5 var(--tw-gradient-from-position);\\n  --tw-gradient-to: rgba(101, 190, 197, 0) var(--tw-gradient-to-position);\\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\\n}\\n.from-15\\\\% {\\n  --tw-gradient-from-position: 15%;\\n}\\n.to-transparent {\\n  --tw-gradient-to: transparent var(--tw-gradient-to-position);\\n}\\n.bg-clip-padding {\\n  background-clip: padding-box;\\n}\\n.fill-blue-bright {\\n  fill: #00A0AD;\\n}\\n.fill-blue-dark {\\n  fill: #074D56;\\n}\\n.fill-blue-light {\\n  fill: #d7eaed;\\n}\\n.fill-white {\\n  fill: #ffffff;\\n}\\n.object-cover {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n.p-0 {\\n  padding: 0px;\\n}\\n.p-0\\\\.5 {\\n  padding: 0.125rem;\\n}\\n.p-2 {\\n  padding: 0.5rem;\\n}\\n.p-2\\\\.5 {\\n  padding: 0.625rem;\\n}\\n.p-3 {\\n  padding: 0.75rem;\\n}\\n.p-4 {\\n  padding: 1rem;\\n}\\n.p-6 {\\n  padding: 1.5rem;\\n}\\n.p-8 {\\n  padding: 2rem;\\n}\\n.\\\\!px-16 {\\n  padding-left: 4rem !important;\\n  padding-right: 4rem !important;\\n}\\n.\\\\!px-6 {\\n  padding-left: 1.5rem !important;\\n  padding-right: 1.5rem !important;\\n}\\n.\\\\!px-8 {\\n  padding-left: 2rem !important;\\n  padding-right: 2rem !important;\\n}\\n.\\\\!py-1 {\\n  padding-top: 0.25rem !important;\\n  padding-bottom: 0.25rem !important;\\n}\\n.px-10 {\\n  padding-left: 2.5rem;\\n  padding-right: 2.5rem;\\n}\\n.px-12 {\\n  padding-left: 3rem;\\n  padding-right: 3rem;\\n}\\n.px-2 {\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n}\\n.px-2\\\\.5 {\\n  padding-left: 0.625rem;\\n  padding-right: 0.625rem;\\n}\\n.px-3 {\\n  padding-left: 0.75rem;\\n  padding-right: 0.75rem;\\n}\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n.px-6 {\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n}\\n.px-8 {\\n  padding-left: 2rem;\\n  padding-right: 2rem;\\n}\\n.py-0 {\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n}\\n.py-0\\\\.5 {\\n  padding-top: 0.125rem;\\n  padding-bottom: 0.125rem;\\n}\\n.py-12 {\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n}\\n.py-16 {\\n  padding-top: 4rem;\\n  padding-bottom: 4rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.py-2\\\\.5 {\\n  padding-top: 0.625rem;\\n  padding-bottom: 0.625rem;\\n}\\n.py-24 {\\n  padding-top: 6rem;\\n  padding-bottom: 6rem;\\n}\\n.py-3 {\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\n.py-4 {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n}\\n.py-6 {\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\n.py-8 {\\n  padding-top: 2rem;\\n  padding-bottom: 2rem;\\n}\\n.pb-12 {\\n  padding-bottom: 3rem;\\n}\\n.pb-16 {\\n  padding-bottom: 4rem;\\n}\\n.pb-2 {\\n  padding-bottom: 0.5rem;\\n}\\n.pb-24 {\\n  padding-bottom: 6rem;\\n}\\n.pb-3 {\\n  padding-bottom: 0.75rem;\\n}\\n.pb-36 {\\n  padding-bottom: 9rem;\\n}\\n.pb-4 {\\n  padding-bottom: 1rem;\\n}\\n.pb-40 {\\n  padding-bottom: 10rem;\\n}\\n.pb-72 {\\n  padding-bottom: 18rem;\\n}\\n.pb-8 {\\n  padding-bottom: 2rem;\\n}\\n.pl-2 {\\n  padding-left: 0.5rem;\\n}\\n.pl-6 {\\n  padding-left: 1.5rem;\\n}\\n.pr-2 {\\n  padding-right: 0.5rem;\\n}\\n.pr-3 {\\n  padding-right: 0.75rem;\\n}\\n.pr-32 {\\n  padding-right: 8rem;\\n}\\n.pr-4 {\\n  padding-right: 1rem;\\n}\\n.pr-8 {\\n  padding-right: 2rem;\\n}\\n.pt-0 {\\n  padding-top: 0px;\\n}\\n.pt-12 {\\n  padding-top: 3rem;\\n}\\n.pt-16 {\\n  padding-top: 4rem;\\n}\\n.pt-24 {\\n  padding-top: 6rem;\\n}\\n.pt-3 {\\n  padding-top: 0.75rem;\\n}\\n.pt-32 {\\n  padding-top: 8rem;\\n}\\n.pt-36 {\\n  padding-top: 9rem;\\n}\\n.pt-4 {\\n  padding-top: 1rem;\\n}\\n.pt-6 {\\n  padding-top: 1.5rem;\\n}\\n.text-center {\\n  text-align: center;\\n}\\n.text-right {\\n  text-align: right;\\n}\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\n.text-4xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n}\\n.text-5xl {\\n  font-size: 3rem;\\n  line-height: 1;\\n}\\n.text-6xl {\\n  font-size: 3.75rem;\\n  line-height: 1;\\n}\\n.text-lg {\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n}\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n.text-xl {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n.\\\\!font-medium {\\n  font-weight: 500 !important;\\n}\\n.\\\\!font-normal {\\n  font-weight: 400 !important;\\n}\\n.\\\\!font-semibold {\\n  font-weight: 600 !important;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.font-medium {\\n  font-weight: 500;\\n}\\n.font-normal {\\n  font-weight: 400;\\n}\\n.font-semibold {\\n  font-weight: 600;\\n}\\n.lowercase {\\n  text-transform: lowercase;\\n}\\n.italic {\\n  font-style: italic;\\n}\\n.\\\\!leading-none {\\n  line-height: 1 !important;\\n}\\n.\\\\!leading-tight {\\n  line-height: 1.25 !important;\\n}\\n.leading-none {\\n  line-height: 1;\\n}\\n.leading-snug {\\n  line-height: 1.375;\\n}\\n.leading-tight {\\n  line-height: 1.25;\\n}\\n.tracking-tight {\\n  letter-spacing: -0.025em;\\n}\\n.\\\\!text-black {\\n  --tw-text-opacity: 1 !important;\\n  color: rgba(12, 12, 12, 1) !important;\\n  color: rgba(12, 12, 12, var(--tw-text-opacity)) !important;\\n}\\n.text-beige-dark {\\n  --tw-text-opacity: 1;\\n  color: rgba(228, 211, 196, 1);\\n  color: rgba(228, 211, 196, var(--tw-text-opacity));\\n}\\n.text-blue {\\n  --tw-text-opacity: 1;\\n  color: rgba(1, 105, 125, 1);\\n  color: rgba(1, 105, 125, var(--tw-text-opacity));\\n}\\n.text-blue-bright {\\n  --tw-text-opacity: 1;\\n  color: rgba(0, 160, 173, 1);\\n  color: rgba(0, 160, 173, var(--tw-text-opacity));\\n}\\n.text-blue-dark {\\n  --tw-text-opacity: 1;\\n  color: rgba(7, 77, 86, 1);\\n  color: rgba(7, 77, 86, var(--tw-text-opacity));\\n}\\n.text-blue-light {\\n  --tw-text-opacity: 1;\\n  color: rgba(215, 234, 237, 1);\\n  color: rgba(215, 234, 237, var(--tw-text-opacity));\\n}\\n.text-gold-dark {\\n  --tw-text-opacity: 1;\\n  color: rgba(198, 143, 54, 1);\\n  color: rgba(198, 143, 54, var(--tw-text-opacity));\\n}\\n.text-green {\\n  --tw-text-opacity: 1;\\n  color: rgba(101, 190, 197, 1);\\n  color: rgba(101, 190, 197, var(--tw-text-opacity));\\n}\\n.text-green-dark {\\n  --tw-text-opacity: 1;\\n  color: rgba(0, 162, 175, 1);\\n  color: rgba(0, 162, 175, var(--tw-text-opacity));\\n}\\n.text-pink-dark {\\n  --tw-text-opacity: 1;\\n  color: rgba(209, 128, 128, 1);\\n  color: rgba(209, 128, 128, var(--tw-text-opacity));\\n}\\n.text-white {\\n  --tw-text-opacity: 1;\\n  color: rgba(255, 255, 255, 1);\\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\\n}\\n.text-opacity-80 {\\n  --tw-text-opacity: 0.8;\\n}\\n.text-opacity-90 {\\n  --tw-text-opacity: 0.9;\\n}\\n.underline {\\n  text-decoration-line: underline;\\n}\\n.\\\\!no-underline {\\n  text-decoration-line: none !important;\\n}\\n.antialiased {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.opacity-0 {\\n  opacity: 0;\\n}\\n.opacity-25 {\\n  opacity: 0.25;\\n}\\n.opacity-75 {\\n  opacity: 0.75;\\n}\\n.opacity-80 {\\n  opacity: 0.8;\\n}\\n.shadow {\\n  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);\\n  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);\\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\\n}\\n.shadow-lg {\\n  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\\n}\\n.-outline-offset-1 {\\n  outline-offset: -1px;\\n}\\n.invert {\\n  --tw-invert: invert(100%);\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) invert(100%) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\n.filter {\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\n.transition {\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.transition-transform {\\n  transition-property: transform;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.duration-1000 {\\n  transition-duration: 1000ms;\\n}\\n.duration-300 {\\n  transition-duration: 300ms;\\n}\\n.ease-in-out {\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n.type-2xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n  font-weight: 800;\\n  line-height: 1.25;\\n}\\n@media (min-width: 768px) {\\n\\n  .type-2xl {\\n    font-size: 3rem;\\n    line-height: 1;\\n  }\\n}\\n@media (min-width: 1536px) {\\n\\n  .type-2xl {\\n    font-size: 3.75rem;\\n    line-height: 1;\\n  }\\n}\\n.type-xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n  font-weight: 800;\\n  line-height: 1.25;\\n}\\n@media (min-width: 1536px) {\\n\\n  .type-xl {\\n    font-size: 3rem;\\n    line-height: 1;\\n  }\\n}\\n.type-lg {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n  font-weight: 600;\\n  line-height: 1.375;\\n}\\n.type-md {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 700;\\n  line-height: 1.375;\\n}\\n.type-sm {\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n  font-weight: 600;\\n  line-height: 1.375;\\n}\\n.type-xs {\\n  font-weight: 600;\\n  line-height: 1.375;\\n}\\n.clip-landscape {\\n    clip-path: url(#clip-landscape);\\n    aspect-ratio: 1.5;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n.clip-oval {\\n    clip-path: url(#clip-oval);\\n    aspect-ratio: 1.3;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n.clip-oval-part {\\n    clip-path: url(#clip-oval-part);\\n    aspect-ratio: 1.15;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n.clip-oval-2 {\\n    clip-path: url(#clip-oval-2);\\n    aspect-ratio: 0.96;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n.clip-oval-part-2 {\\n    clip-path: url(#clip-oval-part-2);\\n    aspect-ratio: 1;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n.wp-block {\\n  max-width: var(--wp--style--global--content-size);\\n}\\n.page-template-template-fullwidth .page-content > h2,\\n.page-template-template-fullwidth .page-content > h3,\\n.page-template-template-fullwidth .page-content > h4,\\n.page-template-template-fullwidth .page-content > h5,\\n.page-template-template-fullwidth .page-content > h6,\\n.page-template-template-fullwidth .page-content > p,\\n.page-template-template-fullwidth .page-content > ul,\\n.page-template-template-fullwidth .page-content > ol {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n@media (min-width: 768px) {\\n\\n  .page-template-template-fullwidth .page-content > h2,\\n.page-template-template-fullwidth .page-content > h3,\\n.page-template-template-fullwidth .page-content > h4,\\n.page-template-template-fullwidth .page-content > h5,\\n.page-template-template-fullwidth .page-content > h6,\\n.page-template-template-fullwidth .page-content > p,\\n.page-template-template-fullwidth .page-content > ul,\\n.page-template-template-fullwidth .page-content > ol {\\n    padding-left: 0px;\\n    padding-right: 0px;\\n  }\\n}\\n.page-content iframe[src*='youtube.com'],\\n.page-content iframe[src*='youtube-nocookie.com'],\\n.page-content iframe[src*='vimeo.com'] {\\n  aspect-ratio: 16 / 9;\\n  height: auto;\\n  width: 100%;\\n  border-radius: 1.25rem;\\n}\\n.page-content > *:last-child {\\n  margin-bottom: 0px;\\n}\\n.prose > h1,\\nh1.wp-block-heading {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n  font-weight: 800;\\n  line-height: 1.25;\\n}\\n@media (min-width: 1536px) {\\n\\n  .prose > h1,\\nh1.wp-block-heading {\\n    font-size: 3rem;\\n    line-height: 1;\\n  }\\n}\\n.prose > h2,\\nh2.wp-block-heading {\\n  --tw-text-opacity: 1;\\n  color: rgba(7, 77, 86, 1);\\n  color: rgba(7, 77, 86, var(--tw-text-opacity));\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n  font-weight: 600;\\n  line-height: 1.375;\\n}\\n.prose > h3,\\nh3.wp-block-heading {\\n  font-weight: 700;\\n  line-height: 1.375;\\n  --tw-text-opacity: 1;\\n  color: rgba(0, 162, 175, 1);\\n  color: rgba(0, 162, 175, var(--tw-text-opacity));\\n}\\n.prose .group:first-child h2 {\\n  margin-top: 1rem;\\n}\\n.wp-block-button .wp-block-button__link {\\n  border-radius: 1.25rem;\\n  border-width: 2px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(101, 190, 197, 1);\\n  border-color: rgba(101, 190, 197, var(--tw-border-opacity));\\n  background-color: transparent;\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  font-weight: 600;\\n  --tw-text-opacity: 1;\\n  color: rgba(12, 12, 12, 1);\\n  color: rgba(12, 12, 12, var(--tw-text-opacity));\\n}\\n.wp-block-hero .wp-block-buttons {\\n  margin-top: 2rem;\\n}\\np.is-style-large {\\n  margin-bottom: 0.5rem;\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 700;\\n  line-height: 1.375;\\n}\\n/* \\n.post-content .wp-block-button__link,\\n.page-content .wp-block-button__link,\\n.page-content .wp-block-file__button,\\n.post-content .wp-block-file__button {\\n  @apply !no-underline text-white;\\n}\\n\\n\\n\\n\\n\\n.wp-block-group.has-background > *:first-child {\\n  @apply mt-0;\\n}\\n\\n\\n.wp-block-media-text .wp-block-media-text__content {\\n  @apply pt-4 pb-4;\\n} */\\n.wp-block-quote {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n@media (min-width: 1024px) {\\n\\n  .wp-block-quote {\\n    font-size: 1.5rem;\\n    line-height: 2rem;\\n  }\\n}\\n.wp-block-quote p {\\n  margin-bottom: 0.75rem;\\n  font-weight: 700;\\n  font-style: normal !important;\\n  line-height: 1.375 !important;\\n  --tw-text-opacity: 1;\\n  color: rgba(1, 105, 125, 1);\\n  color: rgba(1, 105, 125, var(--tw-text-opacity));\\n  font-size: 1em !important;\\n}\\n.wp-block-quote {\\n  margin-top: 3rem !important;\\n  margin-bottom: 3rem !important;\\n  border-left-width: 0px !important;\\n  line-height: 1.25 !important;\\n  padding-left: 1.5em !important;\\n}\\n.wp-block-quote::before {\\n  content: '';\\n  display: block;\\n  margin-left: -1.5em;\\n  width: 1.25em;\\n  height: 1.25em;\\n  float: left;\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \");\\n  background-size: contain;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n}\\n.wp-block-quote cite {\\n  text-align: right;\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n  font-weight: 600;\\n  font-style: normal !important;\\n  --tw-text-opacity: 1;\\n  color: rgba(1, 105, 125, 1);\\n  color: rgba(1, 105, 125, var(--tw-text-opacity));\\n}\\n.wp-block-quote.has-background {\\n  margin-top: 2rem;\\n  margin-bottom: 2rem;\\n  --tw-border-opacity: 1;\\n  border-left-color: rgba(1, 105, 125, 1);\\n  border-left-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n  padding: 1.5rem;\\n  padding-top: 0.125rem;\\n}\\n.wp-block-quote.is-style-large {\\n  margin-top: 5rem !important;\\n  margin-bottom: 5rem !important;\\n  font-size: 1.875rem;\\n  line-height: 2.25rem;\\n}\\n@media (min-width: 1024px) {\\n\\n  .wp-block-quote.is-style-large {\\n    font-size: 2.25rem;\\n    line-height: 2.5rem;\\n  }\\n}\\n.wp-block-quote.is-style-large p {\\n  line-height: 1.375 !important;\\n}\\n.wp-block-quote.is-style-large cite {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n.wp-block-group.has-background {\\n  margin-top: 3rem;\\n  margin-bottom: 3rem;\\n  border-radius: 1.25rem;\\n  padding: 1.5rem;\\n}\\n@media (min-width: 768px) {\\n\\n  .wp-block-group.has-background {\\n    margin-top: 4rem;\\n    margin-bottom: 4rem;\\n    padding: 2rem;\\n  }\\n}\\n.wp-block-file:not(.wp-element-button) {\\n  font-size: 1rem !important;\\n  line-height: 1.5rem !important;\\n}\\n.acf-block-component.wp-block-file > div {\\n  width: 100% !important;\\n}\\ndetails {\\n  margin-bottom: 1rem;\\n  overflow: hidden;\\n  border-radius: 1.25rem;\\n  border-width: 1px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(215, 234, 237, 1);\\n  border-color: rgba(215, 234, 237, var(--tw-border-opacity));\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(215, 234, 237, 1);\\n  background-color: rgba(215, 234, 237, var(--tw-bg-opacity));\\n  padding: 1rem;\\n  padding-bottom: 0px;\\n}\\ndetails:hover {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(1, 105, 125, 1);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n}\\ndetails[open] {\\n  border-width: 1px !important;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(1, 105, 125, 1);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n  padding-bottom: 1rem;\\n}\\ndetails[open] .open\\\\:rotate-90 {\\n  --tw-rotate: 90deg;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(90deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\nsummary {\\n  position: relative;\\n  margin-left: -1rem;\\n  margin-right: -1rem;\\n  margin-top: -1rem;\\n  cursor: pointer;\\n  list-style-type: none;\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n  padding-left: 1.5rem;\\n  padding-right: 3rem;\\n  --tw-text-opacity: 1;\\n  color: rgba(7, 77, 86, 1);\\n  color: rgba(7, 77, 86, var(--tw-text-opacity));\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 700;\\n  line-height: 1.375;\\n  font-size: 1em !important;\\n}\\nsummary::marker {\\n  display: none;\\n}\\ndetails summary::after {\\n  position: absolute;\\n  right: 1rem;\\n  top: 50%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n  width: 2.5rem;\\n  height: 2.5rem;\\n  --tw-translate-y: -50%;\\n  transform: translate(var(--tw-translate-x), -50%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  border-radius: 9999px;\\n  background-color: rgba(255, 255, 255, 0.6);\\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\\n  --tw-bg-opacity: 0.6;\\n  padding: 0.25rem;\\n\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \");\\n  background-size: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  content: '';\\n}\\n.wp-block-people-list details summary::after {\\n  right: 1.5rem;\\n  width: 3.5rem;\\n  height: 3.5rem;\\n  padding: 0.5rem;\\n}\\n@media (min-width: 768px) {\\n\\n  .wp-block-people-list details summary::after {\\n    right: 2rem;\\n  }\\n}\\n.wp-block-people-list details summary::after {\\n  background-size: 2rem;\\n}\\ndetails summary:hover::after {\\n  background-color: rgba(255, 255, 255, 1);\\n}\\ndetails[open] summary::after {\\n  background-color: rgba(255, 255, 255, 0.85);\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \");\\n}\\ndetails[open] summary {\\n  border-bottom-width: 1px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(1, 105, 125, 1);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(1, 105, 125, 1);\\n  background-color: rgba(1, 105, 125, var(--tw-bg-opacity));\\n  --tw-text-opacity: 1;\\n  color: rgba(255, 255, 255, 1);\\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\\n}\\nsummary:hover {\\n  /* @apply border-blue; */\\n}\\n.wp-block-table table {\\n  border-collapse: collapse;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(255, 255, 255, 1);\\n  border-color: rgba(255, 255, 255, var(--tw-border-opacity));\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(245, 241, 237, 1);\\n  background-color: rgba(245, 241, 237, var(--tw-bg-opacity));\\n}\\n.wp-block-table table.has-blue-background-color th {\\n  --tw-text-opacity: 1;\\n  color: rgba(255, 255, 255, 1);\\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\\n}\\n.wp-block-table td,\\n.wp-block-table th {\\n  border-width: 8px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(255, 255, 255, 1);\\n  border-color: rgba(255, 255, 255, var(--tw-border-opacity));\\n  background-color: rgba(255, 255, 255, 0.7);\\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\\n  --tw-bg-opacity: 0.7;\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.wp-block-table th {\\n  --tw-bg-opacity: 0;\\n}\\n#main .happyforms-form .happyforms-layout-title {\\n  margin-top: 3rem !important;\\n  padding-bottom: 0px !important;\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 700;\\n  line-height: 1.375;\\n}\\n#main .happyforms-form .happyforms-submit {\\n  border-radius: 1.25rem !important;\\n  border-width: 2px !important;\\n  --tw-border-opacity: 1 !important;\\n  border-color: rgba(101, 190, 197, 1) !important;\\n  border-color: rgba(101, 190, 197, var(--tw-border-opacity)) !important;\\n  --tw-bg-opacity: 1 !important;\\n  background-color: rgba(0, 162, 175, 1) !important;\\n  background-color: rgba(0, 162, 175, var(--tw-bg-opacity)) !important;\\n  --tw-text-opacity: 1 !important;\\n  color: rgba(255, 255, 255, 1) !important;\\n  color: rgba(255, 255, 255, var(--tw-text-opacity)) !important;\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  font-weight: 600;\\n}\\n#main .happyforms-form .happyforms-submit:hover {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(0, 162, 175, 1);\\n  border-color: rgba(0, 162, 175, var(--tw-border-opacity));\\n}\\n#main .happyforms-form hr {\\n  border-bottom-width: 2px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(215, 234, 237, 1);\\n  border-color: rgba(215, 234, 237, var(--tw-border-opacity));\\n}\\n#main .happyforms-part--submit {\\n  display: flex;\\n  flex-direction: row-reverse;\\n  gap: 0.5rem;\\n  flex-flow: row-reverse;\\n}\\n#main .happyforms-save-session {\\n  margin-right: 0px !important;\\n  width: 33.333333% !important;\\n  border-radius: 1.25rem !important;\\n  border-width: 2px !important;\\n  --tw-border-opacity: 1 !important;\\n  border-color: rgba(101, 190, 197, 1) !important;\\n  border-color: rgba(101, 190, 197, var(--tw-border-opacity)) !important;\\n  background-color: transparent;\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  font-weight: 600;\\n  --tw-text-opacity: 1;\\n  color: rgba(12, 12, 12, 1);\\n  color: rgba(12, 12, 12, var(--tw-text-opacity));\\n  text-decoration-line: none;\\n}\\n.happyforms-styles .happyforms-part input[type='text']:focus,\\n.happyforms-styles .happyforms-part input[type='password']:focus,\\n.happyforms-styles .happyforms-part input[type='email']:focus,\\n.happyforms-styles .happyforms-part input[type='tel']:focus,\\n.happyforms-styles .happyforms-part input[type='number']:focus,\\n.happyforms-styles .happyforms-part input[type='date']:focus,\\n.happyforms-styles .happyforms-part input[type='time']:focus,\\n.happyforms-styles .happyforms-part input[type='datetime-local']:focus,\\n.happyforms-styles .happyforms-part input[type='month']:focus,\\n.happyforms-styles .happyforms-part textarea:focus,\\n.happyforms-styles\\n  .happyforms-part--signature\\n  .happyforms--signature-area--container.focus,\\n.happyforms-styles .happyforms-part--scrollable_terms .scrollbox:focus,\\n.happyforms-styles .happyforms-part select.happyforms-select:focus {\\n  border-color: #00a0ad !important;\\n  box-shadow: inset 0 0 0 1px 00a0ad !important;\\n}\\n#main .happyforms-form {\\n  --happyforms-color-part-border-focus: #00a0ad;\\n}\\n.donate-button {\\n  display: inline-block;\\n  border-radius: 1.25rem;\\n  border-width: 2px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(0, 160, 173, 1);\\n  border-color: rgba(0, 160, 173, var(--tw-border-opacity));\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  font-weight: 600;\\n  text-decoration-line: none;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 300ms;\\n}\\n@media (min-width: 1024px) {\\n\\n  .donate-button {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n}\\nimg:not([src]) {\\n  display: none;\\n}\\na.active {\\n  font-weight: bold;\\n}\\n/* To handle quirk with ACF colour picker */\\n/* .bg-gold-default {\\n  @apply bg-gold;\\n} */\\n.alignwide,\\n.page-content > .alignwide,\\n.alignwide .wp-block {\\n  margin-left: auto;\\n  margin-right: auto;\\n  max-width: 80rem;\\n}\\n.alignfull,\\n.page-content > .alignfull,\\n.alignfull .wp-block {\\n  max-width: 100%;\\n}\\n.text-balance {\\n  text-wrap: balance;\\n}\\n.page-numbers {\\n  display: inline-flex;\\n  height: 2.5rem;\\n  width: 2.5rem;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 9999px;\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(252, 250, 249, 1);\\n  background-color: rgba(252, 250, 249, var(--tw-bg-opacity));\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  text-decoration-line: none !important;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.page-numbers:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(245, 241, 237, 1);\\n  background-color: rgba(245, 241, 237, var(--tw-bg-opacity));\\n}\\n.page-numbers.current {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(245, 241, 237, 1);\\n  background-color: rgba(245, 241, 237, var(--tw-bg-opacity));\\n  font-weight: 700;\\n}\\n.page-sidebar-tree a:hover {\\n  text-decoration-line: none;\\n}\\n.page-sidebar-tree li a {\\n  width: 100%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  padding-right: 1rem;\\n  padding-left: 1rem;\\n}\\n@media (min-width: 640px) {\\n\\n  .page-sidebar-tree li a {\\n    max-width: 640px;\\n    padding-right: 1.5rem;\\n    padding-left: 1.5rem;\\n  }\\n}\\n@media (min-width: 768px) {\\n\\n  .page-sidebar-tree li a {\\n    max-width: 768px;\\n  }\\n}\\n@media (min-width: 1024px) {\\n\\n  .page-sidebar-tree li a {\\n    max-width: 1024px;\\n    padding-right: 2rem;\\n    padding-left: 2rem;\\n  }\\n}\\n@media (min-width: 1280px) {\\n\\n  .page-sidebar-tree li a {\\n    max-width: 1280px;\\n    padding-right: 2.5rem;\\n    padding-left: 2.5rem;\\n  }\\n}\\n@media (min-width: 1536px) {\\n\\n  .page-sidebar-tree li a {\\n    max-width: 1536px;\\n    padding-right: 3rem;\\n    padding-left: 3rem;\\n  }\\n}\\n.page-sidebar-tree li a {\\n  display: block;\\n  background-color: rgba(215, 234, 237, 0);\\n  background-color: rgba(215, 234, 237, var(--tw-bg-opacity));\\n  --tw-bg-opacity: 0;\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 600;\\n  --tw-text-opacity: 1;\\n  color: rgba(1, 105, 125, 1);\\n  color: rgba(1, 105, 125, var(--tw-text-opacity));\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.page-sidebar-tree li a:hover {\\n  --tw-bg-opacity: 0.5;\\n}\\n.page-sidebar-tree .children {\\n  display: none;\\n}\\n.page-sidebar-tree .current_page_item > .children,\\n.page-sidebar-tree .current_page_ancestor > .children {\\n  display: block;\\n}\\n.page-sidebar-tree .children li a {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 0.5rem;\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n}\\n.page-sidebar-tree .children li a::before {\\n  margin-top: 0.75rem;\\n  height: 1px;\\n  width: 1.5rem;\\n  flex: none;\\n  background-color: rgba(1, 105, 125, 0.25);\\n  background-color: rgba(1, 105, 125, var(--tw-bg-opacity));\\n  content: var(--tw-content);\\n  --tw-bg-opacity: 0.25;\\n}\\n.page-sidebar-tree .current_page_item > a {\\n  --tw-bg-opacity: 1 !important;\\n}\\n.post-content,\\n.page-content {\\n  min-height: 70vh;\\n  max-width: none;\\n  word-wrap: break-word;\\n}\\n.prose :where(a):not([class~='not-prose']) {\\n  font-weight: 700;\\n  text-decoration-color: rgba(1, 105, 125, 0.2);\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  transition-property: all;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.prose :where(a):not([class~='not-prose']):hover {\\n  text-decoration-color: rgba(1, 105, 125, 0.7);\\n}\\n.post-content > :not(.wp-block-hero):first-child,\\n.page-content > :not(.wp-block-hero):first-child,\\n.page-content > .group:first-child > :not(.wp-block-hero):first-child,\\n.post-content > .group:first-child > :not(.wp-block-hero):first-child {\\n  margin-top: 0px;\\n}\\n.page-content > *,\\n.post-content > * {\\n  max-width: var(--wp--style--global--content-size);\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.page-template-default .wp-block-latest-events,\\n.page-template-default .wp-block-latest-news {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n}\\n.embedded-iframe iframe {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n.mc-field-group:not(.input-group) {\\n  margin-bottom: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  gap: 0.5rem;\\n}\\n.indicates-required {\\n  margin-left: auto;\\n  margin-bottom: 0.5rem;\\n  display: block;\\n  width: 8rem;\\n  text-align: right;\\n}\\n.input-group {\\n  margin-bottom: 1rem;\\n  background-color: rgba(238, 189, 188, 0.2);\\n  background-color: rgba(238, 189, 188, var(--tw-bg-opacity));\\n  --tw-bg-opacity: 0.2;\\n  padding: 1.5rem;\\n}\\n.mc-field-group label {\\n  width: 8rem;\\n  padding-top: 0.5rem;\\n}\\n.form-control {\\n  flex-grow: 1;\\n  border-radius: 0.25rem;\\n  border-width: 2px;\\n  border-color: rgba(1, 105, 125, 0.5);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n  --tw-border-opacity: 0.5;\\n  padding: 0.5rem;\\n}\\n.button {\\n  display: inline-block;\\n  border-radius: 9999px;\\n  border-width: 2px;\\n  --tw-border-opacity: 1;\\n  border-color: rgba(1, 105, 125, 1);\\n  border-color: rgba(1, 105, 125, var(--tw-border-opacity));\\n  background-color: rgba(255, 255, 255, 0.8);\\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\\n  --tw-bg-opacity: 0.8;\\n  padding-left: 2.5rem;\\n  padding-right: 2.5rem;\\n  padding-top: 0.625rem;\\n  padding-bottom: 0.625rem;\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n  font-weight: 600;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 300ms;\\n}\\n.button:hover {\\n  --tw-bg-opacity: 1;\\n}\\n.grecaptcha-badge {\\n  visibility: hidden;\\n}\\n[x-cloak] {\\n  display: none !important;\\n}\\n@media not all and (min-width: 1024px) {\\n\\n  .max-lg\\\\:container {\\n    width: 100%;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\\n  @media (min-width: 640px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 640px;\\n      padding-right: 1.5rem;\\n      padding-left: 1.5rem;\\n    }\\n  }\\n\\n  .max-lg\\\\:container {\\n    width: 100%;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\\n  @media (min-width: 640px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 640px;\\n      padding-right: 1.5rem;\\n      padding-left: 1.5rem;\\n    }\\n  }\\n\\n  @media (min-width: 768px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 768px;\\n    }\\n  }\\n\\n  .max-lg\\\\:container {\\n    width: 100%;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\\n  @media (min-width: 640px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 640px;\\n      padding-right: 1.5rem;\\n      padding-left: 1.5rem;\\n    }\\n  }\\n\\n  @media (min-width: 768px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 768px;\\n    }\\n  }\\n\\n  @media (min-width: 1024px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1024px;\\n      padding-right: 2rem;\\n      padding-left: 2rem;\\n    }\\n  }\\n\\n  .max-lg\\\\:container {\\n    width: 100%;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\\n  @media (min-width: 640px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 640px;\\n      padding-right: 1.5rem;\\n      padding-left: 1.5rem;\\n    }\\n  }\\n\\n  @media (min-width: 768px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 768px;\\n    }\\n  }\\n\\n  @media (min-width: 1024px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1024px;\\n      padding-right: 2rem;\\n      padding-left: 2rem;\\n    }\\n  }\\n\\n  @media (min-width: 1280px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1280px;\\n      padding-right: 2.5rem;\\n      padding-left: 2.5rem;\\n    }\\n  }\\n\\n  .max-lg\\\\:container {\\n    width: 100%;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\\n  @media (min-width: 640px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 640px;\\n      padding-right: 1.5rem;\\n      padding-left: 1.5rem;\\n    }\\n  }\\n\\n  @media (min-width: 768px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 768px;\\n    }\\n  }\\n\\n  @media (min-width: 1024px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1024px;\\n      padding-right: 2rem;\\n      padding-left: 2rem;\\n    }\\n  }\\n\\n  @media (min-width: 1280px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1280px;\\n      padding-right: 2.5rem;\\n      padding-left: 2.5rem;\\n    }\\n  }\\n\\n  @media (min-width: 1536px) {\\n\\n    .max-lg\\\\:container {\\n      max-width: 1536px;\\n      padding-right: 3rem;\\n      padding-left: 3rem;\\n    }\\n  }\\n}\\n@media (min-width: 1280px) {\\n\\n  .xl\\\\:prose-lg {\\n    font-size: 1.125rem;\\n    line-height: 1.7777778;\\n  }\\n\\n  .xl\\\\:prose-lg :where(p):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n    margin-bottom: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where([class~=\\\"lead\\\"]):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 1.2222222em;\\n    line-height: 1.4545455;\\n    margin-top: 1.0909091em;\\n    margin-bottom: 1.0909091em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(blockquote):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.6666667em;\\n    margin-bottom: 1.6666667em;\\n    padding-left: 1em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h1):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 2.6666667em;\\n    margin-top: 0;\\n    margin-bottom: 0.8333333em;\\n    line-height: 1;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h2):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 1.6666667em;\\n    margin-top: 1.8666667em;\\n    margin-bottom: 1.0666667em;\\n    line-height: 1.3333333;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h3):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 1.3333333em;\\n    margin-top: 1.6666667em;\\n    margin-bottom: 0.6666667em;\\n    line-height: 1.5;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h4):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.7777778em;\\n    margin-bottom: 0.4444444em;\\n    line-height: 1.5555556;\\n  }\\n\\n  .xl\\\\:prose-lg :where(img):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.7777778em;\\n    margin-bottom: 1.7777778em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(picture):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.7777778em;\\n    margin-bottom: 1.7777778em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(picture > img):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(video):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.7777778em;\\n    margin-bottom: 1.7777778em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(kbd):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8888889em;\\n    border-radius: 0.3125rem;\\n    padding-top: 0.2222222em;\\n    padding-right: 0.4444444em;\\n    padding-bottom: 0.2222222em;\\n    padding-left: 0.4444444em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8888889em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h2 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8666667em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h3 code):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.875em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(pre):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8888889em;\\n    line-height: 1.75;\\n    margin-top: 2em;\\n    margin-bottom: 2em;\\n    border-radius: 0.375rem;\\n    padding-top: 1em;\\n    padding-right: 1.5em;\\n    padding-bottom: 1em;\\n    padding-left: 1.5em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(ol):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n    margin-bottom: 1.3333333em;\\n    padding-left: 1.5555556em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(ul):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n    margin-bottom: 1.3333333em;\\n    padding-left: 1.5555556em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0.6666667em;\\n    margin-bottom: 0.6666667em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(ol > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-left: 0.4444444em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(ul > li):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-left: 0.4444444em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > ul > li p):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0.8888889em;\\n    margin-bottom: 0.8888889em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > ul > li > p:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > ul > li > p:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-bottom: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > ol > li > p:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > ol > li > p:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-bottom: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0.8888889em;\\n    margin-bottom: 0.8888889em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(dl):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n    margin-bottom: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(dt):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.3333333em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(dd):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0.6666667em;\\n    padding-left: 1.5555556em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(hr):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 3.1111111em;\\n    margin-bottom: 3.1111111em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(hr + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h2 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h3 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(h4 + *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(table):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8888889em;\\n    line-height: 1.5;\\n  }\\n\\n  .xl\\\\:prose-lg :where(thead th):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-right: 0.75em;\\n    padding-bottom: 0.75em;\\n    padding-left: 0.75em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(thead th:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-left: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(thead th:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-right: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(tbody td, tfoot td):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-top: 0.75em;\\n    padding-right: 0.75em;\\n    padding-bottom: 0.75em;\\n    padding-left: 0.75em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-left: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    padding-right: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(figure):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 1.7777778em;\\n    margin-bottom: 1.7777778em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(figure > *):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(figcaption):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    font-size: 0.8888889em;\\n    line-height: 1.5;\\n    margin-top: 1em;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > :first-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-top: 0;\\n  }\\n\\n  .xl\\\\:prose-lg :where(.xl\\\\:prose-lg > :last-child):not(:where([class~=\\\"not-prose\\\"],[class~=\\\"not-prose\\\"] *)) {\\n    margin-bottom: 0;\\n  }\\n}\\n.before\\\\:absolute::before {\\n  content: var(--tw-content);\\n  position: absolute;\\n}\\n.before\\\\:inset-0::before {\\n  content: var(--tw-content);\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n}\\n.after\\\\:absolute::after {\\n  content: var(--tw-content);\\n  position: absolute;\\n}\\n.after\\\\:inset-0::after {\\n  content: var(--tw-content);\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n}\\n.after\\\\:bottom-0::after {\\n  content: var(--tw-content);\\n  bottom: 0px;\\n}\\n.after\\\\:left-0::after {\\n  content: var(--tw-content);\\n  left: 0px;\\n}\\n.after\\\\:right-0::after {\\n  content: var(--tw-content);\\n  right: 0px;\\n}\\n.after\\\\:right-1::after {\\n  content: var(--tw-content);\\n  right: 0.25rem;\\n}\\n.after\\\\:top-2::after {\\n  content: var(--tw-content);\\n  top: 0.5rem;\\n}\\n.after\\\\:block::after {\\n  content: var(--tw-content);\\n  display: block;\\n}\\n.after\\\\:size-0::after {\\n  content: var(--tw-content);\\n  width: 0px;\\n  height: 0px;\\n}\\n.after\\\\:size-6::after {\\n  content: var(--tw-content);\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n.after\\\\:h-\\\\[2px\\\\]::after {\\n  content: var(--tw-content);\\n  height: 2px;\\n}\\n.after\\\\:rounded-full::after {\\n  content: var(--tw-content);\\n  border-radius: 9999px;\\n}\\n.after\\\\:bg-blue-bright::after {\\n  content: var(--tw-content);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(0, 160, 173, 1);\\n  background-color: rgba(0, 160, 173, var(--tw-bg-opacity));\\n}\\n.after\\\\:bg-gold::after {\\n  content: var(--tw-content);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(255, 209, 158, 1);\\n  background-color: rgba(255, 209, 158, var(--tw-bg-opacity));\\n}\\n.after\\\\:bg-green::after {\\n  content: var(--tw-content);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(101, 190, 197, 1);\\n  background-color: rgba(101, 190, 197, var(--tw-bg-opacity));\\n}\\n.after\\\\:transition-all::after {\\n  content: var(--tw-content);\\n  transition-property: all;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n.hover\\\\:border-blue-dark:hover {\\n  --tw-border-opacity: 1;\\n  border-color: rgba(7, 77, 86, 1);\\n  border-color: rgba(7, 77, 86, var(--tw-border-opacity));\\n}\\n.hover\\\\:bg-blue:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(1, 105, 125, 1);\\n  background-color: rgba(1, 105, 125, var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-blue-light:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(215, 234, 237, 1);\\n  background-color: rgba(215, 234, 237, var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-green:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(101, 190, 197, 1);\\n  background-color: rgba(101, 190, 197, var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-green-light:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(241, 248, 249, 1);\\n  background-color: rgba(241, 248, 249, var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-opacity-100:hover {\\n  --tw-bg-opacity: 1;\\n}\\n.hover\\\\:bg-opacity-20:hover {\\n  --tw-bg-opacity: 0.2;\\n}\\n.hover\\\\:bg-opacity-40:hover {\\n  --tw-bg-opacity: 0.4;\\n}\\n.hover\\\\:bg-opacity-50:hover {\\n  --tw-bg-opacity: 0.5;\\n}\\n.hover\\\\:text-black:hover {\\n  --tw-text-opacity: 1;\\n  color: rgba(12, 12, 12, 1);\\n  color: rgba(12, 12, 12, var(--tw-text-opacity));\\n}\\n.hover\\\\:text-white:hover {\\n  --tw-text-opacity: 1;\\n  color: rgba(255, 255, 255, 1);\\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\\n}\\n.hover\\\\:after\\\\:h-\\\\[3px\\\\]:hover::after {\\n  content: var(--tw-content);\\n  height: 3px;\\n}\\n.focus\\\\:not-sr-only:focus {\\n  position: static;\\n  width: auto;\\n  height: auto;\\n  padding: 0;\\n  margin: 0;\\n  overflow: visible;\\n  clip: auto;\\n  white-space: normal;\\n}\\n.focus\\\\:ring-blue-bright:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgba(0, 160, 173, var(--tw-ring-opacity));\\n}\\n.focus-visible\\\\:border-b-2:focus-visible {\\n  border-bottom-width: 2px;\\n}\\n.focus-visible\\\\:outline-none:focus-visible {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\n.group:hover .group-hover\\\\:translate-x-0 {\\n  --tw-translate-x: 0px;\\n  transform: translate(0px, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.group:hover .group-hover\\\\:scale-105 {\\n  --tw-scale-x: 1.05;\\n  --tw-scale-y: 1.05;\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(1.05) scaleY(1.05);\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n.group:hover .group-hover\\\\:bg-gold {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(255, 209, 158, 1);\\n  background-color: rgba(255, 209, 158, var(--tw-bg-opacity));\\n}\\n.group:hover .group-hover\\\\:bg-pink {\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(238, 189, 188, 1);\\n  background-color: rgba(238, 189, 188, var(--tw-bg-opacity));\\n}\\n.group:hover .group-hover\\\\:bg-opacity-100 {\\n  --tw-bg-opacity: 1;\\n}\\n.group:hover .group-hover\\\\:bg-opacity-30 {\\n  --tw-bg-opacity: 0.3;\\n}\\n.group:hover .group-hover\\\\:bg-opacity-40 {\\n  --tw-bg-opacity: 0.4;\\n}\\n.group:hover .group-hover\\\\:opacity-100 {\\n  opacity: 1;\\n}\\n.group:hover .group-hover\\\\:opacity-70 {\\n  opacity: 0.7;\\n}\\n@media not all and (min-width: 1024px) {\\n\\n  .max-lg\\\\:fixed {\\n    position: fixed;\\n  }\\n\\n  .max-lg\\\\:inset-0 {\\n    top: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    left: 0px;\\n  }\\n\\n  .max-lg\\\\:top-0 {\\n    top: 0px;\\n  }\\n\\n  .max-lg\\\\:z-20 {\\n    z-index: 20;\\n  }\\n\\n  .max-lg\\\\:\\\\!mx-4 {\\n    margin-left: 1rem !important;\\n    margin-right: 1rem !important;\\n  }\\n\\n  .max-lg\\\\:h-full {\\n    height: 100%;\\n  }\\n\\n  .max-lg\\\\:w-full {\\n    width: 100%;\\n  }\\n\\n  .max-lg\\\\:translate-x-full {\\n    --tw-translate-x: 100%;\\n    transform: translate(100%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .max-lg\\\\:rounded-medium {\\n    border-radius: 2rem;\\n  }\\n\\n  .max-lg\\\\:bg-blue {\\n    --tw-bg-opacity: 1;\\n    background-color: rgba(1, 105, 125, 1);\\n    background-color: rgba(1, 105, 125, var(--tw-bg-opacity));\\n  }\\n\\n  .max-lg\\\\:bg-blue-light {\\n    --tw-bg-opacity: 1;\\n    background-color: rgba(215, 234, 237, 1);\\n    background-color: rgba(215, 234, 237, var(--tw-bg-opacity));\\n  }\\n\\n  .max-lg\\\\:p-4 {\\n    padding: 1rem;\\n  }\\n\\n  .max-lg\\\\:py-36 {\\n    padding-top: 9rem;\\n    padding-bottom: 9rem;\\n  }\\n\\n  .max-lg\\\\:text-2xl {\\n    font-size: 1.5rem;\\n    line-height: 2rem;\\n  }\\n\\n  .max-lg\\\\:text-white {\\n    --tw-text-opacity: 1;\\n    color: rgba(255, 255, 255, 1);\\n    color: rgba(255, 255, 255, var(--tw-text-opacity));\\n  }\\n}\\n@media (min-width: 768px) {\\n\\n  .md\\\\:static {\\n    position: static;\\n  }\\n\\n  .md\\\\:-left-16 {\\n    left: -4rem;\\n  }\\n\\n  .md\\\\:left-0 {\\n    left: 0px;\\n  }\\n\\n  .md\\\\:right-auto {\\n    right: auto;\\n  }\\n\\n  .md\\\\:top-1\\\\/2 {\\n    top: 50%;\\n  }\\n\\n  .md\\\\:my-8 {\\n    margin-top: 2rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .md\\\\:-mb-24 {\\n    margin-bottom: -6rem;\\n  }\\n\\n  .md\\\\:-mt-0 {\\n    margin-top: -0px;\\n  }\\n\\n  .md\\\\:-mt-0\\\\.5 {\\n    margin-top: -0.125rem;\\n  }\\n\\n  .md\\\\:mb-0 {\\n    margin-bottom: 0px;\\n  }\\n\\n  .md\\\\:mb-12 {\\n    margin-bottom: 3rem;\\n  }\\n\\n  .md\\\\:mb-16 {\\n    margin-bottom: 4rem;\\n  }\\n\\n  .md\\\\:mb-2 {\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  .md\\\\:mb-24 {\\n    margin-bottom: 6rem;\\n  }\\n\\n  .md\\\\:mb-4 {\\n    margin-bottom: 1rem;\\n  }\\n\\n  .md\\\\:mb-6 {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .md\\\\:mb-8 {\\n    margin-bottom: 2rem;\\n  }\\n\\n  .md\\\\:ml-auto {\\n    margin-left: auto;\\n  }\\n\\n  .md\\\\:mr-2 {\\n    margin-right: 0.5rem;\\n  }\\n\\n  .md\\\\:mt-0 {\\n    margin-top: 0px;\\n  }\\n\\n  .md\\\\:mt-16 {\\n    margin-top: 4rem;\\n  }\\n\\n  .md\\\\:mt-2 {\\n    margin-top: 0.5rem;\\n  }\\n\\n  .md\\\\:block {\\n    display: block;\\n  }\\n\\n  .md\\\\:grid {\\n    display: grid;\\n  }\\n\\n  .md\\\\:aspect-\\\\[3\\\\/2\\\\] {\\n    aspect-ratio: 3/2;\\n  }\\n\\n  .md\\\\:aspect-auto {\\n    aspect-ratio: auto;\\n  }\\n\\n  .md\\\\:h-56 {\\n    height: 14rem;\\n  }\\n\\n  .md\\\\:h-6 {\\n    height: 1.5rem;\\n  }\\n\\n  .md\\\\:h-\\\\[33vw\\\\] {\\n    height: 33vw;\\n  }\\n\\n  .md\\\\:max-h-\\\\[36rem\\\\] {\\n    max-height: 36rem;\\n  }\\n\\n  .md\\\\:min-h-48 {\\n    min-height: 12rem;\\n  }\\n\\n  .md\\\\:min-h-\\\\[24rem\\\\] {\\n    min-height: 24rem;\\n  }\\n\\n  .md\\\\:min-h-\\\\[36rem\\\\] {\\n    min-height: 36rem;\\n  }\\n\\n  .md\\\\:\\\\!w-48 {\\n    width: 12rem !important;\\n  }\\n\\n  .md\\\\:w-1\\\\/2 {\\n    width: 50%;\\n  }\\n\\n  .md\\\\:w-1\\\\/3 {\\n    width: 33.333333%;\\n  }\\n\\n  .md\\\\:w-2\\\\/5 {\\n    width: 40%;\\n  }\\n\\n  .md\\\\:w-48 {\\n    width: 12rem;\\n  }\\n\\n  .md\\\\:w-6 {\\n    width: 1.5rem;\\n  }\\n\\n  .md\\\\:w-\\\\[50vw\\\\] {\\n    width: 50vw;\\n  }\\n\\n  .md\\\\:w-full {\\n    width: 100%;\\n  }\\n\\n  .md\\\\:min-w-96 {\\n    min-width: 24rem;\\n  }\\n\\n  .md\\\\:-translate-y-1\\\\/2 {\\n    --tw-translate-y: -50%;\\n    transform: translate(var(--tw-translate-x), -50%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .md\\\\:translate-x-0 {\\n    --tw-translate-x: 0px;\\n    transform: translate(0px, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .md\\\\:translate-y-0 {\\n    --tw-translate-y: 0px;\\n    transform: translate(var(--tw-translate-x), 0px) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n  }\\n\\n  .md\\\\:grid-cols-2 {\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:grid-cols-4 {\\n    grid-template-columns: repeat(4, minmax(0, 1fr));\\n  }\\n\\n  .md\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .md\\\\:items-end {\\n    align-items: flex-end;\\n  }\\n\\n  .md\\\\:items-center {\\n    align-items: center;\\n  }\\n\\n  .md\\\\:justify-end {\\n    justify-content: flex-end;\\n  }\\n\\n  .md\\\\:justify-between {\\n    justify-content: space-between;\\n  }\\n\\n  .md\\\\:gap-16 {\\n    gap: 4rem;\\n  }\\n\\n  .md\\\\:gap-3 {\\n    gap: 0.75rem;\\n  }\\n\\n  .md\\\\:gap-4 {\\n    gap: 1rem;\\n  }\\n\\n  .md\\\\:gap-6 {\\n    gap: 1.5rem;\\n  }\\n\\n  .md\\\\:gap-8 {\\n    gap: 2rem;\\n  }\\n\\n  .md\\\\:gap-x-12 {\\n    -moz-column-gap: 3rem;\\n         column-gap: 3rem;\\n  }\\n\\n  .md\\\\:gap-y-8 {\\n    row-gap: 2rem;\\n  }\\n\\n  .md\\\\:space-y-8 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-y-reverse: 0;\\n    margin-top: calc(2rem * (1 - 0));\\n    margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));\\n    margin-top: calc(2rem * calc(1 - 0));\\n    margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));\\n    margin-bottom: calc(2rem * 0);\\n    margin-bottom: calc(2rem * var(--tw-space-y-reverse));\\n  }\\n\\n  .md\\\\:self-stretch {\\n    align-self: stretch;\\n  }\\n\\n  .md\\\\:overflow-hidden {\\n    overflow: hidden;\\n  }\\n\\n  .md\\\\:rounded-big {\\n    border-radius: 7rem;\\n  }\\n\\n  .md\\\\:rounded-medium {\\n    border-radius: 2rem;\\n  }\\n\\n  .md\\\\:border-b {\\n    border-bottom-width: 1px;\\n  }\\n\\n  .md\\\\:bg-white {\\n    --tw-bg-opacity: 1;\\n    background-color: rgba(255, 255, 255, 1);\\n    background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\\n  }\\n\\n  .md\\\\:p-12 {\\n    padding: 3rem;\\n  }\\n\\n  .md\\\\:p-6 {\\n    padding: 1.5rem;\\n  }\\n\\n  .md\\\\:p-8 {\\n    padding: 2rem;\\n  }\\n\\n  .md\\\\:px-0 {\\n    padding-left: 0px;\\n    padding-right: 0px;\\n  }\\n\\n  .md\\\\:px-8 {\\n    padding-left: 2rem;\\n    padding-right: 2rem;\\n  }\\n\\n  .md\\\\:py-16 {\\n    padding-top: 4rem;\\n    padding-bottom: 4rem;\\n  }\\n\\n  .md\\\\:py-4 {\\n    padding-top: 1rem;\\n    padding-bottom: 1rem;\\n  }\\n\\n  .md\\\\:py-6 {\\n    padding-top: 1.5rem;\\n    padding-bottom: 1.5rem;\\n  }\\n\\n  .md\\\\:py-8 {\\n    padding-top: 2rem;\\n    padding-bottom: 2rem;\\n  }\\n\\n  .md\\\\:pb-24 {\\n    padding-bottom: 6rem;\\n  }\\n\\n  .md\\\\:pb-8 {\\n    padding-bottom: 2rem;\\n  }\\n\\n  .md\\\\:pl-4 {\\n    padding-left: 1rem;\\n  }\\n\\n  .md\\\\:pl-8 {\\n    padding-left: 2rem;\\n  }\\n\\n  .md\\\\:pr-0 {\\n    padding-right: 0px;\\n  }\\n\\n  .md\\\\:pr-12 {\\n    padding-right: 3rem;\\n  }\\n\\n  .md\\\\:pt-12 {\\n    padding-top: 3rem;\\n  }\\n\\n  .md\\\\:pt-24 {\\n    padding-top: 6rem;\\n  }\\n\\n  .md\\\\:pt-8 {\\n    padding-top: 2rem;\\n  }\\n\\n  .md\\\\:text-left {\\n    text-align: left;\\n  }\\n\\n  .md\\\\:text-right {\\n    text-align: right;\\n  }\\n\\n  .md\\\\:text-2xl {\\n    font-size: 1.5rem;\\n    line-height: 2rem;\\n  }\\n\\n  .md\\\\:text-xl {\\n    font-size: 1.25rem;\\n    line-height: 1.75rem;\\n  }\\n\\n  .md\\\\:text-blue-dark {\\n    --tw-text-opacity: 1;\\n    color: rgba(7, 77, 86, 1);\\n    color: rgba(7, 77, 86, var(--tw-text-opacity));\\n  }\\n\\n  .md\\\\:type-lg {\\n    font-size: 1.5rem;\\n    line-height: 2rem;\\n    font-weight: 600;\\n    line-height: 1.375;\\n  }\\n\\n  .md\\\\:type-md {\\n    font-size: 1.25rem;\\n    line-height: 1.75rem;\\n    font-weight: 700;\\n    line-height: 1.375;\\n  }\\n\\n  .md\\\\:type-sm {\\n    font-size: 1.125rem;\\n    line-height: 1.75rem;\\n    font-weight: 600;\\n    line-height: 1.375;\\n  }\\n  .md\\\\:clip-landscape {\\n    clip-path: url(#clip-landscape);\\n    aspect-ratio: 1.5;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n\\n  .md\\\\:clip-oval-part {\\n    clip-path: url(#clip-oval-part);\\n    aspect-ratio: 1.15;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n\\n  .md\\\\:clip-oval-part-2 {\\n    clip-path: url(#clip-oval-part-2);\\n    aspect-ratio: 1;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n  }\\n\\n  .md\\\\:after\\\\:size-6::after {\\n    content: var(--tw-content);\\n    width: 1.5rem;\\n    height: 1.5rem;\\n  }\\n\\n  .md\\\\:after\\\\:size-8::after {\\n    content: var(--tw-content);\\n    width: 2rem;\\n    height: 2rem;\\n  }\\n}\\n@media (min-width: 1024px) {\\n\\n  .lg\\\\:static {\\n    position: static;\\n  }\\n\\n  .lg\\\\:sticky {\\n    position: sticky;\\n  }\\n\\n  .lg\\\\:-bottom-64 {\\n    bottom: -16rem;\\n  }\\n\\n  .lg\\\\:top-12 {\\n    top: 3rem;\\n  }\\n\\n  .lg\\\\:mb-8 {\\n    margin-bottom: 2rem;\\n  }\\n\\n  .lg\\\\:ml-auto {\\n    margin-left: auto;\\n  }\\n\\n  .lg\\\\:mt-10 {\\n    margin-top: 2.5rem;\\n  }\\n\\n  .lg\\\\:mt-8 {\\n    margin-top: 2rem;\\n  }\\n\\n  .lg\\\\:block {\\n    display: block;\\n  }\\n\\n  .lg\\\\:inline-block {\\n    display: inline-block;\\n  }\\n\\n  .lg\\\\:flex {\\n    display: flex;\\n  }\\n\\n  .lg\\\\:hidden {\\n    display: none;\\n  }\\n\\n  .lg\\\\:min-h-\\\\[20rem\\\\] {\\n    min-height: 20rem;\\n  }\\n\\n  .lg\\\\:w-1\\\\/2 {\\n    width: 50%;\\n  }\\n\\n  .lg\\\\:w-48 {\\n    width: 12rem;\\n  }\\n\\n  .lg\\\\:w-96 {\\n    width: 24rem;\\n  }\\n\\n  .lg\\\\:w-\\\\[20vw\\\\] {\\n    width: 20vw;\\n  }\\n\\n  .lg\\\\:w-\\\\[35vw\\\\] {\\n    width: 35vw;\\n  }\\n\\n  .lg\\\\:max-w-4xl {\\n    max-width: 56rem;\\n  }\\n\\n  .lg\\\\:max-w-5xl {\\n    max-width: 64rem;\\n  }\\n\\n  .lg\\\\:max-w-md {\\n    max-width: 28rem;\\n  }\\n\\n  .lg\\\\:max-w-sm {\\n    max-width: 24rem;\\n  }\\n\\n  .lg\\\\:max-w-xl {\\n    max-width: 36rem;\\n  }\\n\\n  .lg\\\\:flex-row {\\n    flex-direction: row;\\n  }\\n\\n  .lg\\\\:flex-row-reverse {\\n    flex-direction: row-reverse;\\n  }\\n\\n  .lg\\\\:items-end {\\n    align-items: flex-end;\\n  }\\n\\n  .lg\\\\:justify-end {\\n    justify-content: flex-end;\\n  }\\n\\n  .lg\\\\:gap-1 {\\n    gap: 0.25rem;\\n  }\\n\\n  .lg\\\\:gap-12 {\\n    gap: 3rem;\\n  }\\n\\n  .lg\\\\:gap-16 {\\n    gap: 4rem;\\n  }\\n\\n  .lg\\\\:gap-6 {\\n    gap: 1.5rem;\\n  }\\n\\n  .lg\\\\:gap-8 {\\n    gap: 2rem;\\n  }\\n\\n  .lg\\\\:space-y-8 > :not([hidden]) ~ :not([hidden]) {\\n    --tw-space-y-reverse: 0;\\n    margin-top: calc(2rem * (1 - 0));\\n    margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));\\n    margin-top: calc(2rem * calc(1 - 0));\\n    margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));\\n    margin-bottom: calc(2rem * 0);\\n    margin-bottom: calc(2rem * var(--tw-space-y-reverse));\\n  }\\n\\n  .lg\\\\:border-l-\\\\[1\\\\.25rem\\\\] {\\n    border-left-width: 1.25rem;\\n  }\\n\\n  .lg\\\\:border-t {\\n    border-top-width: 1px;\\n  }\\n\\n  .lg\\\\:border-blue-bright {\\n    --tw-border-opacity: 1;\\n    border-color: rgba(0, 160, 173, 1);\\n    border-color: rgba(0, 160, 173, var(--tw-border-opacity));\\n  }\\n\\n  .lg\\\\:p-16 {\\n    padding: 4rem;\\n  }\\n\\n  .lg\\\\:px-0 {\\n    padding-left: 0px;\\n    padding-right: 0px;\\n  }\\n\\n  .lg\\\\:py-2 {\\n    padding-top: 0.5rem;\\n    padding-bottom: 0.5rem;\\n  }\\n\\n  .lg\\\\:py-6 {\\n    padding-top: 1.5rem;\\n    padding-bottom: 1.5rem;\\n  }\\n\\n  .lg\\\\:pb-12 {\\n    padding-bottom: 3rem;\\n  }\\n\\n  .lg\\\\:pb-3 {\\n    padding-bottom: 0.75rem;\\n  }\\n\\n  .lg\\\\:pb-32 {\\n    padding-bottom: 8rem;\\n  }\\n\\n  .lg\\\\:pb-8 {\\n    padding-bottom: 2rem;\\n  }\\n\\n  .lg\\\\:pl-8 {\\n    padding-left: 2rem;\\n  }\\n\\n  .lg\\\\:pr-0 {\\n    padding-right: 0px;\\n  }\\n\\n  .lg\\\\:pr-12 {\\n    padding-right: 3rem;\\n  }\\n\\n  .lg\\\\:pt-6 {\\n    padding-top: 1.5rem;\\n  }\\n\\n  .lg\\\\:text-2xl {\\n    font-size: 1.5rem;\\n    line-height: 2rem;\\n  }\\n\\n  .lg\\\\:text-3xl {\\n    font-size: 1.875rem;\\n    line-height: 2.25rem;\\n  }\\n\\n  .lg\\\\:text-6xl {\\n    font-size: 3.75rem;\\n    line-height: 1;\\n  }\\n\\n  .lg\\\\:text-lg {\\n    font-size: 1.125rem;\\n    line-height: 1.75rem;\\n  }\\n\\n  .lg\\\\:text-xl {\\n    font-size: 1.25rem;\\n    line-height: 1.75rem;\\n  }\\n\\n  .lg\\\\:text-blue-dark {\\n    --tw-text-opacity: 1;\\n    color: rgba(7, 77, 86, 1);\\n    color: rgba(7, 77, 86, var(--tw-text-opacity));\\n  }\\n}\\n@media (min-width: 1280px) {\\n\\n  .xl\\\\:my-12 {\\n    margin-top: 3rem;\\n    margin-bottom: 3rem;\\n  }\\n\\n  .xl\\\\:mb-24 {\\n    margin-bottom: 6rem;\\n  }\\n\\n  .xl\\\\:ml-8 {\\n    margin-left: 2rem;\\n  }\\n\\n  .xl\\\\:block {\\n    display: block;\\n  }\\n\\n  .xl\\\\:max-w-5xl {\\n    max-width: 64rem;\\n  }\\n\\n  .xl\\\\:gap-12 {\\n    gap: 3rem;\\n  }\\n\\n  .xl\\\\:gap-8 {\\n    gap: 2rem;\\n  }\\n\\n  .xl\\\\:rounded-big {\\n    border-radius: 7rem;\\n  }\\n\\n  .xl\\\\:p-16 {\\n    padding: 4rem;\\n  }\\n\\n  .xl\\\\:px-0 {\\n    padding-left: 0px;\\n    padding-right: 0px;\\n  }\\n\\n  .xl\\\\:pt-16 {\\n    padding-top: 4rem;\\n  }\\n\\n  .xl\\\\:text-base {\\n    font-size: 1rem;\\n    line-height: 1.5rem;\\n  }\\n\\n  .xl\\\\:text-xl {\\n    font-size: 1.25rem;\\n    line-height: 1.75rem;\\n  }\\n}\\n@media (min-width: 1536px) {\\n\\n  .\\\\32xl\\\\:-top-24 {\\n    top: -6rem;\\n  }\\n\\n  .\\\\32xl\\\\:my-16 {\\n    margin-top: 4rem;\\n    margin-bottom: 4rem;\\n  }\\n\\n  .\\\\32xl\\\\:my-24 {\\n    margin-top: 6rem;\\n    margin-bottom: 6rem;\\n  }\\n\\n  .\\\\32xl\\\\:h-\\\\[calc\\\\(50\\\\%\\\\+6rem\\\\)\\\\] {\\n    height: calc(50% + 6rem);\\n  }\\n\\n  .\\\\32xl\\\\:w-\\\\[calc\\\\(50\\\\%\\\\+6rem\\\\)\\\\] {\\n    width: calc(50% + 6rem);\\n  }\\n\\n  .\\\\32xl\\\\:max-w-6xl {\\n    max-width: 72rem;\\n  }\\n\\n  .\\\\32xl\\\\:py-24 {\\n    padding-top: 6rem;\\n    padding-bottom: 6rem;\\n  }\\n\\n  .\\\\32xl\\\\:pt-36 {\\n    padding-top: 9rem;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/tailwindcss/base.css\",\"webpack://./../node_modules/tailwindcss/components.css\",\"webpack://./../node_modules/tailwindcss/utilities.css\",\"webpack://./styles/common/_type.css\",\"webpack://./styles/common/_clips.css\",\"webpack://./styles/common/_block-styles.css\",\"webpack://./styles/common/_forms.css\",\"webpack://./styles/common/global.css\",\"webpack://./styles/app.css\"],\"names\":[],\"mappings\":\"AAAA;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,0BAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;;CAAc;;AAAd;;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,qFAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,wCAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,0BAAc;EAAd,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gCAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;EAAd;IAAA,wBAAc;IAAd,gBAAc;IAAd,4DAAc;EAAA;;EAAd;IAAA,wBAAc;IAAd,gBAAc;IAAd,4DAAc;EAAA;;EAAd;IAAA,wBAAc;IAAd,gBAAc;IAAd,4DAAc;EAAA;;EAAd;IAAA,wBAAc;IAAd,gBAAc;IAAd,4DAAc;EAAA;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,wCAAc;EAAd,0CAAc;EAAd,mCAAc;EAAd,8BAAc;EAAd,sCAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,wCAAc;EAAd,0CAAc;EAAd,mCAAc;EAAd,8BAAc;EAAd,sCAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;ACAd;EAAA,WAAoB;EAApB,kBAAoB;EAApB,iBAAoB;EAApB,mBAAoB;EAApB;AAAoB;AAApB;;EAAA;IAAA,gBAAoB;IAApB,qBAAoB;IAApB;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA,iBAAoB;IAApB,mBAAoB;IAApB;EAAoB;AAAA;AAApB;;EAAA;IAAA,iBAAoB;IAApB,qBAAoB;IAApB;EAAoB;AAAA;AAApB;;EAAA;IAAA,iBAAoB;IAApB,mBAAoB;IAApB;EAAoB;AAAA;AAApB;EAAA,2BAAoB;EAApB,eAAoB;AAAA;AAApB;EAAA,kBAAoB;EAApB;AAAoB;AAApB;EAAA,2BAAoB;EAApB,iBAAoB;EAApB,gBAAoB;EAApB,iBAAoB;EAApB;AAAoB;AAApB;EAAA,4BAAoB;EAApB,kCAAoB;EAApB,0BAAoB;EAApB;AAAoB;AAApB;EAAA,2BAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,wBAAoB;EAApB,kBAAoB;EAApB,qBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,qBAAoB;EAApB,kBAAoB;EAApB,qBAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB;AAAoB;AAApB;EAAA,gCAAoB;EAApB,qBAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB,kBAAoB;EAApB,6BAAoB;EAApB,0BAAoB;EAApB,gDAAoB;EAApB,oCAAoB;EAApB,iBAAoB;EAApB,oBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB,iBAAoB;EAApB,aAAoB;EAApB,0BAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB,gBAAoB;EAApB,eAAoB;EAApB,kBAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB,iBAAoB;EAApB,iBAAoB;EAApB,oBAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB,iBAAoB;EAApB,oBAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB;AAAoB;AAApB;EAAA,eAAoB;EAApB;AAAoB;AAApB;EAAA,cAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,eAAoB;EAApB;AAAoB;AAApB;EAAA,gBAAoB;EAApB,oBAAoB;EAApB,0BAAoB;EAApB,4GAAoB;EAApB,kBAAoB;EAApB,wBAAoB;EAApB,qBAAoB;EAApB,sBAAoB;EAApB,wBAAoB;EAApB;AAAoB;AAApB;EAAA,2BAAoB;EAApB,gBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,cAAoB;EAApB;AAAoB;AAApB;EAAA,cAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,+BAAoB;EAApB,wCAAoB;EAApB,gBAAoB;EAApB,gBAAoB;EAApB,kBAAoB;EAApB,sBAAoB;EAApB,uBAAoB;EAApB,0BAAoB;EAApB,uBAAoB;EAApB,wBAAoB;EAApB,0BAAoB;EAApB,2BAAoB;EAApB;AAAoB;AAApB;EAAA,6BAAoB;EAApB,eAAoB;EAApB,gBAAoB;EAApB,UAAoB;EAApB,oBAAoB;EAApB,cAAoB;EAApB,kBAAoB;EAApB,oBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,WAAoB;EAApB,kBAAoB;EAApB,eAAoB;EAApB,kBAAoB;EAApB,kBAAoB;EAApB;AAAoB;AAApB;EAAA,wBAAoB;EAApB;AAAoB;AAApB;EAAA,+BAAoB;EAApB,gBAAoB;EAApB,sBAAoB;EAApB,0BAAoB;EAApB,2BAAoB;EAApB;AAAoB;AAApB;EAAA,wBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,qBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,aAAoB;EAApB;AAAoB;AAApB;EAAA,+BAAoB;EAApB,kBAAoB;EAApB,sBAAoB;EAApB;AAAoB;AAApB;EAAA,aAAoB;EAApB,uBAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,aAAoB;EAApB,uBAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,aAAoB;EAApB,uBAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,aAAoB;EAApB,uBAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,4BAAoB;EAApB,2BAAoB;EAApB,sBAAoB;EAApB,0BAAoB;EAApB,iCAAoB;EAApB,4BAAoB;EAApB,uBAAoB;EAApB,gCAAoB;EAApB,wBAAoB;EAApB,4BAAoB;EAApB,0BAAoB;EAApB,8BAAoB;EAApB,8BAAoB;EAApB,+BAAoB;EAApB,gCAAoB;EAApB,+BAAoB;EAApB,6BAAoB;EAApB,4BAAoB;EAApB,mCAAoB;EAApB,kCAAoB;EAApB,6BAAoB;EAApB,iCAAoB;EAApB,wCAAoB;EAApB,mCAAoB;EAApB,2BAAoB;EAApB,0CAAoB;EAApB,4BAAoB;EAApB,mCAAoB;EAApB,4CAAoB;EAApB,qCAAoB;EAApB,qCAAoB;EAApB,eAAoB;EAApB;AAAoB;AAApB;EAAA,aAAoB;EAApB;AAAoB;AAApB;EAAA,iBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,kBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,kBAAoB;EAApB;AAAoB;AAApB;EAAA,kBAAoB;EAApB;AAAoB;AAApB;EAAA,iBAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,wBAAoB;EAApB,0BAAoB;EAApB,2BAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA,eAAoB;EAApB;AAAoB;AAApB;EAAA;AAAoB;AAApB;EAAA;AAAoB;ACApB;EAAA,kBAAmB;EAAnB,UAAmB;EAAnB,WAAmB;EAAnB,UAAmB;EAAnB,YAAmB;EAAnB,gBAAmB;EAAnB,sBAAmB;EAAnB,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,QAAmB;EAAnB,UAAmB;EAAnB,WAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,0BAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,WAAmB;EAAnB;AAAmB;AAAnB;EAAA,aAAmB;EAAnB;AAAmB;AAAnB;EAAA,cAAmB;EAAnB;AAAmB;AAAnB;EAAA,eAAmB;EAAnB;AAAmB;AAAnB;EAAA,cAAmB;EAAnB;AAAmB;AAAnB;EAAA,aAAmB;EAAnB;AAAmB;AAAnB;EAAA,WAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8KAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,+KAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8KAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8KAAmB;EAAnB;AAAmB;AAAnB;EAAA,yBAAmB;EAAnB,iLAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,+KAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8KAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,8KAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB,6KAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,oLAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;;EAAA;IAAA;EAAmB;AAAA;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,eAAmB;OAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,qBAAmB;OAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,kCAAmB;EAAnB,0DAAmB;EAAnB,sCAAmB;EAAnB,8DAAmB;EAAnB,+BAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,gCAAmB;EAAnB,wDAAmB;EAAnB,oCAAmB;EAAnB,4DAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,gCAAmB;EAAnB,wDAAmB;EAAnB,oCAAmB;EAAnB,4DAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB,uBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB;AAAmB;AAAnB;EAAA,+BAAmB;EAAnB;AAAmB;AAAnB;EAAA,4BAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,kCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,kCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB,yCAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,qCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,sCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,sCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,oCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB,wCAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,4DAAmB;EAAnB,uEAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;KAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,+BAAmB;EAAnB;AAAmB;AAAnB;EAAA,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,+BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,eAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,+BAAmB;EAAnB,qCAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,yBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,4BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,2BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB,6BAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,mCAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,8EAAmB;EAAnB,8FAAmB;EAAnB,mHAAmB;EAAnB;AAAmB;AAAnB;EAAA,mFAAmB;EAAnB,mGAAmB;EAAnB,wHAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,yBAAmB;EAAnB,6KAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,gKAAmB;EAAnB,wJAAmB;EAAnB,iLAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;ACEf;EAAA,kBAAsF;EAAtF,mBAAsF;EAAtF,gBAAsF;EAAtF;AAAsF;AAAtF;;EAAA;IAAA,eAAsF;IAAtF;EAAsF;AAAA;AAAtF;;EAAA;IAAA,kBAAsF;IAAtF;EAAsF;AAAA;AAItF;EAAA,kBAA0E;EAA1E,mBAA0E;EAA1E,gBAA0E;EAA1E;AAA0E;AAA1E;;EAAA;IAAA,eAA0E;IAA1E;EAA0E;AAAA;AAI1E;EAAA,iBAA0C;EAA1C,iBAA0C;EAA1C,gBAA0C;EAA1C;AAA0C;AAI1C;EAAA,kBAAqC;EAArC,oBAAqC;EAArC,gBAAqC;EAArC;AAAqC;AAIrC;EAAA,mBAAyC;EAAzC,oBAAyC;EAAzC,gBAAyC;EAAzC;AAAyC;AAIzC;EAAA,gBAAiC;EAAjC;AAAiC;ACrBnC;IACE,+BAA+B;IAC/B,iBAAiB;IACjB,oBAAiB;OAAjB,iBAAiB;EACnB;AAEA;IACE,0BAA0B;IAC1B,iBAAiB;IACjB,oBAAiB;OAAjB,iBAAiB;EACnB;AAEA;IACE,+BAA+B;IAC/B,kBAAkB;IAClB,oBAAiB;OAAjB,iBAAiB;EACnB;AAEA;IACE,4BAA4B;IAC5B,kBAAkB;IAClB,oBAAiB;OAAjB,iBAAiB;EACnB;AAEA;IACE,iCAAiC;IACjC,eAAe;IACf,oBAAiB;OAAjB,iBAAiB;EACnB;AC7BF;EACE,iDAAiD;AACnD;AAUE;;;;;;;;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;;EAAA;;;;;;;;IAAA,iBAAmB;IAAnB;EAAmB;AAAA;AAMnB;;;EAAA,oBAA+C;EAA/C,YAA+C;EAA/C,WAA+C;EAA/C;AAA+C;AAI/C;EAAA;AAAW;AAKX;;EAAA,kBAAc;EAAd,mBAAc;EAAd,gBAAc;EAAd;AAAc;AAAd;;EAAA;;IAAA,eAAc;IAAd;EAAc;AAAA;AAKd;;EAAA,oBAA6B;EAA7B,yBAA6B;EAA7B,8CAA6B;EAA7B,iBAA6B;EAA7B,iBAA6B;EAA7B,gBAA6B;EAA7B;AAA6B;AAK7B;;EAAA,gBAA6C;EAA7C,kBAA6C;EAA7C,oBAA6C;EAA7C,2BAA6C;EAA7C;AAA6C;AAI7C;EAAA;AAAW;AAIX;EAAA,sBAA4F;EAA5F,iBAA4F;EAA5F,sBAA4F;EAA5F,oCAA4F;EAA5F,2DAA4F;EAA5F,6BAA4F;EAA5F,kBAA4F;EAA5F,mBAA4F;EAA5F,mBAA4F;EAA5F,sBAA4F;EAA5F,gBAA4F;EAA5F,oBAA4F;EAA5F,0BAA4F;EAA5F;AAA4F;AAI5F;EAAA;AAAW;AAIX;EAAA,qBAAmB;EAAnB,kBAAmB;EAAnB,oBAAmB;EAAnB,gBAAmB;EAAnB;AAAmB;AAGrB;;;;;;;;;;;;;;;;;;;GAmBG;AAGD;EAAA,kBAA0B;EAA1B;AAA0B;AAA1B;;EAAA;IAAA,iBAA0B;IAA1B;EAA0B;AAAA;AAI1B;EAAA,sBAAyD;EAAzD,gBAAyD;EAAzD,6BAAyD;EAAzD,6BAAyD;EAAzD,oBAAyD;EAAzD,2BAAyD;EAAzD,gDAAyD;EACzD;AADyD;AAKzD;EAAA,2BAAyC;EAAzC,8BAAyC;EAAzC,iCAAyC;EAAzC,4BAAyC;EACzC;AADyC;AAI3C;EACE,WAAW;EACX,cAAc;EACd,mBAAmB;EACnB,aAAa;EACb,cAAc;EACd,WAAW;EACX,yDAA0T;EAC1T,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;AAC9B;AAGE;EAAA,iBAA6D;EAA7D,mBAA6D;EAA7D,oBAA6D;EAA7D,gBAA6D;EAA7D,6BAA6D;EAA7D,oBAA6D;EAA7D,2BAA6D;EAA7D;AAA6D;AAI7D;EAAA,gBAAoC;EAApC,mBAAoC;EAApC,sBAAoC;EAApC,uCAAoC;EAApC,8DAAoC;EAApC,eAAoC;EAApC;AAAoC;AAIpC;EAAA,2BAAkC;EAAlC,8BAAkC;EAAlC,mBAAkC;EAAlC;AAAkC;AAAlC;;EAAA;IAAA,kBAAkC;IAAlC;EAAkC;AAAA;AAIlC;EAAA;AAAoB;AAIpB;EAAA,kBAAc;EAAd;AAAc;AAId;EAAA,gBAA8C;EAA9C,mBAA8C;EAA9C,sBAA8C;EAA9C;AAA8C;AAA9C;;EAAA;IAAA,gBAA8C;IAA9C,mBAA8C;IAA9C;EAA8C;AAAA;AAI9C;EAAA,0BAAiB;EAAjB;AAAiB;AAIjB;EAAA;AAAc;AAId;EAAA,mBAA4G;EAA5G,gBAA4G;EAA5G,sBAA4G;EAA5G,iBAA4G;EAA5G,sBAA4G;EAA5G,oCAA4G;EAA5G,2DAA4G;EAA5G,kBAA4G;EAA5G,wCAA4G;EAA5G,2DAA4G;EAA5G,aAA4G;EAA5G;AAA4G;AAA5G;EAAA,sBAA4G;EAA5G,kCAA4G;EAA5G;AAA4G;AAI5G;EAAA,4BAA+B;EAA/B,sBAA+B;EAA/B,kCAA+B;EAA/B,yDAA+B;EAA/B;AAA+B;AAI/B;EAAA,kBAA0B;EAA1B,oLAA0B;EAA1B;AAA0B;AAI1B;EAAA,kBAAuG;EAAvG,kBAAuG;EAAvG,mBAAuG;EAAvG,iBAAuG;EAAvG,eAAuG;EAAvG,qBAAuG;EAAvG,mBAAuG;EAAvG,sBAAuG;EAAvG,oBAAuG;EAAvG,mBAAuG;EAAvG,oBAAuG;EAAvG,yBAAuG;EAAvG,8CAAuG;EAAvG,gKAAuG;EAAvG,wJAAuG;EAAvG,iLAAuG;EAAvG,wDAAuG;EAAvG,0BAAuG;EAAvG,kBAAuG;EAAvG,oBAAuG;EAAvG,gBAAuG;EAAvG,kBAAuG;EACvG;AADuG;AAKvG;EAAA;AAAa;AAIb;EAAA,kBAA+G;EAA/G,WAA+G;EAA/G,QAA+G;EAA/G,iBAA+G;EAA/G,kBAA+G;EAA/G,cAA+G;EAA/G,aAA+G;EAA/G,cAA+G;EAA/G,sBAA+G;EAA/G,8KAA+G;EAA/G,+LAA+G;EAA/G,qBAA+G;EAA/G,0CAA+G;EAA/G,2DAA+G;EAA/G,oBAA+G;EAA/G,gBAA+G;;EAE/G,yDAA+P;EAC/P,uBAAuB;EACvB,4BAA4B;EAC5B,2BAA2B;EAC3B;AAN+G;AAU/G;EAAA,aAAqC;EAArC,aAAqC;EAArC,cAAqC;EAArC;AAAqC;AAArC;;EAAA;IAAA;EAAqC;AAAA;AADvC;EAEE,qBAAqB;AACvB;AAEA;EACE,wCAAwC;AAC1C;AAEA;EACE,2CAA2C;EAC3C,yDAAmP;AACrP;AAGE;EAAA,wBAA8C;EAA9C,sBAA8C;EAA9C,kCAA8C;EAA9C,yDAA8C;EAA9C,kBAA8C;EAA9C,sCAA8C;EAA9C,yDAA8C;EAA9C,oBAA8C;EAA9C,6BAA8C;EAA9C;AAA8C;AAGhD;EACE,wBAAwB;AAC1B;AAGE;EAAA,yBAA4C;EAA5C,sBAA4C;EAA5C,oCAA4C;EAA5C,2DAA4C;EAA5C,kBAA4C;EAA5C,wCAA4C;EAA5C;AAA4C;AAI5C;EAAA,oBAAiB;EAAjB,6BAAiB;EAAjB;AAAiB;AAKjB;;EAAA,iBAA8D;EAA9D,sBAA8D;EAA9D,oCAA8D;EAA9D,2DAA8D;EAA9D,0CAA8D;EAA9D,2DAA8D;EAA9D,oBAA8D;EAA9D,kBAA8D;EAA9D,mBAA8D;EAA9D,mBAA8D;EAA9D;AAA8D;AAI9D;EAAA;AAAmB;AC1MnB;EAAA,2BAAmD;EAAnD,8BAAmD;EAAnD,kBAAmD;EAAnD,oBAAmD;EAAnD,gBAAmD;EAAnD;AAAmD;AAInD;EAAA,iCAA+E;EAA/E,4BAA+E;EAA/E,iCAA+E;EAA/E,+CAA+E;EAA/E,sEAA+E;EAA/E,6BAA+E;EAA/E,iDAA+E;EAA/E,oEAA+E;EAA/E,+BAA+E;EAA/E,wCAA+E;EAA/E,6DAA+E;EAC/E,kBAAwD;EAAxD,mBAAwD;EAAxD,mBAAwD;EAAxD,sBAAwD;EAAxD;AAD+E;AAC/E;EAAA,sBAAwD;EAAxD,kCAAwD;EAAxD;AAAwD;AAIxD;EAAA,wBAAmC;EAAnC,sBAAmC;EAAnC,oCAAmC;EAAnC;AAAmC;AAInC;EAAA,aAAkC;EAAlC,2BAAkC;EAAlC,WAAkC;EAClC;AADkC;AAKlC;EAAA,4BAAiE;EAAjE,4BAAiE;EAAjE,iCAAiE;EAAjE,4BAAiE;EAAjE,iCAAiE;EAAjE,+CAAiE;EAAjE,sEAAiE;EACjE,6BAAqE;EAArE,kBAAqE;EAArE,mBAAqE;EAArE,mBAAqE;EAArE,sBAAqE;EAArE,gBAAqE;EAArE,oBAAqE;EAArE,0BAAqE;EAArE,+CAAqE;EAArE;AADiE;AAInE;;;;;;;;;;;;;;;EAeE,gCAAgC;EAChC,6CAA6C;AAC/C;AAEA;EACE,6CAA6C;AAC/C;ACrCE;EAAA,qBAAkI;EAAlI,sBAAkI;EAAlI,iBAAkI;EAAlI,sBAAkI;EAAlI,kCAAkI;EAAlI,yDAAkI;EAAlI,kBAAkI;EAAlI,mBAAkI;EAAlI,mBAAkI;EAAlI,sBAAkI;EAAlI,gBAAkI;EAAlI,0BAAkI;EAAlI,gKAAkI;EAAlI,wJAAkI;EAAlI,iLAAkI;EAAlI,wDAAkI;EAAlI;AAAkI;AAAlI;;EAAA;IAAA,kBAAkI;IAAlI;EAAkI;AAAA;AAGpI;EACE,aAAa;AACf;AAEA;EACE,iBAAiB;AACnB;AAEA,2CAA2C;AAC3C;;GAEG;AAKD;;;EAAA,iBAAwB;EAAxB,kBAAwB;EAAxB;AAAwB;AAMxB;;;EAAA;AAAiB;AAGnB;EACE,kBAAkB;AACpB;AAGE;EAAA,oBAAsH;EAAtH,cAAsH;EAAtH,aAAsH;EAAtH,mBAAsH;EAAtH,uBAAsH;EAAtH,qBAAsH;EAAtH,kBAAsH;EAAtH,wCAAsH;EAAtH,2DAAsH;EAAtH,kBAAsH;EAAtH,oBAAsH;EAAtH,qCAAsH;EAAtH,gKAAsH;EAAtH,wJAAsH;EAAtH,iLAAsH;EAAtH,wDAAsH;EAAtH;AAAsH;AAItH;EAAA,kBAAe;EAAf,wCAAe;EAAf;AAAe;AAIf;EAAA,kBAAyB;EAAzB,wCAAyB;EAAzB,2DAAyB;EAAzB;AAAyB;AAIzB;EAAA;AAAmB;AAInB;EAAA,WAAqH;EAArH,kBAAqH;EAArH,iBAAqH;EAArH,mBAAqH;EAArH;AAAqH;AAArH;;EAAA;IAAA,gBAAqH;IAArH,qBAAqH;IAArH;EAAqH;AAAA;AAArH;;EAAA;IAAA;EAAqH;AAAA;AAArH;;EAAA;IAAA,iBAAqH;IAArH,mBAAqH;IAArH;EAAqH;AAAA;AAArH;;EAAA;IAAA,iBAAqH;IAArH,qBAAqH;IAArH;EAAqH;AAAA;AAArH;;EAAA;IAAA,iBAAqH;IAArH,mBAAqH;IAArH;EAAqH;AAAA;AAArH;EAAA,cAAqH;EAArH,wCAAqH;EAArH,2DAAqH;EAArH,kBAAqH;EAArH,iBAAqH;EAArH,oBAAqH;EAArH,kBAAqH;EAArH,oBAAqH;EAArH,gBAAqH;EAArH,oBAAqH;EAArH,2BAAqH;EAArH,gDAAqH;EAArH,gKAAqH;EAArH,wJAAqH;EAArH,iLAAqH;EAArH,wDAAqH;EAArH;AAAqH;AAArH;EAAA;AAAqH;AAIrH;EAAA;AAAa;AAKb;;EAAA;AAAY;AAIZ;EAAA,aAA+H;EAA/H,uBAA+H;EAA/H,WAA+H;EAA/H,eAA+H;EAA/H;AAA+H;AAA/H;EAAA,mBAA+H;EAA/H,WAA+H;EAA/H,aAA+H;EAA/H,UAA+H;EAA/H,yCAA+H;EAA/H,yDAA+H;EAA/H,0BAA+H;EAA/H;AAA+H;AAI/H;EAAA;AAAsB;AAKtB;;EAAA,gBAA0C;EAA1C,eAA0C;EAA1C;AAA0C;AAI1C;EAAA,gBAAuF;EAAvF,6CAAuF;EAAvF,mCAAuF;EAAvF,kCAAuF;EAAvF,wBAAuF;EAAvF,wDAAuF;EAAvF;AAAuF;AAAvF;EAAA;AAAuF;AAOvF;;;;EAAA;AAAW;AAGb;;EAEE,iDAAiD;EACjD,iBAAiB;EACjB,kBAAkB;AACpB;AAIE;;EAAA,4BAAY;EAAZ;AAAY;AAGd;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;AACd;AAGE;EAAA,mBAAgC;EAAhC,aAAgC;EAAhC,mBAAgC;EAAhC;AAAgC;AAIhC;EAAA,iBAAyC;EAAzC,qBAAyC;EAAzC,cAAyC;EAAzC,WAAyC;EAAzC;AAAyC;AAGzC;EAAA,mBAAqC;EAArC,0CAAqC;EAArC,2DAAqC;EAArC,oBAAqC;EAArC;AAAqC;AAIrC;EAAA,WAAgB;EAAhB;AAAgB;AAIhB;EAAA,YAAmE;EAAnE,sBAAmE;EAAnE,iBAAmE;EAAnE,oCAAmE;EAAnE,yDAAmE;EAAnE,wBAAmE;EAAnE;AAAmE;AAInE;EAAA,qBAA8J;EAA9J,qBAA8J;EAA9J,iBAA8J;EAA9J,sBAA8J;EAA9J,kCAA8J;EAA9J,yDAA8J;EAA9J,0CAA8J;EAA9J,2DAA8J;EAA9J,oBAA8J;EAA9J,oBAA8J;EAA9J,qBAA8J;EAA9J,qBAA8J;EAA9J,wBAA8J;EAA9J,eAA8J;EAA9J,mBAA8J;EAA9J,gBAA8J;EAA9J,gKAA8J;EAA9J,wJAA8J;EAA9J,iLAA8J;EAA9J,wDAA8J;EAA9J;AAA8J;AAA9J;EAAA;AAA8J;AC9HhK;EACE,kBAAkB;AACpB;AAEA;EACE,wBAAwB;AAC1B;AAZA;;EAAA;IAAA,WAaA;IAbA,kBAaA;IAbA,iBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;;IAAA;MAAA,gBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;IAAA,WAaA;IAbA,kBAaA;IAbA,iBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;;IAAA;MAAA,gBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA;IAaA;EAAA;;EAbA;IAAA,WAaA;IAbA,kBAaA;IAbA,iBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;;IAAA;MAAA,gBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,mBAaA;MAbA;IAaA;EAAA;;EAbA;IAAA,WAaA;IAbA,kBAaA;IAbA,iBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;;IAAA;MAAA,gBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,mBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;IAAA,WAaA;IAbA,kBAaA;IAbA,iBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;;IAAA;MAAA,gBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,mBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,qBAaA;MAbA;IAaA;EAAA;;EAbA;;IAAA;MAAA,iBAaA;MAbA,mBAaA;MAbA;IAaA;EAAA;AAAA;AAbA;;EAAA;IAAA,mBAaA;IAbA,sBAaA;EAAA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,sBAaA;IAbA,uBAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,aAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,aAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,wBAaA;IAbA,wBAaA;IAbA,0BAaA;IAbA,2BAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,sBAaA;IAbA,iBAaA;IAbA,eAaA;IAbA,kBAaA;IAbA,uBAaA;IAbA,gBAaA;IAbA,oBAaA;IAbA,mBAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA,0BAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,sBAaA;IAbA;EAaA;;EAbA;IAAA,qBAaA;IAbA,sBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,mBAaA;IAbA,qBAaA;IAbA,sBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA;EAaA;;EAbA;IAAA,aAaA;IAbA;EAaA;;EAbA;IAAA,sBAaA;IAbA,gBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;AAAA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,QAaA;EAbA,UAaA;EAbA,WAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,QAaA;EAbA,UAaA;EAbA,WAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,UAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,aAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,kBAaA;EAbA,sCAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA,wBAaA;EAbA,wDAaA;EAbA;AAaA;AAbA;EAAA,sBAaA;EAbA,gCAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,sCAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA,oBAaA;EAbA,0BAaA;EAbA;AAaA;AAbA;EAAA,oBAaA;EAbA,6BAaA;EAbA;AAaA;AAbA;EAAA,0BAaA;EAbA;AAaA;AAbA;EAAA,gBAaA;EAbA,WAaA;EAbA,YAaA;EAbA,UAaA;EAbA,SAaA;EAbA,iBAaA;EAbA,UAaA;EAbA;AAaA;AAbA;EAAA,oBAaA;EAbA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA,8BAaA;EAbA;AAaA;AAbA;EAAA,qBAaA;EAbA,6KAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,kBAaA;EAbA,qKAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA,kBAaA;EAbA,wCAaA;EAbA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;EAAA;AAaA;AAbA;;EAAA;IAAA;EAaA;;EAbA;IAAA,QAaA;IAbA,UAaA;IAbA,WAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,4BAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,sBAaA;IAbA,8KAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,kBAaA;IAbA,sCAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA,wCAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,oBAaA;IAbA,6BAaA;IAbA;EAaA;AAAA;AAbA;;EAAA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,gBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,sBAaA;IAbA,8KAaA;IAbA;EAaA;;EAbA;IAAA,qBAaA;IAbA,6KAaA;IAbA;EAaA;;EAbA;IAAA,qBAaA;IAbA,6KAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,qBAaA;SAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA,gCAaA;IAbA,wDAaA;IAbA,oCAaA;IAbA,4DAaA;IAbA,6BAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,kBAaA;IAbA,wCAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,mBAaA;IAbA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA;EAaA;;EAbA;IAAA,oBAaA;IAbA,yBAaA;IAbA;EAaA;;ELHI;IAAA,iBAA0C;IAA1C,iBAA0C;IAA1C,gBAA0C;IAA1C;EAA0C;;EAI1C;IAAA,kBAAqC;IAArC,oBAAqC;IAArC,gBAAqC;IAArC;EAAqC;;EAIrC;IAAA,mBAAyC;IAAzC,oBAAyC;IAAzC,gBAAyC;IAAzC;EAAyC;ECjB3C;IACE,+BAA+B;IAC/B,iBAAiB;IACjB,oBAAiB;OAAjB,iBAAiB;EACnB;;EAQA;IACE,+BAA+B;IAC/B,kBAAkB;IAClB,oBAAiB;OAAjB,iBAAiB;EACnB;;EAQA;IACE,iCAAiC;IACjC,eAAe;IACf,oBAAiB;OAAjB,iBAAiB;EACnB;;EI7BF;IAAA,0BAaA;IAbA,aAaA;IAbA;EAaA;;EAbA;IAAA,0BAaA;IAbA,WAaA;IAbA;EAaA;AAAA;AAbA;;EAAA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,uBAaA;IAbA,gCAaA;IAbA,wDAaA;IAbA,oCAaA;IAbA,4DAaA;IAbA,6BAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,sBAaA;IAbA,kCAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,mBAaA;IAbA;EAaA;;EAbA;IAAA,mBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA,mBAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA;EAaA;;EAbA;IAAA,mBAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA;EAaA;;EAbA;IAAA,oBAaA;IAbA,yBAaA;IAbA;EAaA;AAAA;AAbA;;EAAA;IAAA,gBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,eAaA;IAbA;EAaA;;EAbA;IAAA,kBAaA;IAbA;EAaA;AAAA;AAbA;;EAAA;IAAA;EAaA;;EAbA;IAAA,gBAaA;IAbA;EAaA;;EAbA;IAAA,gBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA;EAaA;;EAbA;IAAA,iBAaA;IAbA;EAaA;;EAbA;IAAA;EAaA;AAAA\",\"sourcesContent\":[\"@tailwind base;\\n\",\"@tailwind components;\\n\",\"@tailwind utilities;\\n\",\"@layer utilities {\\n  .type-2xl {\\n    @apply text-4xl md:text-5xl 2xl:text-6xl font-extrabold leading-tight 2xl:leading-none;\\n  }\\n\\n  .type-xl {\\n    @apply text-4xl 2xl:text-5xl font-extrabold leading-tight 2xl:leading-none;\\n  }\\n\\n  .type-lg {\\n    @apply text-2xl font-semibold leading-snug;\\n  }\\n\\n  .type-md {\\n    @apply text-xl font-bold leading-snug;\\n  }\\n\\n  .type-sm {\\n    @apply text-lg font-semibold leading-snug;\\n  }\\n\\n  .type-xs {\\n    @apply font-semibold leading-snug;\\n  }\\n}\\n\",\"@layer utilities {\\n  .clip-landscape {\\n    clip-path: url(#clip-landscape);\\n    aspect-ratio: 1.5;\\n    object-fit: cover;\\n  }\\n\\n  .clip-oval {\\n    clip-path: url(#clip-oval);\\n    aspect-ratio: 1.3;\\n    object-fit: cover;\\n  }\\n\\n  .clip-oval-part {\\n    clip-path: url(#clip-oval-part);\\n    aspect-ratio: 1.15;\\n    object-fit: cover;\\n  }\\n\\n  .clip-oval-2 {\\n    clip-path: url(#clip-oval-2);\\n    aspect-ratio: 0.96;\\n    object-fit: cover;\\n  }\\n\\n  .clip-oval-part-2 {\\n    clip-path: url(#clip-oval-part-2);\\n    aspect-ratio: 1;\\n    object-fit: cover;\\n  }\\n}\\n\",\".wp-block {\\n  max-width: var(--wp--style--global--content-size);\\n}\\n\\n.page-template-template-fullwidth .page-content > h2,\\n.page-template-template-fullwidth .page-content > h3,\\n.page-template-template-fullwidth .page-content > h4,\\n.page-template-template-fullwidth .page-content > h5,\\n.page-template-template-fullwidth .page-content > h6,\\n.page-template-template-fullwidth .page-content > p,\\n.page-template-template-fullwidth .page-content > ul,\\n.page-template-template-fullwidth .page-content > ol {\\n  @apply px-4 md:px-0;\\n}\\n\\n.page-content iframe[src*='youtube.com'],\\n.page-content iframe[src*='youtube-nocookie.com'],\\n.page-content iframe[src*='vimeo.com'] {\\n  @apply aspect-video h-auto w-full rounded-small;\\n}\\n\\n.page-content > *:last-child {\\n  @apply mb-0;\\n}\\n\\n.prose > h1,\\nh1.wp-block-heading {\\n  @apply type-xl;\\n}\\n\\n.prose > h2,\\nh2.wp-block-heading {\\n  @apply type-lg text-blue-dark;\\n}\\n\\n.prose > h3,\\nh3.wp-block-heading {\\n  @apply text-green-dark font-bold leading-snug;\\n}\\n\\n.prose .group:first-child h2 {\\n  @apply mt-4;\\n}\\n\\n.wp-block-button .wp-block-button__link {\\n  @apply border-green border-2 rounded-small px-4 py-2 bg-transparent text-black font-semibold;\\n}\\n\\n.wp-block-hero .wp-block-buttons {\\n  @apply mt-8;\\n}\\n\\np.is-style-large {\\n  @apply type-md mb-2;\\n}\\n\\n/* \\n.post-content .wp-block-button__link,\\n.page-content .wp-block-button__link,\\n.page-content .wp-block-file__button,\\n.post-content .wp-block-file__button {\\n  @apply !no-underline text-white;\\n}\\n\\n\\n\\n\\n\\n.wp-block-group.has-background > *:first-child {\\n  @apply mt-0;\\n}\\n\\n\\n.wp-block-media-text .wp-block-media-text__content {\\n  @apply pt-4 pb-4;\\n} */\\n\\n.wp-block-quote {\\n  @apply text-xl lg:text-2xl;\\n}\\n\\n.wp-block-quote p {\\n  @apply font-bold text-blue !leading-snug !not-italic mb-3;\\n  font-size: 1em !important;\\n}\\n\\n.wp-block-quote {\\n  @apply !my-12  !leading-tight !border-l-0;\\n  padding-left: 1.5em !important;\\n}\\n\\n.wp-block-quote::before {\\n  content: '';\\n  display: block;\\n  margin-left: -1.5em;\\n  width: 1.25em;\\n  height: 1.25em;\\n  float: left;\\n  background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 14.58 13.85\\\"><ellipse fill=\\\"rgb(255,206,155)\\\" cx=\\\"7.29\\\" cy=\\\"6.48\\\"  rx=\\\"7.29\\\" ry=\\\"6.48\\\"/><path fill=\\\"rgb(255,206,155)\\\" d=\\\"M12.8 10.69s-.63 1.64.2 2.25-1.09 1.18-1.83.77c-.57-.31-2.1-.97-2.1-.97l3.73-2.05Z\\\"/></svg>');\\n  background-size: contain;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n}\\n\\n.wp-block-quote cite {\\n  @apply !not-italic text-right text-lg text-blue font-semibold;\\n}\\n\\n.wp-block-quote.has-background {\\n  @apply pt-0.5 my-8 p-6 border-l-blue;\\n}\\n\\n.wp-block-quote.is-style-large {\\n  @apply !my-20 text-3xl lg:text-4xl;\\n}\\n\\n.wp-block-quote.is-style-large p {\\n  @apply !leading-snug;\\n}\\n\\n.wp-block-quote.is-style-large cite {\\n  @apply text-xl;\\n}\\n\\n.wp-block-group.has-background {\\n  @apply p-6 my-12 md:my-16 md:p-8 rounded-small;\\n}\\n\\n.wp-block-file:not(.wp-element-button) {\\n  @apply !text-base;\\n}\\n\\n.acf-block-component.wp-block-file > div {\\n  @apply !w-full;\\n}\\n\\ndetails {\\n  @apply p-4 pb-0 bg-blue-light overflow-hidden border border-blue-light hover:border-blue rounded-small  mb-4;\\n}\\n\\ndetails[open] {\\n  @apply !border border-blue pb-4;\\n}\\n\\ndetails[open] .open\\\\:rotate-90 {\\n  @apply transform rotate-90;\\n}\\n\\nsummary {\\n  @apply text-blue-dark list-none type-md relative -mx-4 pr-12 -mt-4 transition  py-6 px-6 cursor-pointer;\\n  font-size: 1em !important;\\n}\\n\\nsummary::marker {\\n  @apply hidden;\\n}\\n\\ndetails summary::after {\\n  @apply mx-auto absolute bg-white bg-opacity-60 right-4  -translate-y-1/2 top-1/2 size-10 block rounded-full p-1;\\n\\n  background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba(1,105,125)\\\" ><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M12 4.5v15m7.5-7.5h-15\\\" /></svg>');\\n  background-size: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  content: '';\\n}\\n\\n.wp-block-people-list details summary::after {\\n  @apply right-6 md:right-8 p-2 size-14;\\n  background-size: 2rem;\\n}\\n\\ndetails summary:hover::after {\\n  background-color: rgba(255, 255, 255, 1);\\n}\\n\\ndetails[open] summary::after {\\n  background-color: rgba(255, 255, 255, 0.85);\\n  background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba(1,105,125)\\\" >  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M5 12h14\\\" /></svg>');\\n}\\n\\ndetails[open] summary {\\n  @apply border-b bg-blue border-blue text-white;\\n}\\n\\nsummary:hover {\\n  /* @apply border-blue; */\\n}\\n\\n.wp-block-table table {\\n  @apply border-collapse border-white bg-beige;\\n}\\n\\n.wp-block-table table.has-blue-background-color th {\\n  @apply text-white;\\n}\\n\\n.wp-block-table td,\\n.wp-block-table th {\\n  @apply border-white border-8  px-4 py-2 bg-white bg-opacity-70;\\n}\\n\\n.wp-block-table th {\\n  @apply bg-opacity-0;\\n}\\n\",\"#main .happyforms-form .happyforms-layout-title {\\n  @apply type-md  mt-12 pb-0 font-semibold !important;\\n}\\n\\n#main .happyforms-form .happyforms-submit {\\n  @apply rounded-small border-2  border-green bg-green-dark text-white !important;\\n  @apply px-4 py-2 hover:border-green-dark   font-semibold;\\n}\\n\\n#main .happyforms-form hr {\\n  @apply border-blue-light border-b-2;\\n}\\n\\n#main .happyforms-part--submit {\\n  @apply flex flex-row-reverse gap-2;\\n  flex-flow: row-reverse;\\n}\\n\\n#main .happyforms-save-session {\\n  @apply mr-0 rounded-small w-1/3 border-2  border-green !important;\\n  @apply no-underline px-4 py-2 bg-transparent text-black font-semibold;\\n}\\n\\n.happyforms-styles .happyforms-part input[type='text']:focus,\\n.happyforms-styles .happyforms-part input[type='password']:focus,\\n.happyforms-styles .happyforms-part input[type='email']:focus,\\n.happyforms-styles .happyforms-part input[type='tel']:focus,\\n.happyforms-styles .happyforms-part input[type='number']:focus,\\n.happyforms-styles .happyforms-part input[type='date']:focus,\\n.happyforms-styles .happyforms-part input[type='time']:focus,\\n.happyforms-styles .happyforms-part input[type='datetime-local']:focus,\\n.happyforms-styles .happyforms-part input[type='month']:focus,\\n.happyforms-styles .happyforms-part textarea:focus,\\n.happyforms-styles\\n  .happyforms-part--signature\\n  .happyforms--signature-area--container.focus,\\n.happyforms-styles .happyforms-part--scrollable_terms .scrollbox:focus,\\n.happyforms-styles .happyforms-part select.happyforms-select:focus {\\n  border-color: #00a0ad !important;\\n  box-shadow: inset 0 0 0 1px 00a0ad !important;\\n}\\n\\n#main .happyforms-form {\\n  --happyforms-color-part-border-focus: #00a0ad;\\n}\\n\",\"@import '_fonts';\\n@import '_type';\\n@import '_block-styles';\\n@import '_clips';\\n@import '_forms';\\n\\n.donate-button {\\n  @apply border-blue-bright inline-block rounded-small border-2 px-4 lg:px-8 py-2 font-semibold no-underline transition duration-300;\\n}\\n\\nimg:not([src]) {\\n  display: none;\\n}\\n\\na.active {\\n  font-weight: bold;\\n}\\n\\n/* To handle quirk with ACF colour picker */\\n/* .bg-gold-default {\\n  @apply bg-gold;\\n} */\\n\\n.alignwide,\\n.page-content > .alignwide,\\n.alignwide .wp-block {\\n  @apply max-w-7xl mx-auto;\\n}\\n\\n.alignfull,\\n.page-content > .alignfull,\\n.alignfull .wp-block {\\n  @apply max-w-full;\\n}\\n\\n.text-balance {\\n  text-wrap: balance;\\n}\\n\\n.page-numbers {\\n  @apply w-10 h-10 !no-underline text-xl  inline-flex transition items-center justify-center rounded-full bg-beige-light;\\n}\\n\\n.page-numbers:hover {\\n  @apply bg-beige;\\n}\\n\\n.page-numbers.current {\\n  @apply bg-beige font-bold;\\n}\\n\\n.page-sidebar-tree a:hover {\\n  @apply no-underline;\\n}\\n\\n.page-sidebar-tree li a {\\n  @apply container block py-4 text-xl font-semibold text-blue bg-blue-light bg-opacity-0 hover:bg-opacity-50 transition;\\n}\\n\\n.page-sidebar-tree .children {\\n  @apply hidden;\\n}\\n\\n.page-sidebar-tree .current_page_item > .children,\\n.page-sidebar-tree .current_page_ancestor > .children {\\n  @apply block;\\n}\\n\\n.page-sidebar-tree .children li a {\\n  @apply text-base gap-2 flex items-start before:mt-3 before:w-6 before:flex-none before:h-px before:bg-blue before:bg-opacity-25;\\n}\\n\\n.page-sidebar-tree .current_page_item > a {\\n  @apply !bg-opacity-100;\\n}\\n\\n.post-content,\\n.page-content {\\n  @apply max-w-none break-words min-h-[70vh];\\n}\\n\\n.prose :where(a):not([class~='not-prose']) {\\n  @apply transition-all font-bold antialiased decoration-blue/20 hover:decoration-blue/70;\\n}\\n\\n.post-content > :not(.wp-block-hero):first-child,\\n.page-content > :not(.wp-block-hero):first-child,\\n.page-content > .group:first-child > :not(.wp-block-hero):first-child,\\n.post-content > .group:first-child > :not(.wp-block-hero):first-child {\\n  @apply mt-0;\\n}\\n\\n.page-content > *,\\n.post-content > * {\\n  max-width: var(--wp--style--global--content-size);\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.page-template-default .wp-block-latest-events,\\n.page-template-default .wp-block-latest-news {\\n  @apply !px-0;\\n}\\n\\n.embedded-iframe iframe {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.mc-field-group:not(.input-group) {\\n  @apply flex flex-row gap-2  mb-4;\\n}\\n\\n.indicates-required {\\n  @apply text-right ml-auto w-32 block mb-2;\\n}\\n.input-group {\\n  @apply bg-pink p-6 mb-4 bg-opacity-20;\\n}\\n\\n.mc-field-group label {\\n  @apply w-32 pt-2;\\n}\\n\\n.form-control {\\n  @apply p-2 border-2 border-blue border-opacity-50 rounded flex-grow;\\n}\\n\\n.button {\\n  @apply bg-white border-2 border-blue inline-block rounded-full bg-opacity-80 px-10 py-2.5 text-base font-semibold transition duration-300 hover:bg-opacity-100;\\n}\\n\",\"@import 'tailwindcss/base';\\n@import 'tailwindcss/components';\\n@import 'tailwindcss/utilities';\\n\\n@import 'common/global';\\n\\n.grecaptcha-badge {\\n  visibility: hidden;\\n}\\n\\n[x-cloak] {\\n  display: none !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@roots/bud/sage/./styles/app.css?../node_modules/@roots/bud-support/lib/css-loader/index.cjs??css!../node_modules/postcss-loader/dist/cjs.js??postcss");

/***/ }),

/***/ "./styles/app.css":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"../node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"../node_modules/@roots/bud-support/lib/css-loader/index.cjs??css!../node_modules/postcss-loader/dist/cjs.js??postcss!./styles/app.css\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\nif (true) {\n  if (!_node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !_node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n    var oldLocals = isNamedExport ? _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n\n    module.hot.accept(\n      \"../node_modules/@roots/bud-support/lib/css-loader/index.cjs??css!../node_modules/postcss-loader/dist/cjs.js??postcss!./styles/app.css\",\n      function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"../node_modules/@roots/bud-support/lib/css-loader/index.cjs??css!../node_modules/postcss-loader/dist/cjs.js??postcss!./styles/app.css\");\n(function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n\n              update(_node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this)\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\n\n       /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_roots_bud_support_lib_css_loader_index_cjs_css_node_modules_postcss_loader_dist_cjs_js_postcss_app_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://@roots/bud/sage/./styles/app.css?");

/***/ }),

/***/ "../node_modules/alpinejs/dist/module.esm.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alpine: function() { return /* binding */ src_default; },\n/* harmony export */   \"default\": function() { return /* binding */ module_default; }\n/* harmony export */ });\n// packages/alpinejs/src/scheduler.js\nvar flushPending = false;\nvar flushing = false;\nvar queue = [];\nvar lastFlushedIndex = -1;\nfunction scheduler(callback) {\n  queueJob(callback);\n}\nfunction queueJob(job) {\n  if (!queue.includes(job))\n    queue.push(job);\n  queueFlush();\n}\nfunction dequeueJob(job) {\n  let index = queue.indexOf(job);\n  if (index !== -1 && index > lastFlushedIndex)\n    queue.splice(index, 1);\n}\nfunction queueFlush() {\n  if (!flushing && !flushPending) {\n    flushPending = true;\n    queueMicrotask(flushJobs);\n  }\n}\nfunction flushJobs() {\n  flushPending = false;\n  flushing = true;\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n    lastFlushedIndex = i;\n  }\n  queue.length = 0;\n  lastFlushedIndex = -1;\n  flushing = false;\n}\n\n// packages/alpinejs/src/reactivity.js\nvar reactive;\nvar effect;\nvar release;\nvar raw;\nvar shouldSchedule = true;\nfunction disableEffectScheduling(callback) {\n  shouldSchedule = false;\n  callback();\n  shouldSchedule = true;\n}\nfunction setReactivityEngine(engine) {\n  reactive = engine.reactive;\n  release = engine.release;\n  effect = (callback) => engine.effect(callback, { scheduler: (task) => {\n    if (shouldSchedule) {\n      scheduler(task);\n    } else {\n      task();\n    }\n  } });\n  raw = engine.raw;\n}\nfunction overrideEffect(override) {\n  effect = override;\n}\nfunction elementBoundEffect(el) {\n  let cleanup2 = () => {\n  };\n  let wrappedEffect = (callback) => {\n    let effectReference = effect(callback);\n    if (!el._x_effects) {\n      el._x_effects = /* @__PURE__ */ new Set();\n      el._x_runEffects = () => {\n        el._x_effects.forEach((i) => i());\n      };\n    }\n    el._x_effects.add(effectReference);\n    cleanup2 = () => {\n      if (effectReference === void 0)\n        return;\n      el._x_effects.delete(effectReference);\n      release(effectReference);\n    };\n    return effectReference;\n  };\n  return [wrappedEffect, () => {\n    cleanup2();\n  }];\n}\nfunction watch(getter, callback) {\n  let firstTime = true;\n  let oldValue;\n  let effectReference = effect(() => {\n    let value = getter();\n    JSON.stringify(value);\n    if (!firstTime) {\n      queueMicrotask(() => {\n        callback(value, oldValue);\n        oldValue = value;\n      });\n    } else {\n      oldValue = value;\n    }\n    firstTime = false;\n  });\n  return () => release(effectReference);\n}\n\n// packages/alpinejs/src/mutation.js\nvar onAttributeAddeds = [];\nvar onElRemoveds = [];\nvar onElAddeds = [];\nfunction onElAdded(callback) {\n  onElAddeds.push(callback);\n}\nfunction onElRemoved(el, callback) {\n  if (typeof callback === \"function\") {\n    if (!el._x_cleanups)\n      el._x_cleanups = [];\n    el._x_cleanups.push(callback);\n  } else {\n    callback = el;\n    onElRemoveds.push(callback);\n  }\n}\nfunction onAttributesAdded(callback) {\n  onAttributeAddeds.push(callback);\n}\nfunction onAttributeRemoved(el, name, callback) {\n  if (!el._x_attributeCleanups)\n    el._x_attributeCleanups = {};\n  if (!el._x_attributeCleanups[name])\n    el._x_attributeCleanups[name] = [];\n  el._x_attributeCleanups[name].push(callback);\n}\nfunction cleanupAttributes(el, names) {\n  if (!el._x_attributeCleanups)\n    return;\n  Object.entries(el._x_attributeCleanups).forEach(([name, value]) => {\n    if (names === void 0 || names.includes(name)) {\n      value.forEach((i) => i());\n      delete el._x_attributeCleanups[name];\n    }\n  });\n}\nfunction cleanupElement(el) {\n  el._x_effects?.forEach(dequeueJob);\n  while (el._x_cleanups?.length)\n    el._x_cleanups.pop()();\n}\nvar observer = new MutationObserver(onMutate);\nvar currentlyObserving = false;\nfunction startObservingMutations() {\n  observer.observe(document, { subtree: true, childList: true, attributes: true, attributeOldValue: true });\n  currentlyObserving = true;\n}\nfunction stopObservingMutations() {\n  flushObserver();\n  observer.disconnect();\n  currentlyObserving = false;\n}\nvar queuedMutations = [];\nfunction flushObserver() {\n  let records = observer.takeRecords();\n  queuedMutations.push(() => records.length > 0 && onMutate(records));\n  let queueLengthWhenTriggered = queuedMutations.length;\n  queueMicrotask(() => {\n    if (queuedMutations.length === queueLengthWhenTriggered) {\n      while (queuedMutations.length > 0)\n        queuedMutations.shift()();\n    }\n  });\n}\nfunction mutateDom(callback) {\n  if (!currentlyObserving)\n    return callback();\n  stopObservingMutations();\n  let result = callback();\n  startObservingMutations();\n  return result;\n}\nvar isCollecting = false;\nvar deferredMutations = [];\nfunction deferMutations() {\n  isCollecting = true;\n}\nfunction flushAndStopDeferringMutations() {\n  isCollecting = false;\n  onMutate(deferredMutations);\n  deferredMutations = [];\n}\nfunction onMutate(mutations) {\n  if (isCollecting) {\n    deferredMutations = deferredMutations.concat(mutations);\n    return;\n  }\n  let addedNodes = /* @__PURE__ */ new Set();\n  let removedNodes = /* @__PURE__ */ new Set();\n  let addedAttributes = /* @__PURE__ */ new Map();\n  let removedAttributes = /* @__PURE__ */ new Map();\n  for (let i = 0; i < mutations.length; i++) {\n    if (mutations[i].target._x_ignoreMutationObserver)\n      continue;\n    if (mutations[i].type === \"childList\") {\n      mutations[i].addedNodes.forEach((node) => node.nodeType === 1 && addedNodes.add(node));\n      mutations[i].removedNodes.forEach((node) => node.nodeType === 1 && removedNodes.add(node));\n    }\n    if (mutations[i].type === \"attributes\") {\n      let el = mutations[i].target;\n      let name = mutations[i].attributeName;\n      let oldValue = mutations[i].oldValue;\n      let add2 = () => {\n        if (!addedAttributes.has(el))\n          addedAttributes.set(el, []);\n        addedAttributes.get(el).push({ name, value: el.getAttribute(name) });\n      };\n      let remove = () => {\n        if (!removedAttributes.has(el))\n          removedAttributes.set(el, []);\n        removedAttributes.get(el).push(name);\n      };\n      if (el.hasAttribute(name) && oldValue === null) {\n        add2();\n      } else if (el.hasAttribute(name)) {\n        remove();\n        add2();\n      } else {\n        remove();\n      }\n    }\n  }\n  removedAttributes.forEach((attrs, el) => {\n    cleanupAttributes(el, attrs);\n  });\n  addedAttributes.forEach((attrs, el) => {\n    onAttributeAddeds.forEach((i) => i(el, attrs));\n  });\n  for (let node of removedNodes) {\n    if (addedNodes.has(node))\n      continue;\n    onElRemoveds.forEach((i) => i(node));\n  }\n  addedNodes.forEach((node) => {\n    node._x_ignoreSelf = true;\n    node._x_ignore = true;\n  });\n  for (let node of addedNodes) {\n    if (removedNodes.has(node))\n      continue;\n    if (!node.isConnected)\n      continue;\n    delete node._x_ignoreSelf;\n    delete node._x_ignore;\n    onElAddeds.forEach((i) => i(node));\n    node._x_ignore = true;\n    node._x_ignoreSelf = true;\n  }\n  addedNodes.forEach((node) => {\n    delete node._x_ignoreSelf;\n    delete node._x_ignore;\n  });\n  addedNodes = null;\n  removedNodes = null;\n  addedAttributes = null;\n  removedAttributes = null;\n}\n\n// packages/alpinejs/src/scope.js\nfunction scope(node) {\n  return mergeProxies(closestDataStack(node));\n}\nfunction addScopeToNode(node, data2, referenceNode) {\n  node._x_dataStack = [data2, ...closestDataStack(referenceNode || node)];\n  return () => {\n    node._x_dataStack = node._x_dataStack.filter((i) => i !== data2);\n  };\n}\nfunction closestDataStack(node) {\n  if (node._x_dataStack)\n    return node._x_dataStack;\n  if (typeof ShadowRoot === \"function\" && node instanceof ShadowRoot) {\n    return closestDataStack(node.host);\n  }\n  if (!node.parentNode) {\n    return [];\n  }\n  return closestDataStack(node.parentNode);\n}\nfunction mergeProxies(objects) {\n  return new Proxy({ objects }, mergeProxyTrap);\n}\nvar mergeProxyTrap = {\n  ownKeys({ objects }) {\n    return Array.from(\n      new Set(objects.flatMap((i) => Object.keys(i)))\n    );\n  },\n  has({ objects }, name) {\n    if (name == Symbol.unscopables)\n      return false;\n    return objects.some(\n      (obj) => Object.prototype.hasOwnProperty.call(obj, name) || Reflect.has(obj, name)\n    );\n  },\n  get({ objects }, name, thisProxy) {\n    if (name == \"toJSON\")\n      return collapseProxies;\n    return Reflect.get(\n      objects.find(\n        (obj) => Reflect.has(obj, name)\n      ) || {},\n      name,\n      thisProxy\n    );\n  },\n  set({ objects }, name, value, thisProxy) {\n    const target = objects.find(\n      (obj) => Object.prototype.hasOwnProperty.call(obj, name)\n    ) || objects[objects.length - 1];\n    const descriptor = Object.getOwnPropertyDescriptor(target, name);\n    if (descriptor?.set && descriptor?.get)\n      return descriptor.set.call(thisProxy, value) || true;\n    return Reflect.set(target, name, value);\n  }\n};\nfunction collapseProxies() {\n  let keys = Reflect.ownKeys(this);\n  return keys.reduce((acc, key) => {\n    acc[key] = Reflect.get(this, key);\n    return acc;\n  }, {});\n}\n\n// packages/alpinejs/src/interceptor.js\nfunction initInterceptors(data2) {\n  let isObject2 = (val) => typeof val === \"object\" && !Array.isArray(val) && val !== null;\n  let recurse = (obj, basePath = \"\") => {\n    Object.entries(Object.getOwnPropertyDescriptors(obj)).forEach(([key, { value, enumerable }]) => {\n      if (enumerable === false || value === void 0)\n        return;\n      if (typeof value === \"object\" && value !== null && value.__v_skip)\n        return;\n      let path = basePath === \"\" ? key : `${basePath}.${key}`;\n      if (typeof value === \"object\" && value !== null && value._x_interceptor) {\n        obj[key] = value.initialize(data2, path, key);\n      } else {\n        if (isObject2(value) && value !== obj && !(value instanceof Element)) {\n          recurse(value, path);\n        }\n      }\n    });\n  };\n  return recurse(data2);\n}\nfunction interceptor(callback, mutateObj = () => {\n}) {\n  let obj = {\n    initialValue: void 0,\n    _x_interceptor: true,\n    initialize(data2, path, key) {\n      return callback(this.initialValue, () => get(data2, path), (value) => set(data2, path, value), path, key);\n    }\n  };\n  mutateObj(obj);\n  return (initialValue) => {\n    if (typeof initialValue === \"object\" && initialValue !== null && initialValue._x_interceptor) {\n      let initialize = obj.initialize.bind(obj);\n      obj.initialize = (data2, path, key) => {\n        let innerValue = initialValue.initialize(data2, path, key);\n        obj.initialValue = innerValue;\n        return initialize(data2, path, key);\n      };\n    } else {\n      obj.initialValue = initialValue;\n    }\n    return obj;\n  };\n}\nfunction get(obj, path) {\n  return path.split(\".\").reduce((carry, segment) => carry[segment], obj);\n}\nfunction set(obj, path, value) {\n  if (typeof path === \"string\")\n    path = path.split(\".\");\n  if (path.length === 1)\n    obj[path[0]] = value;\n  else if (path.length === 0)\n    throw error;\n  else {\n    if (obj[path[0]])\n      return set(obj[path[0]], path.slice(1), value);\n    else {\n      obj[path[0]] = {};\n      return set(obj[path[0]], path.slice(1), value);\n    }\n  }\n}\n\n// packages/alpinejs/src/magics.js\nvar magics = {};\nfunction magic(name, callback) {\n  magics[name] = callback;\n}\nfunction injectMagics(obj, el) {\n  let memoizedUtilities = getUtilities(el);\n  Object.entries(magics).forEach(([name, callback]) => {\n    Object.defineProperty(obj, `$${name}`, {\n      get() {\n        return callback(el, memoizedUtilities);\n      },\n      enumerable: false\n    });\n  });\n  return obj;\n}\nfunction getUtilities(el) {\n  let [utilities, cleanup2] = getElementBoundUtilities(el);\n  let utils = { interceptor, ...utilities };\n  onElRemoved(el, cleanup2);\n  return utils;\n}\n\n// packages/alpinejs/src/utils/error.js\nfunction tryCatch(el, expression, callback, ...args) {\n  try {\n    return callback(...args);\n  } catch (e) {\n    handleError(e, el, expression);\n  }\n}\nfunction handleError(error2, el, expression = void 0) {\n  error2 = Object.assign(\n    error2 ?? { message: \"No error message given.\" },\n    { el, expression }\n  );\n  console.warn(`Alpine Expression Error: ${error2.message}\n\n${expression ? 'Expression: \"' + expression + '\"\\n\\n' : \"\"}`, el);\n  setTimeout(() => {\n    throw error2;\n  }, 0);\n}\n\n// packages/alpinejs/src/evaluator.js\nvar shouldAutoEvaluateFunctions = true;\nfunction dontAutoEvaluateFunctions(callback) {\n  let cache = shouldAutoEvaluateFunctions;\n  shouldAutoEvaluateFunctions = false;\n  let result = callback();\n  shouldAutoEvaluateFunctions = cache;\n  return result;\n}\nfunction evaluate(el, expression, extras = {}) {\n  let result;\n  evaluateLater(el, expression)((value) => result = value, extras);\n  return result;\n}\nfunction evaluateLater(...args) {\n  return theEvaluatorFunction(...args);\n}\nvar theEvaluatorFunction = normalEvaluator;\nfunction setEvaluator(newEvaluator) {\n  theEvaluatorFunction = newEvaluator;\n}\nfunction normalEvaluator(el, expression) {\n  let overriddenMagics = {};\n  injectMagics(overriddenMagics, el);\n  let dataStack = [overriddenMagics, ...closestDataStack(el)];\n  let evaluator = typeof expression === \"function\" ? generateEvaluatorFromFunction(dataStack, expression) : generateEvaluatorFromString(dataStack, expression, el);\n  return tryCatch.bind(null, el, expression, evaluator);\n}\nfunction generateEvaluatorFromFunction(dataStack, func) {\n  return (receiver = () => {\n  }, { scope: scope2 = {}, params = [] } = {}) => {\n    let result = func.apply(mergeProxies([scope2, ...dataStack]), params);\n    runIfTypeOfFunction(receiver, result);\n  };\n}\nvar evaluatorMemo = {};\nfunction generateFunctionFromString(expression, el) {\n  if (evaluatorMemo[expression]) {\n    return evaluatorMemo[expression];\n  }\n  let AsyncFunction = Object.getPrototypeOf(async function() {\n  }).constructor;\n  let rightSideSafeExpression = /^[\\n\\s]*if.*\\(.*\\)/.test(expression.trim()) || /^(let|const)\\s/.test(expression.trim()) ? `(async()=>{ ${expression} })()` : expression;\n  const safeAsyncFunction = () => {\n    try {\n      let func2 = new AsyncFunction(\n        [\"__self\", \"scope\"],\n        `with (scope) { __self.result = ${rightSideSafeExpression} }; __self.finished = true; return __self.result;`\n      );\n      Object.defineProperty(func2, \"name\", {\n        value: `[Alpine] ${expression}`\n      });\n      return func2;\n    } catch (error2) {\n      handleError(error2, el, expression);\n      return Promise.resolve();\n    }\n  };\n  let func = safeAsyncFunction();\n  evaluatorMemo[expression] = func;\n  return func;\n}\nfunction generateEvaluatorFromString(dataStack, expression, el) {\n  let func = generateFunctionFromString(expression, el);\n  return (receiver = () => {\n  }, { scope: scope2 = {}, params = [] } = {}) => {\n    func.result = void 0;\n    func.finished = false;\n    let completeScope = mergeProxies([scope2, ...dataStack]);\n    if (typeof func === \"function\") {\n      let promise = func(func, completeScope).catch((error2) => handleError(error2, el, expression));\n      if (func.finished) {\n        runIfTypeOfFunction(receiver, func.result, completeScope, params, el);\n        func.result = void 0;\n      } else {\n        promise.then((result) => {\n          runIfTypeOfFunction(receiver, result, completeScope, params, el);\n        }).catch((error2) => handleError(error2, el, expression)).finally(() => func.result = void 0);\n      }\n    }\n  };\n}\nfunction runIfTypeOfFunction(receiver, value, scope2, params, el) {\n  if (shouldAutoEvaluateFunctions && typeof value === \"function\") {\n    let result = value.apply(scope2, params);\n    if (result instanceof Promise) {\n      result.then((i) => runIfTypeOfFunction(receiver, i, scope2, params)).catch((error2) => handleError(error2, el, value));\n    } else {\n      receiver(result);\n    }\n  } else if (typeof value === \"object\" && value instanceof Promise) {\n    value.then((i) => receiver(i));\n  } else {\n    receiver(value);\n  }\n}\n\n// packages/alpinejs/src/directives.js\nvar prefixAsString = \"x-\";\nfunction prefix(subject = \"\") {\n  return prefixAsString + subject;\n}\nfunction setPrefix(newPrefix) {\n  prefixAsString = newPrefix;\n}\nvar directiveHandlers = {};\nfunction directive(name, callback) {\n  directiveHandlers[name] = callback;\n  return {\n    before(directive2) {\n      if (!directiveHandlers[directive2]) {\n        console.warn(String.raw`Cannot find directive \\`${directive2}\\`. \\`${name}\\` will use the default order of execution`);\n        return;\n      }\n      const pos = directiveOrder.indexOf(directive2);\n      directiveOrder.splice(pos >= 0 ? pos : directiveOrder.indexOf(\"DEFAULT\"), 0, name);\n    }\n  };\n}\nfunction directiveExists(name) {\n  return Object.keys(directiveHandlers).includes(name);\n}\nfunction directives(el, attributes, originalAttributeOverride) {\n  attributes = Array.from(attributes);\n  if (el._x_virtualDirectives) {\n    let vAttributes = Object.entries(el._x_virtualDirectives).map(([name, value]) => ({ name, value }));\n    let staticAttributes = attributesOnly(vAttributes);\n    vAttributes = vAttributes.map((attribute) => {\n      if (staticAttributes.find((attr) => attr.name === attribute.name)) {\n        return {\n          name: `x-bind:${attribute.name}`,\n          value: `\"${attribute.value}\"`\n        };\n      }\n      return attribute;\n    });\n    attributes = attributes.concat(vAttributes);\n  }\n  let transformedAttributeMap = {};\n  let directives2 = attributes.map(toTransformedAttributes((newName, oldName) => transformedAttributeMap[newName] = oldName)).filter(outNonAlpineAttributes).map(toParsedDirectives(transformedAttributeMap, originalAttributeOverride)).sort(byPriority);\n  return directives2.map((directive2) => {\n    return getDirectiveHandler(el, directive2);\n  });\n}\nfunction attributesOnly(attributes) {\n  return Array.from(attributes).map(toTransformedAttributes()).filter((attr) => !outNonAlpineAttributes(attr));\n}\nvar isDeferringHandlers = false;\nvar directiveHandlerStacks = /* @__PURE__ */ new Map();\nvar currentHandlerStackKey = Symbol();\nfunction deferHandlingDirectives(callback) {\n  isDeferringHandlers = true;\n  let key = Symbol();\n  currentHandlerStackKey = key;\n  directiveHandlerStacks.set(key, []);\n  let flushHandlers = () => {\n    while (directiveHandlerStacks.get(key).length)\n      directiveHandlerStacks.get(key).shift()();\n    directiveHandlerStacks.delete(key);\n  };\n  let stopDeferring = () => {\n    isDeferringHandlers = false;\n    flushHandlers();\n  };\n  callback(flushHandlers);\n  stopDeferring();\n}\nfunction getElementBoundUtilities(el) {\n  let cleanups = [];\n  let cleanup2 = (callback) => cleanups.push(callback);\n  let [effect3, cleanupEffect] = elementBoundEffect(el);\n  cleanups.push(cleanupEffect);\n  let utilities = {\n    Alpine: alpine_default,\n    effect: effect3,\n    cleanup: cleanup2,\n    evaluateLater: evaluateLater.bind(evaluateLater, el),\n    evaluate: evaluate.bind(evaluate, el)\n  };\n  let doCleanup = () => cleanups.forEach((i) => i());\n  return [utilities, doCleanup];\n}\nfunction getDirectiveHandler(el, directive2) {\n  let noop = () => {\n  };\n  let handler4 = directiveHandlers[directive2.type] || noop;\n  let [utilities, cleanup2] = getElementBoundUtilities(el);\n  onAttributeRemoved(el, directive2.original, cleanup2);\n  let fullHandler = () => {\n    if (el._x_ignore || el._x_ignoreSelf)\n      return;\n    handler4.inline && handler4.inline(el, directive2, utilities);\n    handler4 = handler4.bind(handler4, el, directive2, utilities);\n    isDeferringHandlers ? directiveHandlerStacks.get(currentHandlerStackKey).push(handler4) : handler4();\n  };\n  fullHandler.runCleanups = cleanup2;\n  return fullHandler;\n}\nvar startingWith = (subject, replacement) => ({ name, value }) => {\n  if (name.startsWith(subject))\n    name = name.replace(subject, replacement);\n  return { name, value };\n};\nvar into = (i) => i;\nfunction toTransformedAttributes(callback = () => {\n}) {\n  return ({ name, value }) => {\n    let { name: newName, value: newValue } = attributeTransformers.reduce((carry, transform) => {\n      return transform(carry);\n    }, { name, value });\n    if (newName !== name)\n      callback(newName, name);\n    return { name: newName, value: newValue };\n  };\n}\nvar attributeTransformers = [];\nfunction mapAttributes(callback) {\n  attributeTransformers.push(callback);\n}\nfunction outNonAlpineAttributes({ name }) {\n  return alpineAttributeRegex().test(name);\n}\nvar alpineAttributeRegex = () => new RegExp(`^${prefixAsString}([^:^.]+)\\\\b`);\nfunction toParsedDirectives(transformedAttributeMap, originalAttributeOverride) {\n  return ({ name, value }) => {\n    let typeMatch = name.match(alpineAttributeRegex());\n    let valueMatch = name.match(/:([a-zA-Z0-9\\-_:]+)/);\n    let modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    let original = originalAttributeOverride || transformedAttributeMap[name] || name;\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map((i) => i.replace(\".\", \"\")),\n      expression: value,\n      original\n    };\n  };\n}\nvar DEFAULT = \"DEFAULT\";\nvar directiveOrder = [\n  \"ignore\",\n  \"ref\",\n  \"data\",\n  \"id\",\n  \"anchor\",\n  \"bind\",\n  \"init\",\n  \"for\",\n  \"model\",\n  \"modelable\",\n  \"transition\",\n  \"show\",\n  \"if\",\n  DEFAULT,\n  \"teleport\"\n];\nfunction byPriority(a, b) {\n  let typeA = directiveOrder.indexOf(a.type) === -1 ? DEFAULT : a.type;\n  let typeB = directiveOrder.indexOf(b.type) === -1 ? DEFAULT : b.type;\n  return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n}\n\n// packages/alpinejs/src/utils/dispatch.js\nfunction dispatch(el, name, detail = {}) {\n  el.dispatchEvent(\n    new CustomEvent(name, {\n      detail,\n      bubbles: true,\n      // Allows events to pass the shadow DOM barrier.\n      composed: true,\n      cancelable: true\n    })\n  );\n}\n\n// packages/alpinejs/src/utils/walk.js\nfunction walk(el, callback) {\n  if (typeof ShadowRoot === \"function\" && el instanceof ShadowRoot) {\n    Array.from(el.children).forEach((el2) => walk(el2, callback));\n    return;\n  }\n  let skip = false;\n  callback(el, () => skip = true);\n  if (skip)\n    return;\n  let node = el.firstElementChild;\n  while (node) {\n    walk(node, callback, false);\n    node = node.nextElementSibling;\n  }\n}\n\n// packages/alpinejs/src/utils/warn.js\nfunction warn(message, ...args) {\n  console.warn(`Alpine Warning: ${message}`, ...args);\n}\n\n// packages/alpinejs/src/lifecycle.js\nvar started = false;\nfunction start() {\n  if (started)\n    warn(\"Alpine has already been initialized on this page. Calling Alpine.start() more than once can cause problems.\");\n  started = true;\n  if (!document.body)\n    warn(\"Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?\");\n  dispatch(document, \"alpine:init\");\n  dispatch(document, \"alpine:initializing\");\n  startObservingMutations();\n  onElAdded((el) => initTree(el, walk));\n  onElRemoved((el) => destroyTree(el));\n  onAttributesAdded((el, attrs) => {\n    directives(el, attrs).forEach((handle) => handle());\n  });\n  let outNestedComponents = (el) => !closestRoot(el.parentElement, true);\n  Array.from(document.querySelectorAll(allSelectors().join(\",\"))).filter(outNestedComponents).forEach((el) => {\n    initTree(el);\n  });\n  dispatch(document, \"alpine:initialized\");\n  setTimeout(() => {\n    warnAboutMissingPlugins();\n  });\n}\nvar rootSelectorCallbacks = [];\nvar initSelectorCallbacks = [];\nfunction rootSelectors() {\n  return rootSelectorCallbacks.map((fn) => fn());\n}\nfunction allSelectors() {\n  return rootSelectorCallbacks.concat(initSelectorCallbacks).map((fn) => fn());\n}\nfunction addRootSelector(selectorCallback) {\n  rootSelectorCallbacks.push(selectorCallback);\n}\nfunction addInitSelector(selectorCallback) {\n  initSelectorCallbacks.push(selectorCallback);\n}\nfunction closestRoot(el, includeInitSelectors = false) {\n  return findClosest(el, (element) => {\n    const selectors = includeInitSelectors ? allSelectors() : rootSelectors();\n    if (selectors.some((selector) => element.matches(selector)))\n      return true;\n  });\n}\nfunction findClosest(el, callback) {\n  if (!el)\n    return;\n  if (callback(el))\n    return el;\n  if (el._x_teleportBack)\n    el = el._x_teleportBack;\n  if (!el.parentElement)\n    return;\n  return findClosest(el.parentElement, callback);\n}\nfunction isRoot(el) {\n  return rootSelectors().some((selector) => el.matches(selector));\n}\nvar initInterceptors2 = [];\nfunction interceptInit(callback) {\n  initInterceptors2.push(callback);\n}\nfunction initTree(el, walker = walk, intercept = () => {\n}) {\n  deferHandlingDirectives(() => {\n    walker(el, (el2, skip) => {\n      intercept(el2, skip);\n      initInterceptors2.forEach((i) => i(el2, skip));\n      directives(el2, el2.attributes).forEach((handle) => handle());\n      el2._x_ignore && skip();\n    });\n  });\n}\nfunction destroyTree(root, walker = walk) {\n  walker(root, (el) => {\n    cleanupElement(el);\n    cleanupAttributes(el);\n  });\n}\nfunction warnAboutMissingPlugins() {\n  let pluginDirectives = [\n    [\"ui\", \"dialog\", [\"[x-dialog], [x-popover]\"]],\n    [\"anchor\", \"anchor\", [\"[x-anchor]\"]],\n    [\"sort\", \"sort\", [\"[x-sort]\"]]\n  ];\n  pluginDirectives.forEach(([plugin2, directive2, selectors]) => {\n    if (directiveExists(directive2))\n      return;\n    selectors.some((selector) => {\n      if (document.querySelector(selector)) {\n        warn(`found \"${selector}\", but missing ${plugin2} plugin`);\n        return true;\n      }\n    });\n  });\n}\n\n// packages/alpinejs/src/nextTick.js\nvar tickStack = [];\nvar isHolding = false;\nfunction nextTick(callback = () => {\n}) {\n  queueMicrotask(() => {\n    isHolding || setTimeout(() => {\n      releaseNextTicks();\n    });\n  });\n  return new Promise((res) => {\n    tickStack.push(() => {\n      callback();\n      res();\n    });\n  });\n}\nfunction releaseNextTicks() {\n  isHolding = false;\n  while (tickStack.length)\n    tickStack.shift()();\n}\nfunction holdNextTicks() {\n  isHolding = true;\n}\n\n// packages/alpinejs/src/utils/classes.js\nfunction setClasses(el, value) {\n  if (Array.isArray(value)) {\n    return setClassesFromString(el, value.join(\" \"));\n  } else if (typeof value === \"object\" && value !== null) {\n    return setClassesFromObject(el, value);\n  } else if (typeof value === \"function\") {\n    return setClasses(el, value());\n  }\n  return setClassesFromString(el, value);\n}\nfunction setClassesFromString(el, classString) {\n  let split = (classString2) => classString2.split(\" \").filter(Boolean);\n  let missingClasses = (classString2) => classString2.split(\" \").filter((i) => !el.classList.contains(i)).filter(Boolean);\n  let addClassesAndReturnUndo = (classes) => {\n    el.classList.add(...classes);\n    return () => {\n      el.classList.remove(...classes);\n    };\n  };\n  classString = classString === true ? classString = \"\" : classString || \"\";\n  return addClassesAndReturnUndo(missingClasses(classString));\n}\nfunction setClassesFromObject(el, classObject) {\n  let split = (classString) => classString.split(\" \").filter(Boolean);\n  let forAdd = Object.entries(classObject).flatMap(([classString, bool]) => bool ? split(classString) : false).filter(Boolean);\n  let forRemove = Object.entries(classObject).flatMap(([classString, bool]) => !bool ? split(classString) : false).filter(Boolean);\n  let added = [];\n  let removed = [];\n  forRemove.forEach((i) => {\n    if (el.classList.contains(i)) {\n      el.classList.remove(i);\n      removed.push(i);\n    }\n  });\n  forAdd.forEach((i) => {\n    if (!el.classList.contains(i)) {\n      el.classList.add(i);\n      added.push(i);\n    }\n  });\n  return () => {\n    removed.forEach((i) => el.classList.add(i));\n    added.forEach((i) => el.classList.remove(i));\n  };\n}\n\n// packages/alpinejs/src/utils/styles.js\nfunction setStyles(el, value) {\n  if (typeof value === \"object\" && value !== null) {\n    return setStylesFromObject(el, value);\n  }\n  return setStylesFromString(el, value);\n}\nfunction setStylesFromObject(el, value) {\n  let previousStyles = {};\n  Object.entries(value).forEach(([key, value2]) => {\n    previousStyles[key] = el.style[key];\n    if (!key.startsWith(\"--\")) {\n      key = kebabCase(key);\n    }\n    el.style.setProperty(key, value2);\n  });\n  setTimeout(() => {\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  });\n  return () => {\n    setStyles(el, previousStyles);\n  };\n}\nfunction setStylesFromString(el, value) {\n  let cache = el.getAttribute(\"style\", value);\n  el.setAttribute(\"style\", value);\n  return () => {\n    el.setAttribute(\"style\", cache || \"\");\n  };\n}\nfunction kebabCase(subject) {\n  return subject.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\n// packages/alpinejs/src/utils/once.js\nfunction once(callback, fallback = () => {\n}) {\n  let called = false;\n  return function() {\n    if (!called) {\n      called = true;\n      callback.apply(this, arguments);\n    } else {\n      fallback.apply(this, arguments);\n    }\n  };\n}\n\n// packages/alpinejs/src/directives/x-transition.js\ndirective(\"transition\", (el, { value, modifiers, expression }, { evaluate: evaluate2 }) => {\n  if (typeof expression === \"function\")\n    expression = evaluate2(expression);\n  if (expression === false)\n    return;\n  if (!expression || typeof expression === \"boolean\") {\n    registerTransitionsFromHelper(el, modifiers, value);\n  } else {\n    registerTransitionsFromClassString(el, expression, value);\n  }\n});\nfunction registerTransitionsFromClassString(el, classString, stage) {\n  registerTransitionObject(el, setClasses, \"\");\n  let directiveStorageMap = {\n    \"enter\": (classes) => {\n      el._x_transition.enter.during = classes;\n    },\n    \"enter-start\": (classes) => {\n      el._x_transition.enter.start = classes;\n    },\n    \"enter-end\": (classes) => {\n      el._x_transition.enter.end = classes;\n    },\n    \"leave\": (classes) => {\n      el._x_transition.leave.during = classes;\n    },\n    \"leave-start\": (classes) => {\n      el._x_transition.leave.start = classes;\n    },\n    \"leave-end\": (classes) => {\n      el._x_transition.leave.end = classes;\n    }\n  };\n  directiveStorageMap[stage](classString);\n}\nfunction registerTransitionsFromHelper(el, modifiers, stage) {\n  registerTransitionObject(el, setStyles);\n  let doesntSpecify = !modifiers.includes(\"in\") && !modifiers.includes(\"out\") && !stage;\n  let transitioningIn = doesntSpecify || modifiers.includes(\"in\") || [\"enter\"].includes(stage);\n  let transitioningOut = doesntSpecify || modifiers.includes(\"out\") || [\"leave\"].includes(stage);\n  if (modifiers.includes(\"in\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index < modifiers.indexOf(\"out\"));\n  }\n  if (modifiers.includes(\"out\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index > modifiers.indexOf(\"out\"));\n  }\n  let wantsAll = !modifiers.includes(\"opacity\") && !modifiers.includes(\"scale\");\n  let wantsOpacity = wantsAll || modifiers.includes(\"opacity\");\n  let wantsScale = wantsAll || modifiers.includes(\"scale\");\n  let opacityValue = wantsOpacity ? 0 : 1;\n  let scaleValue = wantsScale ? modifierValue(modifiers, \"scale\", 95) / 100 : 1;\n  let delay = modifierValue(modifiers, \"delay\", 0) / 1e3;\n  let origin = modifierValue(modifiers, \"origin\", \"center\");\n  let property = \"opacity, transform\";\n  let durationIn = modifierValue(modifiers, \"duration\", 150) / 1e3;\n  let durationOut = modifierValue(modifiers, \"duration\", 75) / 1e3;\n  let easing = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n  if (transitioningIn) {\n    el._x_transition.enter.during = {\n      transformOrigin: origin,\n      transitionDelay: `${delay}s`,\n      transitionProperty: property,\n      transitionDuration: `${durationIn}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.enter.start = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n    el._x_transition.enter.end = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n  }\n  if (transitioningOut) {\n    el._x_transition.leave.during = {\n      transformOrigin: origin,\n      transitionDelay: `${delay}s`,\n      transitionProperty: property,\n      transitionDuration: `${durationOut}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.leave.start = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n    el._x_transition.leave.end = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n  }\n}\nfunction registerTransitionObject(el, setFunction, defaultValue = {}) {\n  if (!el._x_transition)\n    el._x_transition = {\n      enter: { during: defaultValue, start: defaultValue, end: defaultValue },\n      leave: { during: defaultValue, start: defaultValue, end: defaultValue },\n      in(before = () => {\n      }, after = () => {\n      }) {\n        transition(el, setFunction, {\n          during: this.enter.during,\n          start: this.enter.start,\n          end: this.enter.end\n        }, before, after);\n      },\n      out(before = () => {\n      }, after = () => {\n      }) {\n        transition(el, setFunction, {\n          during: this.leave.during,\n          start: this.leave.start,\n          end: this.leave.end\n        }, before, after);\n      }\n    };\n}\nwindow.Element.prototype._x_toggleAndCascadeWithTransitions = function(el, value, show, hide) {\n  const nextTick2 = document.visibilityState === \"visible\" ? requestAnimationFrame : setTimeout;\n  let clickAwayCompatibleShow = () => nextTick2(show);\n  if (value) {\n    if (el._x_transition && (el._x_transition.enter || el._x_transition.leave)) {\n      el._x_transition.enter && (Object.entries(el._x_transition.enter.during).length || Object.entries(el._x_transition.enter.start).length || Object.entries(el._x_transition.enter.end).length) ? el._x_transition.in(show) : clickAwayCompatibleShow();\n    } else {\n      el._x_transition ? el._x_transition.in(show) : clickAwayCompatibleShow();\n    }\n    return;\n  }\n  el._x_hidePromise = el._x_transition ? new Promise((resolve, reject) => {\n    el._x_transition.out(() => {\n    }, () => resolve(hide));\n    el._x_transitioning && el._x_transitioning.beforeCancel(() => reject({ isFromCancelledTransition: true }));\n  }) : Promise.resolve(hide);\n  queueMicrotask(() => {\n    let closest = closestHide(el);\n    if (closest) {\n      if (!closest._x_hideChildren)\n        closest._x_hideChildren = [];\n      closest._x_hideChildren.push(el);\n    } else {\n      nextTick2(() => {\n        let hideAfterChildren = (el2) => {\n          let carry = Promise.all([\n            el2._x_hidePromise,\n            ...(el2._x_hideChildren || []).map(hideAfterChildren)\n          ]).then(([i]) => i?.());\n          delete el2._x_hidePromise;\n          delete el2._x_hideChildren;\n          return carry;\n        };\n        hideAfterChildren(el).catch((e) => {\n          if (!e.isFromCancelledTransition)\n            throw e;\n        });\n      });\n    }\n  });\n};\nfunction closestHide(el) {\n  let parent = el.parentNode;\n  if (!parent)\n    return;\n  return parent._x_hidePromise ? parent : closestHide(parent);\n}\nfunction transition(el, setFunction, { during, start: start2, end } = {}, before = () => {\n}, after = () => {\n}) {\n  if (el._x_transitioning)\n    el._x_transitioning.cancel();\n  if (Object.keys(during).length === 0 && Object.keys(start2).length === 0 && Object.keys(end).length === 0) {\n    before();\n    after();\n    return;\n  }\n  let undoStart, undoDuring, undoEnd;\n  performTransition(el, {\n    start() {\n      undoStart = setFunction(el, start2);\n    },\n    during() {\n      undoDuring = setFunction(el, during);\n    },\n    before,\n    end() {\n      undoStart();\n      undoEnd = setFunction(el, end);\n    },\n    after,\n    cleanup() {\n      undoDuring();\n      undoEnd();\n    }\n  });\n}\nfunction performTransition(el, stages) {\n  let interrupted, reachedBefore, reachedEnd;\n  let finish = once(() => {\n    mutateDom(() => {\n      interrupted = true;\n      if (!reachedBefore)\n        stages.before();\n      if (!reachedEnd) {\n        stages.end();\n        releaseNextTicks();\n      }\n      stages.after();\n      if (el.isConnected)\n        stages.cleanup();\n      delete el._x_transitioning;\n    });\n  });\n  el._x_transitioning = {\n    beforeCancels: [],\n    beforeCancel(callback) {\n      this.beforeCancels.push(callback);\n    },\n    cancel: once(function() {\n      while (this.beforeCancels.length) {\n        this.beforeCancels.shift()();\n      }\n      ;\n      finish();\n    }),\n    finish\n  };\n  mutateDom(() => {\n    stages.start();\n    stages.during();\n  });\n  holdNextTicks();\n  requestAnimationFrame(() => {\n    if (interrupted)\n      return;\n    let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    let delay = Number(getComputedStyle(el).transitionDelay.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    if (duration === 0)\n      duration = Number(getComputedStyle(el).animationDuration.replace(\"s\", \"\")) * 1e3;\n    mutateDom(() => {\n      stages.before();\n    });\n    reachedBefore = true;\n    requestAnimationFrame(() => {\n      if (interrupted)\n        return;\n      mutateDom(() => {\n        stages.end();\n      });\n      releaseNextTicks();\n      setTimeout(el._x_transitioning.finish, duration + delay);\n      reachedEnd = true;\n    });\n  });\n}\nfunction modifierValue(modifiers, key, fallback) {\n  if (modifiers.indexOf(key) === -1)\n    return fallback;\n  const rawValue = modifiers[modifiers.indexOf(key) + 1];\n  if (!rawValue)\n    return fallback;\n  if (key === \"scale\") {\n    if (isNaN(rawValue))\n      return fallback;\n  }\n  if (key === \"duration\" || key === \"delay\") {\n    let match = rawValue.match(/([0-9]+)ms/);\n    if (match)\n      return match[1];\n  }\n  if (key === \"origin\") {\n    if ([\"top\", \"right\", \"left\", \"center\", \"bottom\"].includes(modifiers[modifiers.indexOf(key) + 2])) {\n      return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(\" \");\n    }\n  }\n  return rawValue;\n}\n\n// packages/alpinejs/src/clone.js\nvar isCloning = false;\nfunction skipDuringClone(callback, fallback = () => {\n}) {\n  return (...args) => isCloning ? fallback(...args) : callback(...args);\n}\nfunction onlyDuringClone(callback) {\n  return (...args) => isCloning && callback(...args);\n}\nvar interceptors = [];\nfunction interceptClone(callback) {\n  interceptors.push(callback);\n}\nfunction cloneNode(from, to) {\n  interceptors.forEach((i) => i(from, to));\n  isCloning = true;\n  dontRegisterReactiveSideEffects(() => {\n    initTree(to, (el, callback) => {\n      callback(el, () => {\n      });\n    });\n  });\n  isCloning = false;\n}\nvar isCloningLegacy = false;\nfunction clone(oldEl, newEl) {\n  if (!newEl._x_dataStack)\n    newEl._x_dataStack = oldEl._x_dataStack;\n  isCloning = true;\n  isCloningLegacy = true;\n  dontRegisterReactiveSideEffects(() => {\n    cloneTree(newEl);\n  });\n  isCloning = false;\n  isCloningLegacy = false;\n}\nfunction cloneTree(el) {\n  let hasRunThroughFirstEl = false;\n  let shallowWalker = (el2, callback) => {\n    walk(el2, (el3, skip) => {\n      if (hasRunThroughFirstEl && isRoot(el3))\n        return skip();\n      hasRunThroughFirstEl = true;\n      callback(el3, skip);\n    });\n  };\n  initTree(el, shallowWalker);\n}\nfunction dontRegisterReactiveSideEffects(callback) {\n  let cache = effect;\n  overrideEffect((callback2, el) => {\n    let storedEffect = cache(callback2);\n    release(storedEffect);\n    return () => {\n    };\n  });\n  callback();\n  overrideEffect(cache);\n}\n\n// packages/alpinejs/src/utils/bind.js\nfunction bind(el, name, value, modifiers = []) {\n  if (!el._x_bindings)\n    el._x_bindings = reactive({});\n  el._x_bindings[name] = value;\n  name = modifiers.includes(\"camel\") ? camelCase(name) : name;\n  switch (name) {\n    case \"value\":\n      bindInputValue(el, value);\n      break;\n    case \"style\":\n      bindStyles(el, value);\n      break;\n    case \"class\":\n      bindClasses(el, value);\n      break;\n    case \"selected\":\n    case \"checked\":\n      bindAttributeAndProperty(el, name, value);\n      break;\n    default:\n      bindAttribute(el, name, value);\n      break;\n  }\n}\nfunction bindInputValue(el, value) {\n  if (isRadio(el)) {\n    if (el.attributes.value === void 0) {\n      el.value = value;\n    }\n    if (window.fromModel) {\n      if (typeof value === \"boolean\") {\n        el.checked = safeParseBoolean(el.value) === value;\n      } else {\n        el.checked = checkedAttrLooseCompare(el.value, value);\n      }\n    }\n  } else if (isCheckbox(el)) {\n    if (Number.isInteger(value)) {\n      el.value = value;\n    } else if (!Array.isArray(value) && typeof value !== \"boolean\" && ![null, void 0].includes(value)) {\n      el.value = String(value);\n    } else {\n      if (Array.isArray(value)) {\n        el.checked = value.some((val) => checkedAttrLooseCompare(val, el.value));\n      } else {\n        el.checked = !!value;\n      }\n    }\n  } else if (el.tagName === \"SELECT\") {\n    updateSelect(el, value);\n  } else {\n    if (el.value === value)\n      return;\n    el.value = value === void 0 ? \"\" : value;\n  }\n}\nfunction bindClasses(el, value) {\n  if (el._x_undoAddedClasses)\n    el._x_undoAddedClasses();\n  el._x_undoAddedClasses = setClasses(el, value);\n}\nfunction bindStyles(el, value) {\n  if (el._x_undoAddedStyles)\n    el._x_undoAddedStyles();\n  el._x_undoAddedStyles = setStyles(el, value);\n}\nfunction bindAttributeAndProperty(el, name, value) {\n  bindAttribute(el, name, value);\n  setPropertyIfChanged(el, name, value);\n}\nfunction bindAttribute(el, name, value) {\n  if ([null, void 0, false].includes(value) && attributeShouldntBePreservedIfFalsy(name)) {\n    el.removeAttribute(name);\n  } else {\n    if (isBooleanAttr(name))\n      value = name;\n    setIfChanged(el, name, value);\n  }\n}\nfunction setIfChanged(el, attrName, value) {\n  if (el.getAttribute(attrName) != value) {\n    el.setAttribute(attrName, value);\n  }\n}\nfunction setPropertyIfChanged(el, propName, value) {\n  if (el[propName] !== value) {\n    el[propName] = value;\n  }\n}\nfunction updateSelect(el, value) {\n  const arrayWrappedValue = [].concat(value).map((value2) => {\n    return value2 + \"\";\n  });\n  Array.from(el.options).forEach((option) => {\n    option.selected = arrayWrappedValue.includes(option.value);\n  });\n}\nfunction camelCase(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\nfunction checkedAttrLooseCompare(valueA, valueB) {\n  return valueA == valueB;\n}\nfunction safeParseBoolean(rawValue) {\n  if ([1, \"1\", \"true\", \"on\", \"yes\", true].includes(rawValue)) {\n    return true;\n  }\n  if ([0, \"0\", \"false\", \"off\", \"no\", false].includes(rawValue)) {\n    return false;\n  }\n  return rawValue ? Boolean(rawValue) : null;\n}\nvar booleanAttributes = /* @__PURE__ */ new Set([\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"defer\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"inert\",\n  \"ismap\",\n  \"itemscope\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"selected\",\n  \"shadowrootclonable\",\n  \"shadowrootdelegatesfocus\",\n  \"shadowrootserializable\"\n]);\nfunction isBooleanAttr(attrName) {\n  return booleanAttributes.has(attrName);\n}\nfunction attributeShouldntBePreservedIfFalsy(name) {\n  return ![\"aria-pressed\", \"aria-checked\", \"aria-expanded\", \"aria-selected\"].includes(name);\n}\nfunction getBinding(el, name, fallback) {\n  if (el._x_bindings && el._x_bindings[name] !== void 0)\n    return el._x_bindings[name];\n  return getAttributeBinding(el, name, fallback);\n}\nfunction extractProp(el, name, fallback, extract = true) {\n  if (el._x_bindings && el._x_bindings[name] !== void 0)\n    return el._x_bindings[name];\n  if (el._x_inlineBindings && el._x_inlineBindings[name] !== void 0) {\n    let binding = el._x_inlineBindings[name];\n    binding.extract = extract;\n    return dontAutoEvaluateFunctions(() => {\n      return evaluate(el, binding.expression);\n    });\n  }\n  return getAttributeBinding(el, name, fallback);\n}\nfunction getAttributeBinding(el, name, fallback) {\n  let attr = el.getAttribute(name);\n  if (attr === null)\n    return typeof fallback === \"function\" ? fallback() : fallback;\n  if (attr === \"\")\n    return true;\n  if (isBooleanAttr(name)) {\n    return !![name, \"true\"].includes(attr);\n  }\n  return attr;\n}\nfunction isCheckbox(el) {\n  return el.type === \"checkbox\" || el.localName === \"ui-checkbox\" || el.localName === \"ui-switch\";\n}\nfunction isRadio(el) {\n  return el.type === \"radio\" || el.localName === \"ui-radio\";\n}\n\n// packages/alpinejs/src/utils/debounce.js\nfunction debounce(func, wait) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// packages/alpinejs/src/utils/throttle.js\nfunction throttle(func, limit) {\n  let inThrottle;\n  return function() {\n    let context = this, args = arguments;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n// packages/alpinejs/src/entangle.js\nfunction entangle({ get: outerGet, set: outerSet }, { get: innerGet, set: innerSet }) {\n  let firstRun = true;\n  let outerHash;\n  let innerHash;\n  let reference = effect(() => {\n    let outer = outerGet();\n    let inner = innerGet();\n    if (firstRun) {\n      innerSet(cloneIfObject(outer));\n      firstRun = false;\n    } else {\n      let outerHashLatest = JSON.stringify(outer);\n      let innerHashLatest = JSON.stringify(inner);\n      if (outerHashLatest !== outerHash) {\n        innerSet(cloneIfObject(outer));\n      } else if (outerHashLatest !== innerHashLatest) {\n        outerSet(cloneIfObject(inner));\n      } else {\n      }\n    }\n    outerHash = JSON.stringify(outerGet());\n    innerHash = JSON.stringify(innerGet());\n  });\n  return () => {\n    release(reference);\n  };\n}\nfunction cloneIfObject(value) {\n  return typeof value === \"object\" ? JSON.parse(JSON.stringify(value)) : value;\n}\n\n// packages/alpinejs/src/plugin.js\nfunction plugin(callback) {\n  let callbacks = Array.isArray(callback) ? callback : [callback];\n  callbacks.forEach((i) => i(alpine_default));\n}\n\n// packages/alpinejs/src/store.js\nvar stores = {};\nvar isReactive = false;\nfunction store(name, value) {\n  if (!isReactive) {\n    stores = reactive(stores);\n    isReactive = true;\n  }\n  if (value === void 0) {\n    return stores[name];\n  }\n  stores[name] = value;\n  initInterceptors(stores[name]);\n  if (typeof value === \"object\" && value !== null && value.hasOwnProperty(\"init\") && typeof value.init === \"function\") {\n    stores[name].init();\n  }\n}\nfunction getStores() {\n  return stores;\n}\n\n// packages/alpinejs/src/binds.js\nvar binds = {};\nfunction bind2(name, bindings) {\n  let getBindings = typeof bindings !== \"function\" ? () => bindings : bindings;\n  if (name instanceof Element) {\n    return applyBindingsObject(name, getBindings());\n  } else {\n    binds[name] = getBindings;\n  }\n  return () => {\n  };\n}\nfunction injectBindingProviders(obj) {\n  Object.entries(binds).forEach(([name, callback]) => {\n    Object.defineProperty(obj, name, {\n      get() {\n        return (...args) => {\n          return callback(...args);\n        };\n      }\n    });\n  });\n  return obj;\n}\nfunction applyBindingsObject(el, obj, original) {\n  let cleanupRunners = [];\n  while (cleanupRunners.length)\n    cleanupRunners.pop()();\n  let attributes = Object.entries(obj).map(([name, value]) => ({ name, value }));\n  let staticAttributes = attributesOnly(attributes);\n  attributes = attributes.map((attribute) => {\n    if (staticAttributes.find((attr) => attr.name === attribute.name)) {\n      return {\n        name: `x-bind:${attribute.name}`,\n        value: `\"${attribute.value}\"`\n      };\n    }\n    return attribute;\n  });\n  directives(el, attributes, original).map((handle) => {\n    cleanupRunners.push(handle.runCleanups);\n    handle();\n  });\n  return () => {\n    while (cleanupRunners.length)\n      cleanupRunners.pop()();\n  };\n}\n\n// packages/alpinejs/src/datas.js\nvar datas = {};\nfunction data(name, callback) {\n  datas[name] = callback;\n}\nfunction injectDataProviders(obj, context) {\n  Object.entries(datas).forEach(([name, callback]) => {\n    Object.defineProperty(obj, name, {\n      get() {\n        return (...args) => {\n          return callback.bind(context)(...args);\n        };\n      },\n      enumerable: false\n    });\n  });\n  return obj;\n}\n\n// packages/alpinejs/src/alpine.js\nvar Alpine = {\n  get reactive() {\n    return reactive;\n  },\n  get release() {\n    return release;\n  },\n  get effect() {\n    return effect;\n  },\n  get raw() {\n    return raw;\n  },\n  version: \"3.14.3\",\n  flushAndStopDeferringMutations,\n  dontAutoEvaluateFunctions,\n  disableEffectScheduling,\n  startObservingMutations,\n  stopObservingMutations,\n  setReactivityEngine,\n  onAttributeRemoved,\n  onAttributesAdded,\n  closestDataStack,\n  skipDuringClone,\n  onlyDuringClone,\n  addRootSelector,\n  addInitSelector,\n  interceptClone,\n  addScopeToNode,\n  deferMutations,\n  mapAttributes,\n  evaluateLater,\n  interceptInit,\n  setEvaluator,\n  mergeProxies,\n  extractProp,\n  findClosest,\n  onElRemoved,\n  closestRoot,\n  destroyTree,\n  interceptor,\n  // INTERNAL: not public API and is subject to change without major release.\n  transition,\n  // INTERNAL\n  setStyles,\n  // INTERNAL\n  mutateDom,\n  directive,\n  entangle,\n  throttle,\n  debounce,\n  evaluate,\n  initTree,\n  nextTick,\n  prefixed: prefix,\n  prefix: setPrefix,\n  plugin,\n  magic,\n  store,\n  start,\n  clone,\n  // INTERNAL\n  cloneNode,\n  // INTERNAL\n  bound: getBinding,\n  $data: scope,\n  watch,\n  walk,\n  data,\n  bind: bind2\n};\nvar alpine_default = Alpine;\n\n// node_modules/@vue/shared/dist/shared.esm-bundler.js\nfunction makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\nvar specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nvar isBooleanAttr2 = /* @__PURE__ */ makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`);\nvar EMPTY_OBJ =  true ? Object.freeze({}) : 0;\nvar EMPTY_ARR =  true ? Object.freeze([]) : 0;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hasOwn = (val, key) => hasOwnProperty.call(val, key);\nvar isArray = Array.isArray;\nvar isMap = (val) => toTypeString(val) === \"[object Map]\";\nvar isString = (val) => typeof val === \"string\";\nvar isSymbol = (val) => typeof val === \"symbol\";\nvar isObject = (val) => val !== null && typeof val === \"object\";\nvar objectToString = Object.prototype.toString;\nvar toTypeString = (value) => objectToString.call(value);\nvar toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nvar isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nvar cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nvar capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\nvar toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\nvar hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\n\n// node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js\nvar targetMap = /* @__PURE__ */ new WeakMap();\nvar effectStack = [];\nvar activeEffect;\nvar ITERATE_KEY = Symbol( true ? \"iterate\" : 0);\nvar MAP_KEY_ITERATE_KEY = Symbol( true ? \"Map key iterate\" : 0);\nfunction isEffect(fn) {\n  return fn && fn._isEffect === true;\n}\nfunction effect2(fn, options = EMPTY_OBJ) {\n  if (isEffect(fn)) {\n    fn = fn.raw;\n  }\n  const effect3 = createReactiveEffect(fn, options);\n  if (!options.lazy) {\n    effect3();\n  }\n  return effect3;\n}\nfunction stop(effect3) {\n  if (effect3.active) {\n    cleanup(effect3);\n    if (effect3.options.onStop) {\n      effect3.options.onStop();\n    }\n    effect3.active = false;\n  }\n}\nvar uid = 0;\nfunction createReactiveEffect(fn, options) {\n  const effect3 = function reactiveEffect() {\n    if (!effect3.active) {\n      return fn();\n    }\n    if (!effectStack.includes(effect3)) {\n      cleanup(effect3);\n      try {\n        enableTracking();\n        effectStack.push(effect3);\n        activeEffect = effect3;\n        return fn();\n      } finally {\n        effectStack.pop();\n        resetTracking();\n        activeEffect = effectStack[effectStack.length - 1];\n      }\n    }\n  };\n  effect3.id = uid++;\n  effect3.allowRecurse = !!options.allowRecurse;\n  effect3._isEffect = true;\n  effect3.active = true;\n  effect3.raw = fn;\n  effect3.deps = [];\n  effect3.options = options;\n  return effect3;\n}\nfunction cleanup(effect3) {\n  const { deps } = effect3;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect3);\n    }\n    deps.length = 0;\n  }\n}\nvar shouldTrack = true;\nvar trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (!shouldTrack || activeEffect === void 0) {\n    return;\n  }\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n    targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n    depsMap.set(key, dep = /* @__PURE__ */ new Set());\n  }\n  if (!dep.has(activeEffect)) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (activeEffect.options.onTrack) {\n      activeEffect.options.onTrack({\n        effect: activeEffect,\n        target,\n        type,\n        key\n      });\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  const effects = /* @__PURE__ */ new Set();\n  const add2 = (effectsToAdd) => {\n    if (effectsToAdd) {\n      effectsToAdd.forEach((effect3) => {\n        if (effect3 !== activeEffect || effect3.allowRecurse) {\n          effects.add(effect3);\n        }\n      });\n    }\n  };\n  if (type === \"clear\") {\n    depsMap.forEach(add2);\n  } else if (key === \"length\" && isArray(target)) {\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || key2 >= newValue) {\n        add2(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      add2(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          add2(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const run = (effect3) => {\n    if (effect3.options.onTrigger) {\n      effect3.options.onTrigger({\n        effect: effect3,\n        target,\n        key,\n        type,\n        newValue,\n        oldValue,\n        oldTarget\n      });\n    }\n    if (effect3.options.scheduler) {\n      effect3.options.scheduler(effect3);\n    } else {\n      effect3();\n    }\n  };\n  effects.forEach(run);\n}\nvar isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nvar builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol).map((key) => Symbol[key]).filter(isSymbol));\nvar get2 = /* @__PURE__ */ createGetter();\nvar readonlyGet = /* @__PURE__ */ createGetter(true);\nvar arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get3(target, key, receiver) {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver);\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\n      return shouldUnwrap ? res.value : res;\n    }\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reactive2(res);\n    }\n    return res;\n  };\n}\nvar set2 = /* @__PURE__ */ createSetter();\nfunction createSetter(shallow = false) {\n  return function set3(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!shallow) {\n      value = toRaw(value);\n      oldValue = toRaw(oldValue);\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  };\n}\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n  if (result && hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction has(target, key) {\n  const result = Reflect.has(target, key);\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\", key);\n  }\n  return result;\n}\nfunction ownKeys(target) {\n  track(target, \"iterate\", isArray(target) ? \"length\" : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\nvar mutableHandlers = {\n  get: get2,\n  set: set2,\n  deleteProperty,\n  has,\n  ownKeys\n};\nvar readonlyHandlers = {\n  get: readonlyGet,\n  set(target, key) {\n    if (true) {\n      console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n    }\n    return true;\n  },\n  deleteProperty(target, key) {\n    if (true) {\n      console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n    }\n    return true;\n  }\n};\nvar toReactive = (value) => isObject(value) ? reactive2(value) : value;\nvar toReadonly = (value) => isObject(value) ? readonly(value) : value;\nvar toShallow = (value) => value;\nvar getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n  target = target[\n    \"__v_raw\"\n    /* RAW */\n  ];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"get\", key);\n  }\n  !isReadonly && track(rawTarget, \"get\", rawKey);\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has$1(key, isReadonly = false) {\n  const target = this[\n    \"__v_raw\"\n    /* RAW */\n  ];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"has\", key);\n  }\n  !isReadonly && track(rawTarget, \"has\", rawKey);\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\n    \"__v_raw\"\n    /* RAW */\n  ];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set$1(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get3 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (true) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get3.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get3 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (true) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get3 ? get3.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget =  true ? isMap(target) ? new Map(target) : new Set(target) : 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\n      \"__v_raw\"\n      /* RAW */\n    ];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\n      \"__v_raw\"\n      /* RAW */\n    ];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (true) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get$1(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get$1(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get$1(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n    add: createReadonlyMethod(\n      \"add\"\n      /* ADD */\n    ),\n    set: createReadonlyMethod(\n      \"set\"\n      /* SET */\n    ),\n    delete: createReadonlyMethod(\n      \"delete\"\n      /* DELETE */\n    ),\n    clear: createReadonlyMethod(\n      \"clear\"\n      /* CLEAR */\n    ),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get$1(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n    add: createReadonlyMethod(\n      \"add\"\n      /* ADD */\n    ),\n    set: createReadonlyMethod(\n      \"set\"\n      /* SET */\n    ),\n    delete: createReadonlyMethod(\n      \"delete\"\n      /* DELETE */\n    ),\n    clear: createReadonlyMethod(\n      \"clear\"\n      /* CLEAR */\n    ),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations2[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(method, true, true);\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nvar [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n  };\n}\nvar mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nvar readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(`Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`);\n  }\n}\nvar reactiveMap = /* @__PURE__ */ new WeakMap();\nvar shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nvar readonlyMap = /* @__PURE__ */ new WeakMap();\nvar shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getTargetType(value) {\n  return value[\n    \"__v_skip\"\n    /* SKIP */\n  ] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));\n}\nfunction reactive2(target) {\n  if (target && target[\n    \"__v_isReadonly\"\n    /* IS_READONLY */\n  ]) {\n    return target;\n  }\n  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\nfunction readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (true) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\n    \"__v_raw\"\n    /* RAW */\n  ] && !(isReadonly && target[\n    \"__v_isReactive\"\n    /* IS_REACTIVE */\n  ])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0) {\n    return target;\n  }\n  const proxy = new Proxy(target, targetType === 2 ? collectionHandlers : baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction toRaw(observed) {\n  return observed && toRaw(observed[\n    \"__v_raw\"\n    /* RAW */\n  ]) || observed;\n}\nfunction isRef(r) {\n  return Boolean(r && r.__v_isRef === true);\n}\n\n// packages/alpinejs/src/magics/$nextTick.js\nmagic(\"nextTick\", () => nextTick);\n\n// packages/alpinejs/src/magics/$dispatch.js\nmagic(\"dispatch\", (el) => dispatch.bind(dispatch, el));\n\n// packages/alpinejs/src/magics/$watch.js\nmagic(\"watch\", (el, { evaluateLater: evaluateLater2, cleanup: cleanup2 }) => (key, callback) => {\n  let evaluate2 = evaluateLater2(key);\n  let getter = () => {\n    let value;\n    evaluate2((i) => value = i);\n    return value;\n  };\n  let unwatch = watch(getter, callback);\n  cleanup2(unwatch);\n});\n\n// packages/alpinejs/src/magics/$store.js\nmagic(\"store\", getStores);\n\n// packages/alpinejs/src/magics/$data.js\nmagic(\"data\", (el) => scope(el));\n\n// packages/alpinejs/src/magics/$root.js\nmagic(\"root\", (el) => closestRoot(el));\n\n// packages/alpinejs/src/magics/$refs.js\nmagic(\"refs\", (el) => {\n  if (el._x_refs_proxy)\n    return el._x_refs_proxy;\n  el._x_refs_proxy = mergeProxies(getArrayOfRefObject(el));\n  return el._x_refs_proxy;\n});\nfunction getArrayOfRefObject(el) {\n  let refObjects = [];\n  findClosest(el, (i) => {\n    if (i._x_refs)\n      refObjects.push(i._x_refs);\n  });\n  return refObjects;\n}\n\n// packages/alpinejs/src/ids.js\nvar globalIdMemo = {};\nfunction findAndIncrementId(name) {\n  if (!globalIdMemo[name])\n    globalIdMemo[name] = 0;\n  return ++globalIdMemo[name];\n}\nfunction closestIdRoot(el, name) {\n  return findClosest(el, (element) => {\n    if (element._x_ids && element._x_ids[name])\n      return true;\n  });\n}\nfunction setIdRoot(el, name) {\n  if (!el._x_ids)\n    el._x_ids = {};\n  if (!el._x_ids[name])\n    el._x_ids[name] = findAndIncrementId(name);\n}\n\n// packages/alpinejs/src/magics/$id.js\nmagic(\"id\", (el, { cleanup: cleanup2 }) => (name, key = null) => {\n  let cacheKey = `${name}${key ? `-${key}` : \"\"}`;\n  return cacheIdByNameOnElement(el, cacheKey, cleanup2, () => {\n    let root = closestIdRoot(el, name);\n    let id = root ? root._x_ids[name] : findAndIncrementId(name);\n    return key ? `${name}-${id}-${key}` : `${name}-${id}`;\n  });\n});\ninterceptClone((from, to) => {\n  if (from._x_id) {\n    to._x_id = from._x_id;\n  }\n});\nfunction cacheIdByNameOnElement(el, cacheKey, cleanup2, callback) {\n  if (!el._x_id)\n    el._x_id = {};\n  if (el._x_id[cacheKey])\n    return el._x_id[cacheKey];\n  let output = callback();\n  el._x_id[cacheKey] = output;\n  cleanup2(() => {\n    delete el._x_id[cacheKey];\n  });\n  return output;\n}\n\n// packages/alpinejs/src/magics/$el.js\nmagic(\"el\", (el) => el);\n\n// packages/alpinejs/src/magics/index.js\nwarnMissingPluginMagic(\"Focus\", \"focus\", \"focus\");\nwarnMissingPluginMagic(\"Persist\", \"persist\", \"persist\");\nfunction warnMissingPluginMagic(name, magicName, slug) {\n  magic(magicName, (el) => warn(`You can't use [$${magicName}] without first installing the \"${name}\" plugin here: https://alpinejs.dev/plugins/${slug}`, el));\n}\n\n// packages/alpinejs/src/directives/x-modelable.js\ndirective(\"modelable\", (el, { expression }, { effect: effect3, evaluateLater: evaluateLater2, cleanup: cleanup2 }) => {\n  let func = evaluateLater2(expression);\n  let innerGet = () => {\n    let result;\n    func((i) => result = i);\n    return result;\n  };\n  let evaluateInnerSet = evaluateLater2(`${expression} = __placeholder`);\n  let innerSet = (val) => evaluateInnerSet(() => {\n  }, { scope: { \"__placeholder\": val } });\n  let initialValue = innerGet();\n  innerSet(initialValue);\n  queueMicrotask(() => {\n    if (!el._x_model)\n      return;\n    el._x_removeModelListeners[\"default\"]();\n    let outerGet = el._x_model.get;\n    let outerSet = el._x_model.set;\n    let releaseEntanglement = entangle(\n      {\n        get() {\n          return outerGet();\n        },\n        set(value) {\n          outerSet(value);\n        }\n      },\n      {\n        get() {\n          return innerGet();\n        },\n        set(value) {\n          innerSet(value);\n        }\n      }\n    );\n    cleanup2(releaseEntanglement);\n  });\n});\n\n// packages/alpinejs/src/directives/x-teleport.js\ndirective(\"teleport\", (el, { modifiers, expression }, { cleanup: cleanup2 }) => {\n  if (el.tagName.toLowerCase() !== \"template\")\n    warn(\"x-teleport can only be used on a <template> tag\", el);\n  let target = getTarget(expression);\n  let clone2 = el.content.cloneNode(true).firstElementChild;\n  el._x_teleport = clone2;\n  clone2._x_teleportBack = el;\n  el.setAttribute(\"data-teleport-template\", true);\n  clone2.setAttribute(\"data-teleport-target\", true);\n  if (el._x_forwardEvents) {\n    el._x_forwardEvents.forEach((eventName) => {\n      clone2.addEventListener(eventName, (e) => {\n        e.stopPropagation();\n        el.dispatchEvent(new e.constructor(e.type, e));\n      });\n    });\n  }\n  addScopeToNode(clone2, {}, el);\n  let placeInDom = (clone3, target2, modifiers2) => {\n    if (modifiers2.includes(\"prepend\")) {\n      target2.parentNode.insertBefore(clone3, target2);\n    } else if (modifiers2.includes(\"append\")) {\n      target2.parentNode.insertBefore(clone3, target2.nextSibling);\n    } else {\n      target2.appendChild(clone3);\n    }\n  };\n  mutateDom(() => {\n    placeInDom(clone2, target, modifiers);\n    skipDuringClone(() => {\n      initTree(clone2);\n      clone2._x_ignore = true;\n    })();\n  });\n  el._x_teleportPutBack = () => {\n    let target2 = getTarget(expression);\n    mutateDom(() => {\n      placeInDom(el._x_teleport, target2, modifiers);\n    });\n  };\n  cleanup2(\n    () => mutateDom(() => {\n      clone2.remove();\n      destroyTree(clone2);\n    })\n  );\n});\nvar teleportContainerDuringClone = document.createElement(\"div\");\nfunction getTarget(expression) {\n  let target = skipDuringClone(() => {\n    return document.querySelector(expression);\n  }, () => {\n    return teleportContainerDuringClone;\n  })();\n  if (!target)\n    warn(`Cannot find x-teleport element for selector: \"${expression}\"`);\n  return target;\n}\n\n// packages/alpinejs/src/directives/x-ignore.js\nvar handler = () => {\n};\nhandler.inline = (el, { modifiers }, { cleanup: cleanup2 }) => {\n  modifiers.includes(\"self\") ? el._x_ignoreSelf = true : el._x_ignore = true;\n  cleanup2(() => {\n    modifiers.includes(\"self\") ? delete el._x_ignoreSelf : delete el._x_ignore;\n  });\n};\ndirective(\"ignore\", handler);\n\n// packages/alpinejs/src/directives/x-effect.js\ndirective(\"effect\", skipDuringClone((el, { expression }, { effect: effect3 }) => {\n  effect3(evaluateLater(el, expression));\n}));\n\n// packages/alpinejs/src/utils/on.js\nfunction on(el, event, modifiers, callback) {\n  let listenerTarget = el;\n  let handler4 = (e) => callback(e);\n  let options = {};\n  let wrapHandler = (callback2, wrapper) => (e) => wrapper(callback2, e);\n  if (modifiers.includes(\"dot\"))\n    event = dotSyntax(event);\n  if (modifiers.includes(\"camel\"))\n    event = camelCase2(event);\n  if (modifiers.includes(\"passive\"))\n    options.passive = true;\n  if (modifiers.includes(\"capture\"))\n    options.capture = true;\n  if (modifiers.includes(\"window\"))\n    listenerTarget = window;\n  if (modifiers.includes(\"document\"))\n    listenerTarget = document;\n  if (modifiers.includes(\"debounce\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"debounce\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler4 = debounce(handler4, wait);\n  }\n  if (modifiers.includes(\"throttle\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"throttle\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler4 = throttle(handler4, wait);\n  }\n  if (modifiers.includes(\"prevent\"))\n    handler4 = wrapHandler(handler4, (next, e) => {\n      e.preventDefault();\n      next(e);\n    });\n  if (modifiers.includes(\"stop\"))\n    handler4 = wrapHandler(handler4, (next, e) => {\n      e.stopPropagation();\n      next(e);\n    });\n  if (modifiers.includes(\"once\")) {\n    handler4 = wrapHandler(handler4, (next, e) => {\n      next(e);\n      listenerTarget.removeEventListener(event, handler4, options);\n    });\n  }\n  if (modifiers.includes(\"away\") || modifiers.includes(\"outside\")) {\n    listenerTarget = document;\n    handler4 = wrapHandler(handler4, (next, e) => {\n      if (el.contains(e.target))\n        return;\n      if (e.target.isConnected === false)\n        return;\n      if (el.offsetWidth < 1 && el.offsetHeight < 1)\n        return;\n      if (el._x_isShown === false)\n        return;\n      next(e);\n    });\n  }\n  if (modifiers.includes(\"self\"))\n    handler4 = wrapHandler(handler4, (next, e) => {\n      e.target === el && next(e);\n    });\n  if (isKeyEvent(event) || isClickEvent(event)) {\n    handler4 = wrapHandler(handler4, (next, e) => {\n      if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n        return;\n      }\n      next(e);\n    });\n  }\n  listenerTarget.addEventListener(event, handler4, options);\n  return () => {\n    listenerTarget.removeEventListener(event, handler4, options);\n  };\n}\nfunction dotSyntax(subject) {\n  return subject.replace(/-/g, \".\");\n}\nfunction camelCase2(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\nfunction isNumeric(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n}\nfunction kebabCase2(subject) {\n  if ([\" \", \"_\"].includes(\n    subject\n  ))\n    return subject;\n  return subject.replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[_\\s]/, \"-\").toLowerCase();\n}\nfunction isKeyEvent(event) {\n  return [\"keydown\", \"keyup\"].includes(event);\n}\nfunction isClickEvent(event) {\n  return [\"contextmenu\", \"click\", \"mouse\"].some((i) => event.includes(i));\n}\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n  let keyModifiers = modifiers.filter((i) => {\n    return ![\"window\", \"document\", \"prevent\", \"stop\", \"once\", \"capture\", \"self\", \"away\", \"outside\", \"passive\"].includes(i);\n  });\n  if (keyModifiers.includes(\"debounce\")) {\n    let debounceIndex = keyModifiers.indexOf(\"debounce\");\n    keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || \"invalid-wait\").split(\"ms\")[0]) ? 2 : 1);\n  }\n  if (keyModifiers.includes(\"throttle\")) {\n    let debounceIndex = keyModifiers.indexOf(\"throttle\");\n    keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || \"invalid-wait\").split(\"ms\")[0]) ? 2 : 1);\n  }\n  if (keyModifiers.length === 0)\n    return false;\n  if (keyModifiers.length === 1 && keyToModifiers(e.key).includes(keyModifiers[0]))\n    return false;\n  const systemKeyModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\", \"cmd\", \"super\"];\n  const selectedSystemKeyModifiers = systemKeyModifiers.filter((modifier) => keyModifiers.includes(modifier));\n  keyModifiers = keyModifiers.filter((i) => !selectedSystemKeyModifiers.includes(i));\n  if (selectedSystemKeyModifiers.length > 0) {\n    const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter((modifier) => {\n      if (modifier === \"cmd\" || modifier === \"super\")\n        modifier = \"meta\";\n      return e[`${modifier}Key`];\n    });\n    if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n      if (isClickEvent(e.type))\n        return false;\n      if (keyToModifiers(e.key).includes(keyModifiers[0]))\n        return false;\n    }\n  }\n  return true;\n}\nfunction keyToModifiers(key) {\n  if (!key)\n    return [];\n  key = kebabCase2(key);\n  let modifierToKeyMap = {\n    \"ctrl\": \"control\",\n    \"slash\": \"/\",\n    \"space\": \" \",\n    \"spacebar\": \" \",\n    \"cmd\": \"meta\",\n    \"esc\": \"escape\",\n    \"up\": \"arrow-up\",\n    \"down\": \"arrow-down\",\n    \"left\": \"arrow-left\",\n    \"right\": \"arrow-right\",\n    \"period\": \".\",\n    \"comma\": \",\",\n    \"equal\": \"=\",\n    \"minus\": \"-\",\n    \"underscore\": \"_\"\n  };\n  modifierToKeyMap[key] = key;\n  return Object.keys(modifierToKeyMap).map((modifier) => {\n    if (modifierToKeyMap[modifier] === key)\n      return modifier;\n  }).filter((modifier) => modifier);\n}\n\n// packages/alpinejs/src/directives/x-model.js\ndirective(\"model\", (el, { modifiers, expression }, { effect: effect3, cleanup: cleanup2 }) => {\n  let scopeTarget = el;\n  if (modifiers.includes(\"parent\")) {\n    scopeTarget = el.parentNode;\n  }\n  let evaluateGet = evaluateLater(scopeTarget, expression);\n  let evaluateSet;\n  if (typeof expression === \"string\") {\n    evaluateSet = evaluateLater(scopeTarget, `${expression} = __placeholder`);\n  } else if (typeof expression === \"function\" && typeof expression() === \"string\") {\n    evaluateSet = evaluateLater(scopeTarget, `${expression()} = __placeholder`);\n  } else {\n    evaluateSet = () => {\n    };\n  }\n  let getValue = () => {\n    let result;\n    evaluateGet((value) => result = value);\n    return isGetterSetter(result) ? result.get() : result;\n  };\n  let setValue = (value) => {\n    let result;\n    evaluateGet((value2) => result = value2);\n    if (isGetterSetter(result)) {\n      result.set(value);\n    } else {\n      evaluateSet(() => {\n      }, {\n        scope: { \"__placeholder\": value }\n      });\n    }\n  };\n  if (typeof expression === \"string\" && el.type === \"radio\") {\n    mutateDom(() => {\n      if (!el.hasAttribute(\"name\"))\n        el.setAttribute(\"name\", expression);\n    });\n  }\n  var event = el.tagName.toLowerCase() === \"select\" || [\"checkbox\", \"radio\"].includes(el.type) || modifiers.includes(\"lazy\") ? \"change\" : \"input\";\n  let removeListener = isCloning ? () => {\n  } : on(el, event, modifiers, (e) => {\n    setValue(getInputValue(el, modifiers, e, getValue()));\n  });\n  if (modifiers.includes(\"fill\")) {\n    if ([void 0, null, \"\"].includes(getValue()) || isCheckbox(el) && Array.isArray(getValue()) || el.tagName.toLowerCase() === \"select\" && el.multiple) {\n      setValue(\n        getInputValue(el, modifiers, { target: el }, getValue())\n      );\n    }\n  }\n  if (!el._x_removeModelListeners)\n    el._x_removeModelListeners = {};\n  el._x_removeModelListeners[\"default\"] = removeListener;\n  cleanup2(() => el._x_removeModelListeners[\"default\"]());\n  if (el.form) {\n    let removeResetListener = on(el.form, \"reset\", [], (e) => {\n      nextTick(() => el._x_model && el._x_model.set(getInputValue(el, modifiers, { target: el }, getValue())));\n    });\n    cleanup2(() => removeResetListener());\n  }\n  el._x_model = {\n    get() {\n      return getValue();\n    },\n    set(value) {\n      setValue(value);\n    }\n  };\n  el._x_forceModelUpdate = (value) => {\n    if (value === void 0 && typeof expression === \"string\" && expression.match(/\\./))\n      value = \"\";\n    window.fromModel = true;\n    mutateDom(() => bind(el, \"value\", value));\n    delete window.fromModel;\n  };\n  effect3(() => {\n    let value = getValue();\n    if (modifiers.includes(\"unintrusive\") && document.activeElement.isSameNode(el))\n      return;\n    el._x_forceModelUpdate(value);\n  });\n});\nfunction getInputValue(el, modifiers, event, currentValue) {\n  return mutateDom(() => {\n    if (event instanceof CustomEvent && event.detail !== void 0)\n      return event.detail !== null && event.detail !== void 0 ? event.detail : event.target.value;\n    else if (isCheckbox(el)) {\n      if (Array.isArray(currentValue)) {\n        let newValue = null;\n        if (modifiers.includes(\"number\")) {\n          newValue = safeParseNumber(event.target.value);\n        } else if (modifiers.includes(\"boolean\")) {\n          newValue = safeParseBoolean(event.target.value);\n        } else {\n          newValue = event.target.value;\n        }\n        return event.target.checked ? currentValue.includes(newValue) ? currentValue : currentValue.concat([newValue]) : currentValue.filter((el2) => !checkedAttrLooseCompare2(el2, newValue));\n      } else {\n        return event.target.checked;\n      }\n    } else if (el.tagName.toLowerCase() === \"select\" && el.multiple) {\n      if (modifiers.includes(\"number\")) {\n        return Array.from(event.target.selectedOptions).map((option) => {\n          let rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        });\n      } else if (modifiers.includes(\"boolean\")) {\n        return Array.from(event.target.selectedOptions).map((option) => {\n          let rawValue = option.value || option.text;\n          return safeParseBoolean(rawValue);\n        });\n      }\n      return Array.from(event.target.selectedOptions).map((option) => {\n        return option.value || option.text;\n      });\n    } else {\n      let newValue;\n      if (isRadio(el)) {\n        if (event.target.checked) {\n          newValue = event.target.value;\n        } else {\n          newValue = currentValue;\n        }\n      } else {\n        newValue = event.target.value;\n      }\n      if (modifiers.includes(\"number\")) {\n        return safeParseNumber(newValue);\n      } else if (modifiers.includes(\"boolean\")) {\n        return safeParseBoolean(newValue);\n      } else if (modifiers.includes(\"trim\")) {\n        return newValue.trim();\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nfunction safeParseNumber(rawValue) {\n  let number = rawValue ? parseFloat(rawValue) : null;\n  return isNumeric2(number) ? number : rawValue;\n}\nfunction checkedAttrLooseCompare2(valueA, valueB) {\n  return valueA == valueB;\n}\nfunction isNumeric2(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n}\nfunction isGetterSetter(value) {\n  return value !== null && typeof value === \"object\" && typeof value.get === \"function\" && typeof value.set === \"function\";\n}\n\n// packages/alpinejs/src/directives/x-cloak.js\ndirective(\"cloak\", (el) => queueMicrotask(() => mutateDom(() => el.removeAttribute(prefix(\"cloak\")))));\n\n// packages/alpinejs/src/directives/x-init.js\naddInitSelector(() => `[${prefix(\"init\")}]`);\ndirective(\"init\", skipDuringClone((el, { expression }, { evaluate: evaluate2 }) => {\n  if (typeof expression === \"string\") {\n    return !!expression.trim() && evaluate2(expression, {}, false);\n  }\n  return evaluate2(expression, {}, false);\n}));\n\n// packages/alpinejs/src/directives/x-text.js\ndirective(\"text\", (el, { expression }, { effect: effect3, evaluateLater: evaluateLater2 }) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2((value) => {\n      mutateDom(() => {\n        el.textContent = value;\n      });\n    });\n  });\n});\n\n// packages/alpinejs/src/directives/x-html.js\ndirective(\"html\", (el, { expression }, { effect: effect3, evaluateLater: evaluateLater2 }) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2((value) => {\n      mutateDom(() => {\n        el.innerHTML = value;\n        el._x_ignoreSelf = true;\n        initTree(el);\n        delete el._x_ignoreSelf;\n      });\n    });\n  });\n});\n\n// packages/alpinejs/src/directives/x-bind.js\nmapAttributes(startingWith(\":\", into(prefix(\"bind:\"))));\nvar handler2 = (el, { value, modifiers, expression, original }, { effect: effect3, cleanup: cleanup2 }) => {\n  if (!value) {\n    let bindingProviders = {};\n    injectBindingProviders(bindingProviders);\n    let getBindings = evaluateLater(el, expression);\n    getBindings((bindings) => {\n      applyBindingsObject(el, bindings, original);\n    }, { scope: bindingProviders });\n    return;\n  }\n  if (value === \"key\")\n    return storeKeyForXFor(el, expression);\n  if (el._x_inlineBindings && el._x_inlineBindings[value] && el._x_inlineBindings[value].extract) {\n    return;\n  }\n  let evaluate2 = evaluateLater(el, expression);\n  effect3(() => evaluate2((result) => {\n    if (result === void 0 && typeof expression === \"string\" && expression.match(/\\./)) {\n      result = \"\";\n    }\n    mutateDom(() => bind(el, value, result, modifiers));\n  }));\n  cleanup2(() => {\n    el._x_undoAddedClasses && el._x_undoAddedClasses();\n    el._x_undoAddedStyles && el._x_undoAddedStyles();\n  });\n};\nhandler2.inline = (el, { value, modifiers, expression }) => {\n  if (!value)\n    return;\n  if (!el._x_inlineBindings)\n    el._x_inlineBindings = {};\n  el._x_inlineBindings[value] = { expression, extract: false };\n};\ndirective(\"bind\", handler2);\nfunction storeKeyForXFor(el, expression) {\n  el._x_keyExpression = expression;\n}\n\n// packages/alpinejs/src/directives/x-data.js\naddRootSelector(() => `[${prefix(\"data\")}]`);\ndirective(\"data\", (el, { expression }, { cleanup: cleanup2 }) => {\n  if (shouldSkipRegisteringDataDuringClone(el))\n    return;\n  expression = expression === \"\" ? \"{}\" : expression;\n  let magicContext = {};\n  injectMagics(magicContext, el);\n  let dataProviderContext = {};\n  injectDataProviders(dataProviderContext, magicContext);\n  let data2 = evaluate(el, expression, { scope: dataProviderContext });\n  if (data2 === void 0 || data2 === true)\n    data2 = {};\n  injectMagics(data2, el);\n  let reactiveData = reactive(data2);\n  initInterceptors(reactiveData);\n  let undo = addScopeToNode(el, reactiveData);\n  reactiveData[\"init\"] && evaluate(el, reactiveData[\"init\"]);\n  cleanup2(() => {\n    reactiveData[\"destroy\"] && evaluate(el, reactiveData[\"destroy\"]);\n    undo();\n  });\n});\ninterceptClone((from, to) => {\n  if (from._x_dataStack) {\n    to._x_dataStack = from._x_dataStack;\n    to.setAttribute(\"data-has-alpine-state\", true);\n  }\n});\nfunction shouldSkipRegisteringDataDuringClone(el) {\n  if (!isCloning)\n    return false;\n  if (isCloningLegacy)\n    return true;\n  return el.hasAttribute(\"data-has-alpine-state\");\n}\n\n// packages/alpinejs/src/directives/x-show.js\ndirective(\"show\", (el, { modifiers, expression }, { effect: effect3 }) => {\n  let evaluate2 = evaluateLater(el, expression);\n  if (!el._x_doHide)\n    el._x_doHide = () => {\n      mutateDom(() => {\n        el.style.setProperty(\"display\", \"none\", modifiers.includes(\"important\") ? \"important\" : void 0);\n      });\n    };\n  if (!el._x_doShow)\n    el._x_doShow = () => {\n      mutateDom(() => {\n        if (el.style.length === 1 && el.style.display === \"none\") {\n          el.removeAttribute(\"style\");\n        } else {\n          el.style.removeProperty(\"display\");\n        }\n      });\n    };\n  let hide = () => {\n    el._x_doHide();\n    el._x_isShown = false;\n  };\n  let show = () => {\n    el._x_doShow();\n    el._x_isShown = true;\n  };\n  let clickAwayCompatibleShow = () => setTimeout(show);\n  let toggle = once(\n    (value) => value ? show() : hide(),\n    (value) => {\n      if (typeof el._x_toggleAndCascadeWithTransitions === \"function\") {\n        el._x_toggleAndCascadeWithTransitions(el, value, show, hide);\n      } else {\n        value ? clickAwayCompatibleShow() : hide();\n      }\n    }\n  );\n  let oldValue;\n  let firstTime = true;\n  effect3(() => evaluate2((value) => {\n    if (!firstTime && value === oldValue)\n      return;\n    if (modifiers.includes(\"immediate\"))\n      value ? clickAwayCompatibleShow() : hide();\n    toggle(value);\n    oldValue = value;\n    firstTime = false;\n  }));\n});\n\n// packages/alpinejs/src/directives/x-for.js\ndirective(\"for\", (el, { expression }, { effect: effect3, cleanup: cleanup2 }) => {\n  let iteratorNames = parseForExpression(expression);\n  let evaluateItems = evaluateLater(el, iteratorNames.items);\n  let evaluateKey = evaluateLater(\n    el,\n    // the x-bind:key expression is stored for our use instead of evaluated.\n    el._x_keyExpression || \"index\"\n  );\n  el._x_prevKeys = [];\n  el._x_lookup = {};\n  effect3(() => loop(el, iteratorNames, evaluateItems, evaluateKey));\n  cleanup2(() => {\n    Object.values(el._x_lookup).forEach((el2) => mutateDom(\n      () => {\n        destroyTree(el2);\n        el2.remove();\n      }\n    ));\n    delete el._x_prevKeys;\n    delete el._x_lookup;\n  });\n});\nfunction loop(el, iteratorNames, evaluateItems, evaluateKey) {\n  let isObject2 = (i) => typeof i === \"object\" && !Array.isArray(i);\n  let templateEl = el;\n  evaluateItems((items) => {\n    if (isNumeric3(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), (i) => i + 1);\n    }\n    if (items === void 0)\n      items = [];\n    let lookup = el._x_lookup;\n    let prevKeys = el._x_prevKeys;\n    let scopes = [];\n    let keys = [];\n    if (isObject2(items)) {\n      items = Object.entries(items).map(([key, value]) => {\n        let scope2 = getIterationScopeVariables(iteratorNames, value, key, items);\n        evaluateKey((value2) => {\n          if (keys.includes(value2))\n            warn(\"Duplicate key on x-for\", el);\n          keys.push(value2);\n        }, { scope: { index: key, ...scope2 } });\n        scopes.push(scope2);\n      });\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        let scope2 = getIterationScopeVariables(iteratorNames, items[i], i, items);\n        evaluateKey((value) => {\n          if (keys.includes(value))\n            warn(\"Duplicate key on x-for\", el);\n          keys.push(value);\n        }, { scope: { index: i, ...scope2 } });\n        scopes.push(scope2);\n      }\n    }\n    let adds = [];\n    let moves = [];\n    let removes = [];\n    let sames = [];\n    for (let i = 0; i < prevKeys.length; i++) {\n      let key = prevKeys[i];\n      if (keys.indexOf(key) === -1)\n        removes.push(key);\n    }\n    prevKeys = prevKeys.filter((key) => !removes.includes(key));\n    let lastKey = \"template\";\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let prevIndex = prevKeys.indexOf(key);\n      if (prevIndex === -1) {\n        prevKeys.splice(i, 0, key);\n        adds.push([lastKey, i]);\n      } else if (prevIndex !== i) {\n        let keyInSpot = prevKeys.splice(i, 1)[0];\n        let keyForSpot = prevKeys.splice(prevIndex - 1, 1)[0];\n        prevKeys.splice(i, 0, keyForSpot);\n        prevKeys.splice(prevIndex, 0, keyInSpot);\n        moves.push([keyInSpot, keyForSpot]);\n      } else {\n        sames.push(key);\n      }\n      lastKey = key;\n    }\n    for (let i = 0; i < removes.length; i++) {\n      let key = removes[i];\n      if (!(key in lookup))\n        continue;\n      mutateDom(() => {\n        destroyTree(lookup[key]);\n        lookup[key].remove();\n      });\n      delete lookup[key];\n    }\n    for (let i = 0; i < moves.length; i++) {\n      let [keyInSpot, keyForSpot] = moves[i];\n      let elInSpot = lookup[keyInSpot];\n      let elForSpot = lookup[keyForSpot];\n      let marker = document.createElement(\"div\");\n      mutateDom(() => {\n        if (!elForSpot)\n          warn(`x-for \":key\" is undefined or invalid`, templateEl, keyForSpot, lookup);\n        elForSpot.after(marker);\n        elInSpot.after(elForSpot);\n        elForSpot._x_currentIfEl && elForSpot.after(elForSpot._x_currentIfEl);\n        marker.before(elInSpot);\n        elInSpot._x_currentIfEl && elInSpot.after(elInSpot._x_currentIfEl);\n        marker.remove();\n      });\n      elForSpot._x_refreshXForScope(scopes[keys.indexOf(keyForSpot)]);\n    }\n    for (let i = 0; i < adds.length; i++) {\n      let [lastKey2, index] = adds[i];\n      let lastEl = lastKey2 === \"template\" ? templateEl : lookup[lastKey2];\n      if (lastEl._x_currentIfEl)\n        lastEl = lastEl._x_currentIfEl;\n      let scope2 = scopes[index];\n      let key = keys[index];\n      let clone2 = document.importNode(templateEl.content, true).firstElementChild;\n      let reactiveScope = reactive(scope2);\n      addScopeToNode(clone2, reactiveScope, templateEl);\n      clone2._x_refreshXForScope = (newScope) => {\n        Object.entries(newScope).forEach(([key2, value]) => {\n          reactiveScope[key2] = value;\n        });\n      };\n      mutateDom(() => {\n        lastEl.after(clone2);\n        skipDuringClone(() => initTree(clone2))();\n      });\n      if (typeof key === \"object\") {\n        warn(\"x-for key cannot be an object, it must be a string or an integer\", templateEl);\n      }\n      lookup[key] = clone2;\n    }\n    for (let i = 0; i < sames.length; i++) {\n      lookup[sames[i]]._x_refreshXForScope(scopes[keys.indexOf(sames[i])]);\n    }\n    templateEl._x_prevKeys = keys;\n  });\n}\nfunction parseForExpression(expression) {\n  let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n  let stripParensRE = /^\\s*\\(|\\)\\s*$/g;\n  let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n  let inMatch = expression.match(forAliasRE);\n  if (!inMatch)\n    return;\n  let res = {};\n  res.items = inMatch[2].trim();\n  let item = inMatch[1].replace(stripParensRE, \"\").trim();\n  let iteratorMatch = item.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.item = item.replace(forIteratorRE, \"\").trim();\n    res.index = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.collection = iteratorMatch[2].trim();\n    }\n  } else {\n    res.item = item;\n  }\n  return res;\n}\nfunction getIterationScopeVariables(iteratorNames, item, index, items) {\n  let scopeVariables = {};\n  if (/^\\[.*\\]$/.test(iteratorNames.item) && Array.isArray(item)) {\n    let names = iteratorNames.item.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\").map((i) => i.trim());\n    names.forEach((name, i) => {\n      scopeVariables[name] = item[i];\n    });\n  } else if (/^\\{.*\\}$/.test(iteratorNames.item) && !Array.isArray(item) && typeof item === \"object\") {\n    let names = iteratorNames.item.replace(\"{\", \"\").replace(\"}\", \"\").split(\",\").map((i) => i.trim());\n    names.forEach((name) => {\n      scopeVariables[name] = item[name];\n    });\n  } else {\n    scopeVariables[iteratorNames.item] = item;\n  }\n  if (iteratorNames.index)\n    scopeVariables[iteratorNames.index] = index;\n  if (iteratorNames.collection)\n    scopeVariables[iteratorNames.collection] = items;\n  return scopeVariables;\n}\nfunction isNumeric3(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n}\n\n// packages/alpinejs/src/directives/x-ref.js\nfunction handler3() {\n}\nhandler3.inline = (el, { expression }, { cleanup: cleanup2 }) => {\n  let root = closestRoot(el);\n  if (!root._x_refs)\n    root._x_refs = {};\n  root._x_refs[expression] = el;\n  cleanup2(() => delete root._x_refs[expression]);\n};\ndirective(\"ref\", handler3);\n\n// packages/alpinejs/src/directives/x-if.js\ndirective(\"if\", (el, { expression }, { effect: effect3, cleanup: cleanup2 }) => {\n  if (el.tagName.toLowerCase() !== \"template\")\n    warn(\"x-if can only be used on a <template> tag\", el);\n  let evaluate2 = evaluateLater(el, expression);\n  let show = () => {\n    if (el._x_currentIfEl)\n      return el._x_currentIfEl;\n    let clone2 = el.content.cloneNode(true).firstElementChild;\n    addScopeToNode(clone2, {}, el);\n    mutateDom(() => {\n      el.after(clone2);\n      skipDuringClone(() => initTree(clone2))();\n    });\n    el._x_currentIfEl = clone2;\n    el._x_undoIf = () => {\n      mutateDom(() => {\n        destroyTree(clone2);\n        clone2.remove();\n      });\n      delete el._x_currentIfEl;\n    };\n    return clone2;\n  };\n  let hide = () => {\n    if (!el._x_undoIf)\n      return;\n    el._x_undoIf();\n    delete el._x_undoIf;\n  };\n  effect3(() => evaluate2((value) => {\n    value ? show() : hide();\n  }));\n  cleanup2(() => el._x_undoIf && el._x_undoIf());\n});\n\n// packages/alpinejs/src/directives/x-id.js\ndirective(\"id\", (el, { expression }, { evaluate: evaluate2 }) => {\n  let names = evaluate2(expression);\n  names.forEach((name) => setIdRoot(el, name));\n});\ninterceptClone((from, to) => {\n  if (from._x_ids) {\n    to._x_ids = from._x_ids;\n  }\n});\n\n// packages/alpinejs/src/directives/x-on.js\nmapAttributes(startingWith(\"@\", into(prefix(\"on:\"))));\ndirective(\"on\", skipDuringClone((el, { value, modifiers, expression }, { cleanup: cleanup2 }) => {\n  let evaluate2 = expression ? evaluateLater(el, expression) : () => {\n  };\n  if (el.tagName.toLowerCase() === \"template\") {\n    if (!el._x_forwardEvents)\n      el._x_forwardEvents = [];\n    if (!el._x_forwardEvents.includes(value))\n      el._x_forwardEvents.push(value);\n  }\n  let removeListener = on(el, value, modifiers, (e) => {\n    evaluate2(() => {\n    }, { scope: { \"$event\": e }, params: [e] });\n  });\n  cleanup2(() => removeListener());\n}));\n\n// packages/alpinejs/src/directives/index.js\nwarnMissingPluginDirective(\"Collapse\", \"collapse\", \"collapse\");\nwarnMissingPluginDirective(\"Intersect\", \"intersect\", \"intersect\");\nwarnMissingPluginDirective(\"Focus\", \"trap\", \"focus\");\nwarnMissingPluginDirective(\"Mask\", \"mask\", \"mask\");\nfunction warnMissingPluginDirective(name, directiveName, slug) {\n  directive(directiveName, (el) => warn(`You can't use [x-${directiveName}] without first installing the \"${name}\" plugin here: https://alpinejs.dev/plugins/${slug}`, el));\n}\n\n// packages/alpinejs/src/index.js\nalpine_default.setEvaluator(normalEvaluator);\nalpine_default.setReactivityEngine({ reactive: reactive2, effect: effect2, release: stop, raw: toRaw });\nvar src_default = alpine_default;\n\n// packages/alpinejs/builds/module.js\nvar module_default = src_default;\n\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/alpinejs/dist/module.esm.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/***/ (function(module) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/getUrl.js":
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/sourceMaps.js":
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/css-loader/dist/runtime/sourceMaps.js?");

/***/ }),

/***/ "../node_modules/react-refresh/cjs/react-refresh-runtime.development.js":
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("/**\n * @license React\n * react-refresh-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// ATTENTION\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\n\nvar PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.\n// It's OK to reference families, but use WeakMap/Set for types.\n\nvar allFamiliesByID = new Map();\nvar allFamiliesByType = new PossiblyWeakMap();\nvar allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families\n// that have actually been edited here. This keeps checks fast.\n// $FlowIssue\n\nvar updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.\n// It is an array of [Family, NextType] tuples.\n\nvar pendingUpdates = []; // This is injected by the renderer via DevTools global hook.\n\nvar helpersByRendererID = new Map();\nvar helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.\n\nvar mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.\n\nvar failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.\n// It needs to be weak because we do this even for roots that failed to mount.\n// If there is no WeakMap, we won't attempt to do retrying.\n// $FlowIssue\n\nvar rootElements = // $FlowIssue\ntypeof WeakMap === 'function' ? new WeakMap() : null;\nvar isPerformingRefresh = false;\n\nfunction computeFullKey(signature) {\n  if (signature.fullKey !== null) {\n    return signature.fullKey;\n  }\n\n  var fullKey = signature.ownKey;\n  var hooks;\n\n  try {\n    hooks = signature.getCustomHooks();\n  } catch (err) {\n    // This can happen in an edge case, e.g. if expression like Foo.useSomething\n    // depends on Foo which is lazily initialized during rendering.\n    // In that case just assume we'll have to remount.\n    signature.forceReset = true;\n    signature.fullKey = fullKey;\n    return fullKey;\n  }\n\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n\n    if (typeof hook !== 'function') {\n      // Something's wrong. Assume we need to remount.\n      signature.forceReset = true;\n      signature.fullKey = fullKey;\n      return fullKey;\n    }\n\n    var nestedHookSignature = allSignaturesByType.get(hook);\n\n    if (nestedHookSignature === undefined) {\n      // No signature means Hook wasn't in the source code, e.g. in a library.\n      // We'll skip it because we can assume it won't change during this session.\n      continue;\n    }\n\n    var nestedHookKey = computeFullKey(nestedHookSignature);\n\n    if (nestedHookSignature.forceReset) {\n      signature.forceReset = true;\n    }\n\n    fullKey += '\\n---\\n' + nestedHookKey;\n  }\n\n  signature.fullKey = fullKey;\n  return fullKey;\n}\n\nfunction haveEqualSignatures(prevType, nextType) {\n  var prevSignature = allSignaturesByType.get(prevType);\n  var nextSignature = allSignaturesByType.get(nextType);\n\n  if (prevSignature === undefined && nextSignature === undefined) {\n    return true;\n  }\n\n  if (prevSignature === undefined || nextSignature === undefined) {\n    return false;\n  }\n\n  if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {\n    return false;\n  }\n\n  if (nextSignature.forceReset) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isReactClass(type) {\n  return type.prototype && type.prototype.isReactComponent;\n}\n\nfunction canPreserveStateBetween(prevType, nextType) {\n  if (isReactClass(prevType) || isReactClass(nextType)) {\n    return false;\n  }\n\n  if (haveEqualSignatures(prevType, nextType)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolveFamily(type) {\n  // Only check updated types to keep lookups fast.\n  return updatedFamiliesByType.get(type);\n} // If we didn't care about IE11, we could use new Map/Set(iterable).\n\n\nfunction cloneMap(map) {\n  var clone = new Map();\n  map.forEach(function (value, key) {\n    clone.set(key, value);\n  });\n  return clone;\n}\n\nfunction cloneSet(set) {\n  var clone = new Set();\n  set.forEach(function (value) {\n    clone.add(value);\n  });\n  return clone;\n} // This is a safety mechanism to protect against rogue getters and Proxies.\n\n\nfunction getProperty(object, property) {\n  try {\n    return object[property];\n  } catch (err) {\n    // Intentionally ignore.\n    return undefined;\n  }\n}\n\nfunction performReactRefresh() {\n\n  if (pendingUpdates.length === 0) {\n    return null;\n  }\n\n  if (isPerformingRefresh) {\n    return null;\n  }\n\n  isPerformingRefresh = true;\n\n  try {\n    var staleFamilies = new Set();\n    var updatedFamilies = new Set();\n    var updates = pendingUpdates;\n    pendingUpdates = [];\n    updates.forEach(function (_ref) {\n      var family = _ref[0],\n          nextType = _ref[1];\n      // Now that we got a real edit, we can create associations\n      // that will be read by the React reconciler.\n      var prevType = family.current;\n      updatedFamiliesByType.set(prevType, family);\n      updatedFamiliesByType.set(nextType, family);\n      family.current = nextType; // Determine whether this should be a re-render or a re-mount.\n\n      if (canPreserveStateBetween(prevType, nextType)) {\n        updatedFamilies.add(family);\n      } else {\n        staleFamilies.add(family);\n      }\n    }); // TODO: rename these fields to something more meaningful.\n\n    var update = {\n      updatedFamilies: updatedFamilies,\n      // Families that will re-render preserving state\n      staleFamilies: staleFamilies // Families that will be remounted\n\n    };\n    helpersByRendererID.forEach(function (helpers) {\n      // Even if there are no roots, set the handler on first update.\n      // This ensures that if *new* roots are mounted, they'll use the resolve handler.\n      helpers.setRefreshHandler(resolveFamily);\n    });\n    var didError = false;\n    var firstError = null; // We snapshot maps and sets that are mutated during commits.\n    // If we don't do this, there is a risk they will be mutated while\n    // we iterate over them. For example, trying to recover a failed root\n    // may cause another root to be added to the failed list -- an infinite loop.\n\n    var failedRootsSnapshot = cloneSet(failedRoots);\n    var mountedRootsSnapshot = cloneSet(mountedRoots);\n    var helpersByRootSnapshot = cloneMap(helpersByRoot);\n    failedRootsSnapshot.forEach(function (root) {\n      var helpers = helpersByRootSnapshot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      if (!failedRoots.has(root)) {// No longer failed.\n      }\n\n      if (rootElements === null) {\n        return;\n      }\n\n      if (!rootElements.has(root)) {\n        return;\n      }\n\n      var element = rootElements.get(root);\n\n      try {\n        helpers.scheduleRoot(root, element);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n    mountedRootsSnapshot.forEach(function (root) {\n      var helpers = helpersByRootSnapshot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      if (!mountedRoots.has(root)) {// No longer mounted.\n      }\n\n      try {\n        helpers.scheduleRefresh(root, update);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n\n    if (didError) {\n      throw firstError;\n    }\n\n    return update;\n  } finally {\n    isPerformingRefresh = false;\n  }\n}\nfunction register(type, id) {\n  {\n    if (type === null) {\n      return;\n    }\n\n    if (typeof type !== 'function' && typeof type !== 'object') {\n      return;\n    } // This can happen in an edge case, e.g. if we register\n    // return value of a HOC but it returns a cached component.\n    // Ignore anything but the first registration for each type.\n\n\n    if (allFamiliesByType.has(type)) {\n      return;\n    } // Create family or remember to update it.\n    // None of this bookkeeping affects reconciliation\n    // until the first performReactRefresh() call above.\n\n\n    var family = allFamiliesByID.get(id);\n\n    if (family === undefined) {\n      family = {\n        current: type\n      };\n      allFamiliesByID.set(id, family);\n    } else {\n      pendingUpdates.push([family, type]);\n    }\n\n    allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.\n\n    if (typeof type === 'object' && type !== null) {\n      switch (getProperty(type, '$$typeof')) {\n        case REACT_FORWARD_REF_TYPE:\n          register(type.render, id + '$render');\n          break;\n\n        case REACT_MEMO_TYPE:\n          register(type.type, id + '$type');\n          break;\n      }\n    }\n  }\n}\nfunction setSignature(type, key) {\n  var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;\n\n  {\n    if (!allSignaturesByType.has(type)) {\n      allSignaturesByType.set(type, {\n        forceReset: forceReset,\n        ownKey: key,\n        fullKey: null,\n        getCustomHooks: getCustomHooks || function () {\n          return [];\n        }\n      });\n    } // Visit inner types because we might not have signed them.\n\n\n    if (typeof type === 'object' && type !== null) {\n      switch (getProperty(type, '$$typeof')) {\n        case REACT_FORWARD_REF_TYPE:\n          setSignature(type.render, key, forceReset, getCustomHooks);\n          break;\n\n        case REACT_MEMO_TYPE:\n          setSignature(type.type, key, forceReset, getCustomHooks);\n          break;\n      }\n    }\n  }\n} // This is lazily called during first render for a type.\n// It captures Hook list at that time so inline requires don't break comparisons.\n\nfunction collectCustomHooksForSignature(type) {\n  {\n    var signature = allSignaturesByType.get(type);\n\n    if (signature !== undefined) {\n      computeFullKey(signature);\n    }\n  }\n}\nfunction getFamilyByID(id) {\n  {\n    return allFamiliesByID.get(id);\n  }\n}\nfunction getFamilyByType(type) {\n  {\n    return allFamiliesByType.get(type);\n  }\n}\nfunction findAffectedHostInstances(families) {\n  {\n    var affectedInstances = new Set();\n    mountedRoots.forEach(function (root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);\n      instancesForRoot.forEach(function (inst) {\n        affectedInstances.add(inst);\n      });\n    });\n    return affectedInstances;\n  }\n}\nfunction injectIntoGlobalHook(globalObject) {\n  {\n    // For React Native, the global hook will be set up by require('react-devtools-core').\n    // That code will run before us. So we need to monkeypatch functions on existing hook.\n    // For React Web, the global hook will be set up by the extension.\n    // This will also run before us.\n    var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n    if (hook === undefined) {\n      // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.\n      // Note that in this case it's important that renderer code runs *after* this method call.\n      // Otherwise, the renderer will think that there is no global hook, and won't do the injection.\n      var nextID = 0;\n      globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {\n        renderers: new Map(),\n        supportsFiber: true,\n        inject: function (injected) {\n          return nextID++;\n        },\n        onScheduleFiberRoot: function (id, root, children) {},\n        onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},\n        onCommitFiberUnmount: function () {}\n      };\n    }\n\n    if (hook.isDisabled) {\n      // This isn't a real property on the hook, but it can be set to opt out\n      // of DevTools integration and associated warnings and logs.\n      // Using console['warn'] to evade Babel and ESLint\n      console['warn']('Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). ' + 'Fast Refresh is not compatible with this shim and will be disabled.');\n      return;\n    } // Here, we just want to get a reference to scheduleRefresh.\n\n\n    var oldInject = hook.inject;\n\n    hook.inject = function (injected) {\n      var id = oldInject.apply(this, arguments);\n\n      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n        // This version supports React Refresh.\n        helpersByRendererID.set(id, injected);\n      }\n\n      return id;\n    }; // Do the same for any already injected roots.\n    // This is useful if ReactDOM has already been initialized.\n    // https://github.com/facebook/react/issues/17626\n\n\n    hook.renderers.forEach(function (injected, id) {\n      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n        // This version supports React Refresh.\n        helpersByRendererID.set(id, injected);\n      }\n    }); // We also want to track currently mounted roots.\n\n    var oldOnCommitFiberRoot = hook.onCommitFiberRoot;\n\n    var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function () {};\n\n    hook.onScheduleFiberRoot = function (id, root, children) {\n      if (!isPerformingRefresh) {\n        // If it was intentionally scheduled, don't attempt to restore.\n        // This includes intentionally scheduled unmounts.\n        failedRoots.delete(root);\n\n        if (rootElements !== null) {\n          rootElements.set(root, children);\n        }\n      }\n\n      return oldOnScheduleFiberRoot.apply(this, arguments);\n    };\n\n    hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {\n      var helpers = helpersByRendererID.get(id);\n\n      if (helpers !== undefined) {\n        helpersByRoot.set(root, helpers);\n        var current = root.current;\n        var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.\n        // This logic is copy-pasted from similar logic in the DevTools backend.\n        // If this breaks with some refactoring, you'll want to update DevTools too.\n\n        if (alternate !== null) {\n          var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null && mountedRoots.has(root);\n          var isMounted = current.memoizedState != null && current.memoizedState.element != null;\n\n          if (!wasMounted && isMounted) {\n            // Mount a new root.\n            mountedRoots.add(root);\n            failedRoots.delete(root);\n          } else if (wasMounted && isMounted) ; else if (wasMounted && !isMounted) {\n            // Unmount an existing root.\n            mountedRoots.delete(root);\n\n            if (didError) {\n              // We'll remount it on future edits.\n              failedRoots.add(root);\n            } else {\n              helpersByRoot.delete(root);\n            }\n          } else if (!wasMounted && !isMounted) {\n            if (didError) {\n              // We'll remount it on future edits.\n              failedRoots.add(root);\n            }\n          }\n        } else {\n          // Mount a new root.\n          mountedRoots.add(root);\n        }\n      } // Always call the decorated DevTools hook.\n\n\n      return oldOnCommitFiberRoot.apply(this, arguments);\n    };\n  }\n}\nfunction hasUnrecoverableErrors() {\n  // TODO: delete this after removing dependency in RN.\n  return false;\n} // Exposed for testing.\n\nfunction _getMountedRootCount() {\n  {\n    return mountedRoots.size;\n  }\n} // This is a wrapper over more primitive functions for setting signature.\n// Signatures let us decide whether the Hook order has changed on refresh.\n//\n// This function is intended to be used as a transform target, e.g.:\n// var _s = createSignatureFunctionForTransform()\n//\n// function Hello() {\n//   const [foo, setFoo] = useState(0);\n//   const value = useCustomHook();\n//   _s(); /* Call without arguments triggers collecting the custom Hook list.\n//          * This doesn't happen during the module evaluation because we\n//          * don't want to change the module order with inline requires.\n//          * Next calls are noops. */\n//   return <h1>Hi</h1>;\n// }\n//\n// /* Call with arguments attaches the signature to the type: */\n// _s(\n//   Hello,\n//   'useState{[foo, setFoo]}(0)',\n//   () => [useCustomHook], /* Lazy to avoid triggering inline requires */\n// );\n\nfunction createSignatureFunctionForTransform() {\n  {\n    var savedType;\n    var hasCustomHooks;\n    var didCollectHooks = false;\n    return function (type, key, forceReset, getCustomHooks) {\n      if (typeof key === 'string') {\n        // We're in the initial phase that associates signatures\n        // with the functions. Note this may be called multiple times\n        // in HOC chains like _s(hoc1(_s(hoc2(_s(actualFunction))))).\n        if (!savedType) {\n          // We're in the innermost call, so this is the actual type.\n          savedType = type;\n          hasCustomHooks = typeof getCustomHooks === 'function';\n        } // Set the signature for all types (even wrappers!) in case\n        // they have no signatures of their own. This is to prevent\n        // problems like https://github.com/facebook/react/issues/20417.\n\n\n        if (type != null && (typeof type === 'function' || typeof type === 'object')) {\n          setSignature(type, key, forceReset, getCustomHooks);\n        }\n\n        return type;\n      } else {\n        // We're in the _s() call without arguments, which means\n        // this is the time to collect custom Hook signatures.\n        // Only do this once. This path is hot and runs *inside* every render!\n        if (!didCollectHooks && hasCustomHooks) {\n          didCollectHooks = true;\n          collectCustomHooksForSignature(savedType);\n        }\n      }\n    };\n  }\n}\nfunction isLikelyComponentType(type) {\n  {\n    switch (typeof type) {\n      case 'function':\n        {\n          // First, deal with classes.\n          if (type.prototype != null) {\n            if (type.prototype.isReactComponent) {\n              // React class.\n              return true;\n            }\n\n            var ownNames = Object.getOwnPropertyNames(type.prototype);\n\n            if (ownNames.length > 1 || ownNames[0] !== 'constructor') {\n              // This looks like a class.\n              return false;\n            } // eslint-disable-next-line no-proto\n\n\n            if (type.prototype.__proto__ !== Object.prototype) {\n              // It has a superclass.\n              return false;\n            } // Pass through.\n            // This looks like a regular function with empty prototype.\n\n          } // For plain functions and arrows, use name as a heuristic.\n\n\n          var name = type.name || type.displayName;\n          return typeof name === 'string' && /^[A-Z]/.test(name);\n        }\n\n      case 'object':\n        {\n          if (type != null) {\n            switch (getProperty(type, '$$typeof')) {\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_MEMO_TYPE:\n                // Definitely React components.\n                return true;\n\n              default:\n                return false;\n            }\n          }\n\n          return false;\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n  }\n}\n\nexports._getMountedRootCount = _getMountedRootCount;\nexports.collectCustomHooksForSignature = collectCustomHooksForSignature;\nexports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;\nexports.findAffectedHostInstances = findAffectedHostInstances;\nexports.getFamilyByID = getFamilyByID;\nexports.getFamilyByType = getFamilyByType;\nexports.hasUnrecoverableErrors = hasUnrecoverableErrors;\nexports.injectIntoGlobalHook = injectIntoGlobalHook;\nexports.isLikelyComponentType = isLikelyComponentType;\nexports.performReactRefresh = performReactRefresh;\nexports.register = register;\nexports.setSignature = setSignature;\n  })();\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/react-refresh/cjs/react-refresh-runtime.development.js?");

/***/ }),

/***/ "../node_modules/react-refresh/runtime.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(\"../node_modules/react-refresh/cjs/react-refresh-runtime.development.js\");\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/react-refresh/runtime.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/***/ (function(module) {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/insertBySelector.js":
/***/ (function(module) {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/insertStyleElement.js":
/***/ (function(module) {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/styleDomAPI.js":
/***/ (function(module) {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/styleTagTransform.js":
/***/ (function(module) {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\"  fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"rgba%281,105,125%29\" >  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 12h14\" /></svg>":
/***/ (function(module) {

"use strict";
eval("module.exports = \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba%281,105,125%29\\\" >  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M5 12h14\\\" /></svg>\";\n\n//# sourceURL=webpack://@roots/bud/sage/data:image/svg+xml;utf8,%3Csvg_xmlns=%22http://www.w3.org/2000/svg%22__fill=%22none%22_viewBox=%220_0_24_24%22_stroke-width=%221.5%22_stroke=%22rgba%25281,105,125%2529%22_%3E__%3Cpath_stroke-linecap=%22round%22_stroke-linejoin=%22round%22_d=%22M5_12h14%22_/%3E%3C/svg%3E?");

/***/ }),

/***/ "data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\"  fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"rgba%281,105,125%29\" ><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" /></svg>":
/***/ (function(module) {

"use strict";
eval("module.exports = \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"  fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke-width=\\\"1.5\\\" stroke=\\\"rgba%281,105,125%29\\\" ><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M12 4.5v15m7.5-7.5h-15\\\" /></svg>\";\n\n//# sourceURL=webpack://@roots/bud/sage/data:image/svg+xml;utf8,%3Csvg_xmlns=%22http://www.w3.org/2000/svg%22__fill=%22none%22_viewBox=%220_0_24_24%22_stroke-width=%221.5%22_stroke=%22rgba%25281,105,125%2529%22_%3E%3Cpath_stroke-linecap=%22round%22_stroke-linejoin=%22round%22_d=%22M12_4.5v15m7.5-7.5h-15%22_/%3E%3C/svg%3E?");

/***/ }),

/***/ "data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.58 13.85\"><ellipse fill=\"rgb%28255,206,155%29\" cx=\"7.29\" cy=\"6.48\"  rx=\"7.29\" ry=\"6.48\"/><path fill=\"rgb%28255,206,155%29\" d=\"M12.8 10.69s-.63 1.64.2 2.25-1.09 1.18-1.83.77c-.57-.31-2.1-.97-2.1-.97l3.73-2.05Z\"/></svg>":
/***/ (function(module) {

"use strict";
eval("module.exports = \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 14.58 13.85\\\"><ellipse fill=\\\"rgb%28255,206,155%29\\\" cx=\\\"7.29\\\" cy=\\\"6.48\\\"  rx=\\\"7.29\\\" ry=\\\"6.48\\\"/><path fill=\\\"rgb%28255,206,155%29\\\" d=\\\"M12.8 10.69s-.63 1.64.2 2.25-1.09 1.18-1.83.77c-.57-.31-2.1-.97-2.1-.97l3.73-2.05Z\\\"/></svg>\";\n\n//# sourceURL=webpack://@roots/bud/sage/data:image/svg+xml;utf8,%3Csvg_xmlns=%22http://www.w3.org/2000/svg%22_viewBox=%220_0_14.58_13.85%22%3E%3Cellipse_fill=%22rgb%2528255,206,155%2529%22_cx=%227.29%22_cy=%226.48%22__rx=%227.29%22_ry=%226.48%22/%3E%3Cpath_fill=%22rgb%2528255,206,155%2529%22_d=%22M12.8_10.69s-.63_1.64.2_2.25-1.09_1.18-1.83.77c-.57-.31-2.1-.97-2.1-.97l3.73-2.05Z%22/%3E%3C/svg%3E?");

/***/ }),

/***/ "./fonts/Raleway-Bold.woff2":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("module.exports = __webpack_require__.p + \"fonts/Raleway-Bold.woff2\";\n\n//# sourceURL=webpack://@roots/bud/sage/./fonts/Raleway-Bold.woff2?");

/***/ }),

/***/ "./fonts/Raleway-ExtraBold.woff2":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("module.exports = __webpack_require__.p + \"fonts/Raleway-ExtraBold.woff2\";\n\n//# sourceURL=webpack://@roots/bud/sage/./fonts/Raleway-ExtraBold.woff2?");

/***/ }),

/***/ "./fonts/Raleway-Medium.woff2":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("module.exports = __webpack_require__.p + \"fonts/Raleway-Medium.woff2\";\n\n//# sourceURL=webpack://@roots/bud/sage/./fonts/Raleway-Medium.woff2?");

/***/ }),

/***/ "./fonts/Raleway-SemiBold.woff2":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("module.exports = __webpack_require__.p + \"fonts/Raleway-SemiBold.woff2\";\n\n//# sourceURL=webpack://@roots/bud/sage/./fonts/Raleway-SemiBold.woff2?");

/***/ }),

/***/ "../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js":
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("/* global __react_refresh_library__ */\n\nconst safeThis = __webpack_require__(\"../node_modules/core-js-pure/features/global-this.js\");\nconst RefreshRuntime = __webpack_require__(\"../node_modules/react-refresh/runtime.js\");\n\nif (true) {\n  if (typeof safeThis !== 'undefined') {\n    var $RefreshInjected$ = '__reactRefreshInjected';\n    // Namespace the injected flag (if necessary) for monorepo compatibility\n    if (true) {\n      $RefreshInjected$ += '_' + \"_roots_bud_sage\";\n    }\n\n    // Only inject the runtime if it hasn't been injected\n    if (!safeThis[$RefreshInjected$]) {\n      // Inject refresh runtime into global scope\n      RefreshRuntime.injectIntoGlobalHook(safeThis);\n\n      // Mark the runtime as injected to prevent double-injection\n      safeThis[$RefreshInjected$] = true;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/actual/global-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar parent = __webpack_require__(\"../node_modules/core-js-pure/stable/global-this.js\");\n\nmodule.exports = parent;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/actual/global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/es/global-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n__webpack_require__(\"../node_modules/core-js-pure/modules/es.global-this.js\");\n\nmodule.exports = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/es/global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/features/global-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = __webpack_require__(\"../node_modules/core-js-pure/full/global-this.js\");\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/features/global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/full/global-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n// TODO: remove from `core-js@4`\n__webpack_require__(\"../node_modules/core-js-pure/modules/esnext.global-this.js\");\n\nvar parent = __webpack_require__(\"../node_modules/core-js-pure/actual/global-this.js\");\n\nmodule.exports = parent;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/full/global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/a-callable.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\nvar tryToString = __webpack_require__(\"../node_modules/core-js-pure/internals/try-to-string.js\");\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/a-callable.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/an-object.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar isObject = __webpack_require__(\"../node_modules/core-js-pure/internals/is-object.js\");\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/an-object.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/classof-raw.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/classof-raw.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/create-non-enumerable-property.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar DESCRIPTORS = __webpack_require__(\"../node_modules/core-js-pure/internals/descriptors.js\");\nvar definePropertyModule = __webpack_require__(\"../node_modules/core-js-pure/internals/object-define-property.js\");\nvar createPropertyDescriptor = __webpack_require__(\"../node_modules/core-js-pure/internals/create-property-descriptor.js\");\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/create-non-enumerable-property.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/create-property-descriptor.js":
/***/ (function(module) {

"use strict";
eval("\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/create-property-descriptor.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/define-global-property.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    globalThis[key] = value;\n  } return value;\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/define-global-property.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/descriptors.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/descriptors.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/document-create-element.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar isObject = __webpack_require__(\"../node_modules/core-js-pure/internals/is-object.js\");\n\nvar document = globalThis.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/document-create-element.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/environment-user-agent.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\n\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\n\nmodule.exports = userAgent ? String(userAgent) : '';\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/environment-user-agent.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/environment-v8-version.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar userAgent = __webpack_require__(\"../node_modules/core-js-pure/internals/environment-user-agent.js\");\n\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/environment-v8-version.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/export.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar apply = __webpack_require__(\"../node_modules/core-js-pure/internals/function-apply.js\");\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this-clause.js\");\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\nvar getOwnPropertyDescriptor = (__webpack_require__(\"../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js\").f);\nvar isForced = __webpack_require__(\"../node_modules/core-js-pure/internals/is-forced.js\");\nvar path = __webpack_require__(\"../node_modules/core-js-pure/internals/path.js\");\nvar bind = __webpack_require__(\"../node_modules/core-js-pure/internals/function-bind-context.js\");\nvar createNonEnumerableProperty = __webpack_require__(\"../node_modules/core-js-pure/internals/create-non-enumerable-property.js\");\nvar hasOwn = __webpack_require__(\"../node_modules/core-js-pure/internals/has-own-property.js\");\n// add debugging info\n__webpack_require__(\"../node_modules/core-js-pure/internals/shared-store.js\");\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? globalThis : STATIC ? globalThis[TARGET] : globalThis[TARGET] && globalThis[TARGET].prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (!FORCED && !PROTO && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, globalThis);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/export.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/fails.js":
/***/ (function(module) {

"use strict";
eval("\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/fails.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-apply.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar NATIVE_BIND = __webpack_require__(\"../node_modules/core-js-pure/internals/function-bind-native.js\");\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-apply.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-bind-context.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this-clause.js\");\nvar aCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/a-callable.js\");\nvar NATIVE_BIND = __webpack_require__(\"../node_modules/core-js-pure/internals/function-bind-native.js\");\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-bind-context.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-bind-native.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-bind-native.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-call.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar NATIVE_BIND = __webpack_require__(\"../node_modules/core-js-pure/internals/function-bind-native.js\");\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-call.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-uncurry-this-clause.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar classofRaw = __webpack_require__(\"../node_modules/core-js-pure/internals/classof-raw.js\");\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-uncurry-this-clause.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/function-uncurry-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar NATIVE_BIND = __webpack_require__(\"../node_modules/core-js-pure/internals/function-bind-native.js\");\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/function-uncurry-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/get-built-in.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar path = __webpack_require__(\"../node_modules/core-js-pure/internals/path.js\");\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(globalThis[namespace])\n    : path[namespace] && path[namespace][method] || globalThis[namespace] && globalThis[namespace][method];\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/get-built-in.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/get-method.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar aCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/a-callable.js\");\nvar isNullOrUndefined = __webpack_require__(\"../node_modules/core-js-pure/internals/is-null-or-undefined.js\");\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/get-method.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/global-this.js":
/***/ (function(module) {

"use strict";
eval("\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/has-own-property.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\nvar toObject = __webpack_require__(\"../node_modules/core-js-pure/internals/to-object.js\");\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/has-own-property.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/ie8-dom-define.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar DESCRIPTORS = __webpack_require__(\"../node_modules/core-js-pure/internals/descriptors.js\");\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\nvar createElement = __webpack_require__(\"../node_modules/core-js-pure/internals/document-create-element.js\");\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/ie8-dom-define.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/indexed-object.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\nvar classof = __webpack_require__(\"../node_modules/core-js-pure/internals/classof-raw.js\");\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/indexed-object.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-callable.js":
/***/ (function(module) {

"use strict";
eval("\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-callable.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-forced.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-forced.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-null-or-undefined.js":
/***/ (function(module) {

"use strict";
eval("\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-null-or-undefined.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-object.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-object.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-pure.js":
/***/ (function(module) {

"use strict";
eval("\nmodule.exports = true;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-pure.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/is-symbol.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar getBuiltIn = __webpack_require__(\"../node_modules/core-js-pure/internals/get-built-in.js\");\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\nvar isPrototypeOf = __webpack_require__(\"../node_modules/core-js-pure/internals/object-is-prototype-of.js\");\nvar USE_SYMBOL_AS_UID = __webpack_require__(\"../node_modules/core-js-pure/internals/use-symbol-as-uid.js\");\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/is-symbol.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/object-define-property.js":
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar DESCRIPTORS = __webpack_require__(\"../node_modules/core-js-pure/internals/descriptors.js\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"../node_modules/core-js-pure/internals/ie8-dom-define.js\");\nvar V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(\"../node_modules/core-js-pure/internals/v8-prototype-define-bug.js\");\nvar anObject = __webpack_require__(\"../node_modules/core-js-pure/internals/an-object.js\");\nvar toPropertyKey = __webpack_require__(\"../node_modules/core-js-pure/internals/to-property-key.js\");\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/object-define-property.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js":
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar DESCRIPTORS = __webpack_require__(\"../node_modules/core-js-pure/internals/descriptors.js\");\nvar call = __webpack_require__(\"../node_modules/core-js-pure/internals/function-call.js\");\nvar propertyIsEnumerableModule = __webpack_require__(\"../node_modules/core-js-pure/internals/object-property-is-enumerable.js\");\nvar createPropertyDescriptor = __webpack_require__(\"../node_modules/core-js-pure/internals/create-property-descriptor.js\");\nvar toIndexedObject = __webpack_require__(\"../node_modules/core-js-pure/internals/to-indexed-object.js\");\nvar toPropertyKey = __webpack_require__(\"../node_modules/core-js-pure/internals/to-property-key.js\");\nvar hasOwn = __webpack_require__(\"../node_modules/core-js-pure/internals/has-own-property.js\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"../node_modules/core-js-pure/internals/ie8-dom-define.js\");\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/object-get-own-property-descriptor.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/object-is-prototype-of.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/object-is-prototype-of.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/object-property-is-enumerable.js":
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/object-property-is-enumerable.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/ordinary-to-primitive.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar call = __webpack_require__(\"../node_modules/core-js-pure/internals/function-call.js\");\nvar isCallable = __webpack_require__(\"../node_modules/core-js-pure/internals/is-callable.js\");\nvar isObject = __webpack_require__(\"../node_modules/core-js-pure/internals/is-object.js\");\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/ordinary-to-primitive.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/path.js":
/***/ (function(module) {

"use strict";
eval("\nmodule.exports = {};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/path.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/require-object-coercible.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar isNullOrUndefined = __webpack_require__(\"../node_modules/core-js-pure/internals/is-null-or-undefined.js\");\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/require-object-coercible.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/shared-store.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar IS_PURE = __webpack_require__(\"../node_modules/core-js-pure/internals/is-pure.js\");\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar defineGlobalProperty = __webpack_require__(\"../node_modules/core-js-pure/internals/define-global-property.js\");\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.38.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/shared-store.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/shared.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar store = __webpack_require__(\"../node_modules/core-js-pure/internals/shared-store.js\");\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/shared.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/symbol-constructor-detection.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = __webpack_require__(\"../node_modules/core-js-pure/internals/environment-v8-version.js\");\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\n\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/symbol-constructor-detection.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/to-indexed-object.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = __webpack_require__(\"../node_modules/core-js-pure/internals/indexed-object.js\");\nvar requireObjectCoercible = __webpack_require__(\"../node_modules/core-js-pure/internals/require-object-coercible.js\");\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/to-indexed-object.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/to-object.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar requireObjectCoercible = __webpack_require__(\"../node_modules/core-js-pure/internals/require-object-coercible.js\");\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/to-object.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/to-primitive.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar call = __webpack_require__(\"../node_modules/core-js-pure/internals/function-call.js\");\nvar isObject = __webpack_require__(\"../node_modules/core-js-pure/internals/is-object.js\");\nvar isSymbol = __webpack_require__(\"../node_modules/core-js-pure/internals/is-symbol.js\");\nvar getMethod = __webpack_require__(\"../node_modules/core-js-pure/internals/get-method.js\");\nvar ordinaryToPrimitive = __webpack_require__(\"../node_modules/core-js-pure/internals/ordinary-to-primitive.js\");\nvar wellKnownSymbol = __webpack_require__(\"../node_modules/core-js-pure/internals/well-known-symbol.js\");\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/to-primitive.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/to-property-key.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar toPrimitive = __webpack_require__(\"../node_modules/core-js-pure/internals/to-primitive.js\");\nvar isSymbol = __webpack_require__(\"../node_modules/core-js-pure/internals/is-symbol.js\");\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/to-property-key.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/try-to-string.js":
/***/ (function(module) {

"use strict";
eval("\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/try-to-string.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/uid.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar uncurryThis = __webpack_require__(\"../node_modules/core-js-pure/internals/function-uncurry-this.js\");\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/uid.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/use-symbol-as-uid.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = __webpack_require__(\"../node_modules/core-js-pure/internals/symbol-constructor-detection.js\");\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/use-symbol-as-uid.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/v8-prototype-define-bug.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar DESCRIPTORS = __webpack_require__(\"../node_modules/core-js-pure/internals/descriptors.js\");\nvar fails = __webpack_require__(\"../node_modules/core-js-pure/internals/fails.js\");\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/v8-prototype-define-bug.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/internals/well-known-symbol.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\nvar shared = __webpack_require__(\"../node_modules/core-js-pure/internals/shared.js\");\nvar hasOwn = __webpack_require__(\"../node_modules/core-js-pure/internals/has-own-property.js\");\nvar uid = __webpack_require__(\"../node_modules/core-js-pure/internals/uid.js\");\nvar NATIVE_SYMBOL = __webpack_require__(\"../node_modules/core-js-pure/internals/symbol-constructor-detection.js\");\nvar USE_SYMBOL_AS_UID = __webpack_require__(\"../node_modules/core-js-pure/internals/use-symbol-as-uid.js\");\n\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/internals/well-known-symbol.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/modules/es.global-this.js":
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar $ = __webpack_require__(\"../node_modules/core-js-pure/internals/export.js\");\nvar globalThis = __webpack_require__(\"../node_modules/core-js-pure/internals/global-this.js\");\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true, forced: globalThis.globalThis !== globalThis }, {\n  globalThis: globalThis\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/modules/es.global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/modules/esnext.global-this.js":
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n// TODO: Remove from `core-js@4`\n__webpack_require__(\"../node_modules/core-js-pure/modules/es.global-this.js\");\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/modules/esnext.global-this.js?");

/***/ }),

/***/ "../node_modules/core-js-pure/stable/global-this.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar parent = __webpack_require__(\"../node_modules/core-js-pure/es/global-this.js\");\n\nmodule.exports = parent;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/core-js-pure/stable/global-this.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-abtesting/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abtestingClient: function() { return /* binding */ abtestingClient; },\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/abtestingClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nvar REGIONS = [\"de\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = !region ? \"analytics.algolia.com\" : \"analytics.{region}.algolia.com\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createAbtestingClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Abtesting\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * Creates a new A/B test.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param addABTestsRequest - The addABTestsRequest object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    addABTests(addABTestsRequest, requestOptions) {\n      if (!addABTestsRequest) {\n        throw new Error(\"Parameter `addABTestsRequest` is required when calling `addABTests`.\");\n      }\n      if (!addABTestsRequest.name) {\n        throw new Error(\"Parameter `addABTestsRequest.name` is required when calling `addABTests`.\");\n      }\n      if (!addABTestsRequest.variants) {\n        throw new Error(\"Parameter `addABTestsRequest.variants` is required when calling `addABTests`.\");\n      }\n      if (!addABTestsRequest.endAt) {\n        throw new Error(\"Parameter `addABTestsRequest.endAt` is required when calling `addABTests`.\");\n      }\n      const requestPath = \"/2/abtests\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: addABTestsRequest\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes an A/B test by its ID.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param deleteABTest - The deleteABTest object.\n     * @param deleteABTest.id - Unique A/B test identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteABTest({ id }, requestOptions) {\n      if (!id) {\n        throw new Error(\"Parameter `id` is required when calling `deleteABTest`.\");\n      }\n      const requestPath = \"/2/abtests/{id}\".replace(\"{id}\", encodeURIComponent(id));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Given the traffic percentage and the expected effect size, this endpoint estimates the sample size and duration of an A/B test based on historical traffic.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param estimateABTestRequest - The estimateABTestRequest object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    estimateABTest(estimateABTestRequest, requestOptions) {\n      if (!estimateABTestRequest) {\n        throw new Error(\"Parameter `estimateABTestRequest` is required when calling `estimateABTest`.\");\n      }\n      if (!estimateABTestRequest.configuration) {\n        throw new Error(\"Parameter `estimateABTestRequest.configuration` is required when calling `estimateABTest`.\");\n      }\n      if (!estimateABTestRequest.variants) {\n        throw new Error(\"Parameter `estimateABTestRequest.variants` is required when calling `estimateABTest`.\");\n      }\n      const requestPath = \"/2/abtests/estimate\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: estimateABTestRequest\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the details for an A/B test by its ID.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getABTest - The getABTest object.\n     * @param getABTest.id - Unique A/B test identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getABTest({ id }, requestOptions) {\n      if (!id) {\n        throw new Error(\"Parameter `id` is required when calling `getABTest`.\");\n      }\n      const requestPath = \"/2/abtests/{id}\".replace(\"{id}\", encodeURIComponent(id));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists all A/B tests you configured for this application.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param listABTests - The listABTests object.\n     * @param listABTests.offset - Position of the first item to return.\n     * @param listABTests.limit - Number of items to return.\n     * @param listABTests.indexPrefix - Index name prefix. Only A/B tests for indices starting with this string are included in the response.\n     * @param listABTests.indexSuffix - Index name suffix. Only A/B tests for indices ending with this string are included in the response.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listABTests({ offset, limit, indexPrefix, indexSuffix } = {}, requestOptions = void 0) {\n      const requestPath = \"/2/abtests\";\n      const headers = {};\n      const queryParameters = {};\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (indexPrefix !== void 0) {\n        queryParameters[\"indexPrefix\"] = indexPrefix.toString();\n      }\n      if (indexSuffix !== void 0) {\n        queryParameters[\"indexSuffix\"] = indexSuffix.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Schedule an A/B test to be started at a later time.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param scheduleABTestsRequest - The scheduleABTestsRequest object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    scheduleABTest(scheduleABTestsRequest, requestOptions) {\n      if (!scheduleABTestsRequest) {\n        throw new Error(\"Parameter `scheduleABTestsRequest` is required when calling `scheduleABTest`.\");\n      }\n      if (!scheduleABTestsRequest.name) {\n        throw new Error(\"Parameter `scheduleABTestsRequest.name` is required when calling `scheduleABTest`.\");\n      }\n      if (!scheduleABTestsRequest.variants) {\n        throw new Error(\"Parameter `scheduleABTestsRequest.variants` is required when calling `scheduleABTest`.\");\n      }\n      if (!scheduleABTestsRequest.scheduledAt) {\n        throw new Error(\"Parameter `scheduleABTestsRequest.scheduledAt` is required when calling `scheduleABTest`.\");\n      }\n      if (!scheduleABTestsRequest.endAt) {\n        throw new Error(\"Parameter `scheduleABTestsRequest.endAt` is required when calling `scheduleABTest`.\");\n      }\n      const requestPath = \"/2/abtests/schedule\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: scheduleABTestsRequest\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Stops an A/B test by its ID.  You can\\'t restart stopped A/B tests.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param stopABTest - The stopABTest object.\n     * @param stopABTest.id - Unique A/B test identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    stopABTest({ id }, requestOptions) {\n      if (!id) {\n        throw new Error(\"Parameter `id` is required when calling `stopABTest`.\");\n      }\n      const requestPath = \"/2/abtests/{id}/stop\".replace(\"{id}\", encodeURIComponent(id));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction abtestingClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createAbtestingClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-abtesting/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-analytics/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyticsClient: function() { return /* binding */ analyticsClient; },\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/analyticsClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nvar REGIONS = [\"de\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = !region ? \"analytics.algolia.com\" : \"analytics.{region}.algolia.com\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createAnalyticsClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Analytics\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the add-to-cart rate for all your searches with at least one add-to-cart event, including a daily breakdown.  By default, the analyzed period includes the last eight days including the current day.  The rate is the number of add-to-cart conversion events divided by the number of tracked searches. A search is tracked if it returns a queryID (`clickAnalytics` is `true`). This differs from the response\\'s `count`, which shows the overall number of searches, including those where `clickAnalytics` is `false`.  **There\\'s a difference between a 0 and null add-to-cart rate when `clickAnalytics` is enabled:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, the add-to-cart rate is null. - **0** mean there _were_ queries but no [add-to-cart events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getAddToCartRate - The getAddToCartRate object.\n     * @param getAddToCartRate.index - Index name.\n     * @param getAddToCartRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getAddToCartRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getAddToCartRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getAddToCartRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getAddToCartRate`.\");\n      }\n      const requestPath = \"/2/conversions/addToCartRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the average click position of your search results, including a daily breakdown.  The average click position is the average of all clicked search result positions. For example, if users only ever click on the first result for any search, the average click position is 1. By default, the analyzed period includes the last eight days including the current day.  An average of `null` when `clickAnalytics` is enabled means Algolia didn\\'t receive any [click events](https://www.algolia.com/doc/guides/sending-events/getting-started/) for the queries. The average is `null` until Algolia receives at least one click event.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getAverageClickPosition - The getAverageClickPosition object.\n     * @param getAverageClickPosition.index - Index name.\n     * @param getAverageClickPosition.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getAverageClickPosition.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getAverageClickPosition.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getAverageClickPosition({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getAverageClickPosition`.\");\n      }\n      const requestPath = \"/2/clicks/averageClickPosition\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the positions in the search results and their associated number of clicks.  This lets you check how many clicks the first, second, or tenth search results receive.  An average of `0` when `clickAnalytics` is enabled means Algolia didn\\'t receive any [click events](https://www.algolia.com/doc/guides/sending-events/getting-started/) for the queries.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getClickPositions - The getClickPositions object.\n     * @param getClickPositions.index - Index name.\n     * @param getClickPositions.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getClickPositions.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getClickPositions.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getClickPositions({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getClickPositions`.\");\n      }\n      const requestPath = \"/2/clicks/positions\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the click-through rate (CTR) for all your searches with at least one click event, including a daily breakdown.  By default, the analyzed period includes the last eight days including the current day.  **There\\'s a difference between a 0 and null CTR when `clickAnalytics` is enabled:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, CTR is null. - **0** mean there _were_ queries but no [click events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getClickThroughRate - The getClickThroughRate object.\n     * @param getClickThroughRate.index - Index name.\n     * @param getClickThroughRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getClickThroughRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getClickThroughRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getClickThroughRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getClickThroughRate`.\");\n      }\n      const requestPath = \"/2/clicks/clickThroughRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the conversion rate (CR) for all your searches with at least one conversion event, including a daily breakdown.  By default, the analyzed period includes the last eight days including the current day.  **There\\'s a difference between a 0 and null CR when `clickAnalytics` is enabled:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, CR is null. - **0** mean there _were_ queries but no [conversion events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getConversionRate - The getConversionRate object.\n     * @param getConversionRate.index - Index name.\n     * @param getConversionRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getConversionRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getConversionRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getConversionRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getConversionRate`.\");\n      }\n      const requestPath = \"/2/conversions/conversionRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the fraction of searches that didn\\'t lead to any click within a time range, including a daily breakdown. It also returns the number of tracked searches and tracked searches without clicks.  By default, the analyzed period includes the last eight days including the current day.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getNoClickRate - The getNoClickRate object.\n     * @param getNoClickRate.index - Index name.\n     * @param getNoClickRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getNoClickRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getNoClickRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getNoClickRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getNoClickRate`.\");\n      }\n      const requestPath = \"/2/searches/noClickRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the fraction of searches that didn\\'t return any results within a time range, including a daily breakdown. It also returns the count of searches and searches without results used to compute the rates.  By default, the analyzed period includes the last eight days including the current day.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getNoResultsRate - The getNoResultsRate object.\n     * @param getNoResultsRate.index - Index name.\n     * @param getNoResultsRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getNoResultsRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getNoResultsRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getNoResultsRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getNoResultsRate`.\");\n      }\n      const requestPath = \"/2/searches/noResultRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the purchase rate for all your searches with at least one purchase event, including a daily breakdown.  By default, the analyzed period includes the last eight days including the current day.  The rate is the number of purchase conversion events divided by the number of tracked searches. A search is tracked if it returns a query ID (`clickAnalytics` is `true`). This differs from the response\\'s `count`, which shows the overall number of searches, including those where `clickAnalytics` is `false`.  **There\\'s a difference between a 0 and null purchase rate when `clickAnalytics` is enabled:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, the purchase rate is null. - **0** mean there _were_ queries but no [purchase conversion events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getPurchaseRate - The getPurchaseRate object.\n     * @param getPurchaseRate.index - Index name.\n     * @param getPurchaseRate.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getPurchaseRate.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getPurchaseRate.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getPurchaseRate({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getPurchaseRate`.\");\n      }\n      const requestPath = \"/2/conversions/purchaseRate\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves revenue-related metrics, such as the total revenue or the average order value.  To retrieve revenue-related metrics, send purchase events. By default, the analyzed period includes the last eight days including the current day.  Revenue is based on purchase conversion events (a conversion event with an `eventSubtype` attribute of `purchase`). The revenue is the `price` attribute multiplied by the `quantity` attribute for each object in the event\\'s `objectData` array.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getRevenue - The getRevenue object.\n     * @param getRevenue.index - Index name.\n     * @param getRevenue.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getRevenue.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getRevenue.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRevenue({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getRevenue`.\");\n      }\n      const requestPath = \"/2/conversions/revenue\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the number of searches within a time range, including a daily breakdown.  By default, the analyzed period includes the last eight days including the current day.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getSearchesCount - The getSearchesCount object.\n     * @param getSearchesCount.index - Index name.\n     * @param getSearchesCount.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesCount.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesCount.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSearchesCount({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getSearchesCount`.\");\n      }\n      const requestPath = \"/2/searches/count\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the most popular searches that didn\\'t lead to any clicks, from the 1,000 most frequent searches.  For each search, it also returns the number of displayed search results that remained unclicked.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getSearchesNoClicks - The getSearchesNoClicks object.\n     * @param getSearchesNoClicks.index - Index name.\n     * @param getSearchesNoClicks.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesNoClicks.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesNoClicks.limit - Number of items to return.\n     * @param getSearchesNoClicks.offset - Position of the first item to return.\n     * @param getSearchesNoClicks.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSearchesNoClicks({ index, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getSearchesNoClicks`.\");\n      }\n      const requestPath = \"/2/searches/noClicks\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the 1,000 most frequent searches that produced zero results.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getSearchesNoResults - The getSearchesNoResults object.\n     * @param getSearchesNoResults.index - Index name.\n     * @param getSearchesNoResults.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesNoResults.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getSearchesNoResults.limit - Number of items to return.\n     * @param getSearchesNoResults.offset - Position of the first item to return.\n     * @param getSearchesNoResults.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSearchesNoResults({ index, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getSearchesNoResults`.\");\n      }\n      const requestPath = \"/2/searches/noResults\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the time when the Analytics data for the specified index was last updated.  If the index has been recently created or no search has been performed yet the updated time is `null`.  The Analytics data is updated every 5&nbsp;minutes.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getStatus - The getStatus object.\n     * @param getStatus.index - Index name.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getStatus({ index }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getStatus`.\");\n      }\n      const requestPath = \"/2/status\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the countries with the most searches in your index.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopCountries - The getTopCountries object.\n     * @param getTopCountries.index - Index name.\n     * @param getTopCountries.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopCountries.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopCountries.limit - Number of items to return.\n     * @param getTopCountries.offset - Position of the first item to return.\n     * @param getTopCountries.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopCountries({ index, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopCountries`.\");\n      }\n      const requestPath = \"/2/countries\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the 1,000 most frequently used filter attributes.  These are attributes of your records that you included in the `attributesForFaceting` setting.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopFilterAttributes - The getTopFilterAttributes object.\n     * @param getTopFilterAttributes.index - Index name.\n     * @param getTopFilterAttributes.search - Search query.\n     * @param getTopFilterAttributes.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFilterAttributes.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFilterAttributes.limit - Number of items to return.\n     * @param getTopFilterAttributes.offset - Position of the first item to return.\n     * @param getTopFilterAttributes.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopFilterAttributes({ index, search, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopFilterAttributes`.\");\n      }\n      const requestPath = \"/2/filters\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (search !== void 0) {\n        queryParameters[\"search\"] = search.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the 1,000 most frequent filter (facet) values for a filter attribute.  These are attributes of your records that you included in the `attributesForFaceting` setting.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopFilterForAttribute - The getTopFilterForAttribute object.\n     * @param getTopFilterForAttribute.attribute - Attribute name.\n     * @param getTopFilterForAttribute.index - Index name.\n     * @param getTopFilterForAttribute.search - Search query.\n     * @param getTopFilterForAttribute.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFilterForAttribute.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFilterForAttribute.limit - Number of items to return.\n     * @param getTopFilterForAttribute.offset - Position of the first item to return.\n     * @param getTopFilterForAttribute.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopFilterForAttribute({ attribute, index, search, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!attribute) {\n        throw new Error(\"Parameter `attribute` is required when calling `getTopFilterForAttribute`.\");\n      }\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopFilterForAttribute`.\");\n      }\n      const requestPath = \"/2/filters/{attribute}\".replace(\"{attribute}\", encodeURIComponent(attribute));\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (search !== void 0) {\n        queryParameters[\"search\"] = search.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the 1,000 most frequently used filters for a search that didn\\'t return any results.  To get the most frequent searches without results, use the [Retrieve searches without results](#tag/search/operation/getSearchesNoResults) operation.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopFiltersNoResults - The getTopFiltersNoResults object.\n     * @param getTopFiltersNoResults.index - Index name.\n     * @param getTopFiltersNoResults.search - Search query.\n     * @param getTopFiltersNoResults.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFiltersNoResults.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopFiltersNoResults.limit - Number of items to return.\n     * @param getTopFiltersNoResults.offset - Position of the first item to return.\n     * @param getTopFiltersNoResults.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopFiltersNoResults({ index, search, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopFiltersNoResults`.\");\n      }\n      const requestPath = \"/2/filters/noResults\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (search !== void 0) {\n        queryParameters[\"search\"] = search.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the object IDs of the 1,000 most frequent search results.  If you set the `clickAnalytics` query parameter to true, the response also includes:  - Tracked searches count. Tracked searches are Search API requests with the `clickAnalytics` parameter set to `true`. This differs from the response\\'s `count`, which shows the overall number of searches, including those where `clickAnalytics` is `false`. - Click count - Click-through rate (CTR) - Conversion count - Conversion rate (CR) - Average click position  If you set the `revenueAnalytics` parameter to `true`, the response also includes:  - Add-to-cart count - Add-to-cart rate (ATCR) - Purchase count - Purchase rate - Revenue details for each currency  **There\\'s a difference between 0% rates and null rates:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, the rates (CTR, CR, ATCR, purchase rate) are null. - **0% rates** mean there _were_ queries but no [click or conversion events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopHits - The getTopHits object.\n     * @param getTopHits.index - Index name.\n     * @param getTopHits.search - Search query.\n     * @param getTopHits.clickAnalytics - Whether to include metrics related to click and conversion events in the response.\n     * @param getTopHits.revenueAnalytics - Whether to include metrics related to revenue events in the response.\n     * @param getTopHits.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopHits.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopHits.limit - Number of items to return.\n     * @param getTopHits.offset - Position of the first item to return.\n     * @param getTopHits.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopHits({ index, search, clickAnalytics, revenueAnalytics, startDate, endDate, limit, offset, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopHits`.\");\n      }\n      const requestPath = \"/2/hits\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (search !== void 0) {\n        queryParameters[\"search\"] = search.toString();\n      }\n      if (clickAnalytics !== void 0) {\n        queryParameters[\"clickAnalytics\"] = clickAnalytics.toString();\n      }\n      if (revenueAnalytics !== void 0) {\n        queryParameters[\"revenueAnalytics\"] = revenueAnalytics.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Returns the most popular searches. For each search, it also includes the average number of hits.  If you set the `clickAnalytics` query parameter to `true`, the response also includes  - Tracked searches count. Tracked searches are Search API requests with the `clickAnalytics` parameter set to `true`. This differs from the response\\'s `count`, which shows the overall number of searches, including those where `clickAnalytics` is `false`. - Click count - Click-through rate (CTR) - Conversion count - Conversion rate (CR) - Average click position  If you set the `revenueAnalytics` query parameter to `true`, the response also includes:  - Add-to-cart count - Add-to-cart rate (ATCR) - Purchase count - Purchase rate - Revenue details for each currency  **There\\'s a difference between 0% rates and null rates:**  - **Null** means there were no queries: since Algolia didn\\'t receive any events, the rates (CTR, CR, ATCR, purchase rate) are null. - **0% rates** mean there _were_ queries but no [click or conversion events](https://www.algolia.com/doc/guides/sending-events/getting-started/) were received.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getTopSearches - The getTopSearches object.\n     * @param getTopSearches.index - Index name.\n     * @param getTopSearches.clickAnalytics - Whether to include metrics related to click and conversion events in the response.\n     * @param getTopSearches.revenueAnalytics - Whether to include metrics related to revenue events in the response.\n     * @param getTopSearches.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopSearches.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getTopSearches.orderBy - Attribute by which to order the response items.  If the `clickAnalytics` parameter is false, only `searchCount` is available.\n     * @param getTopSearches.direction - Sorting direction of the results: ascending or descending.\n     * @param getTopSearches.limit - Number of items to return.\n     * @param getTopSearches.offset - Position of the first item to return.\n     * @param getTopSearches.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopSearches({\n      index,\n      clickAnalytics,\n      revenueAnalytics,\n      startDate,\n      endDate,\n      orderBy,\n      direction,\n      limit,\n      offset,\n      tags\n    }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getTopSearches`.\");\n      }\n      const requestPath = \"/2/searches\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (clickAnalytics !== void 0) {\n        queryParameters[\"clickAnalytics\"] = clickAnalytics.toString();\n      }\n      if (revenueAnalytics !== void 0) {\n        queryParameters[\"revenueAnalytics\"] = revenueAnalytics.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (orderBy !== void 0) {\n        queryParameters[\"orderBy\"] = orderBy.toString();\n      }\n      if (direction !== void 0) {\n        queryParameters[\"direction\"] = direction.toString();\n      }\n      if (limit !== void 0) {\n        queryParameters[\"limit\"] = limit.toString();\n      }\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the number of unique users within a time range, including a daily breakdown.  Since it returns the number of unique users, the sum of the daily values might be different from the total number.  By default:  - Algolia distinguishes search users by their IP address, _unless_ you include a pseudonymous user identifier in your search requests with the `userToken` API parameter or `x-algolia-usertoken` request header. - The analyzed period includes the last eight days including the current day.\n     *\n     * Required API Key ACLs:\n     *  - analytics\n     * @param getUsersCount - The getUsersCount object.\n     * @param getUsersCount.index - Index name.\n     * @param getUsersCount.startDate - Start date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getUsersCount.endDate - End date of the period to analyze, in `YYYY-MM-DD` format.\n     * @param getUsersCount.tags - Tags by which to segment the analytics.  You can combine multiple tags with `OR` and `AND`. Tags must be URL-encoded. For more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getUsersCount({ index, startDate, endDate, tags }, requestOptions) {\n      if (!index) {\n        throw new Error(\"Parameter `index` is required when calling `getUsersCount`.\");\n      }\n      const requestPath = \"/2/users/count\";\n      const headers = {};\n      const queryParameters = {};\n      if (index !== void 0) {\n        queryParameters[\"index\"] = index.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      if (tags !== void 0) {\n        queryParameters[\"tags\"] = tags.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction analyticsClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createAnalyticsClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-analytics/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-common/dist/common.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlgoliaError: function() { return /* binding */ AlgoliaError; },\n/* harmony export */   ApiError: function() { return /* binding */ ApiError; },\n/* harmony export */   DEFAULT_CONNECT_TIMEOUT_BROWSER: function() { return /* binding */ DEFAULT_CONNECT_TIMEOUT_BROWSER; },\n/* harmony export */   DEFAULT_CONNECT_TIMEOUT_NODE: function() { return /* binding */ DEFAULT_CONNECT_TIMEOUT_NODE; },\n/* harmony export */   DEFAULT_READ_TIMEOUT_BROWSER: function() { return /* binding */ DEFAULT_READ_TIMEOUT_BROWSER; },\n/* harmony export */   DEFAULT_READ_TIMEOUT_NODE: function() { return /* binding */ DEFAULT_READ_TIMEOUT_NODE; },\n/* harmony export */   DEFAULT_WRITE_TIMEOUT_BROWSER: function() { return /* binding */ DEFAULT_WRITE_TIMEOUT_BROWSER; },\n/* harmony export */   DEFAULT_WRITE_TIMEOUT_NODE: function() { return /* binding */ DEFAULT_WRITE_TIMEOUT_NODE; },\n/* harmony export */   DeserializationError: function() { return /* binding */ DeserializationError; },\n/* harmony export */   DetailedApiError: function() { return /* binding */ DetailedApiError; },\n/* harmony export */   ErrorWithStackTrace: function() { return /* binding */ ErrorWithStackTrace; },\n/* harmony export */   LogLevelEnum: function() { return /* binding */ LogLevelEnum; },\n/* harmony export */   RetryError: function() { return /* binding */ RetryError; },\n/* harmony export */   createAlgoliaAgent: function() { return /* binding */ createAlgoliaAgent; },\n/* harmony export */   createAuth: function() { return /* binding */ createAuth; },\n/* harmony export */   createBrowserLocalStorageCache: function() { return /* binding */ createBrowserLocalStorageCache; },\n/* harmony export */   createFallbackableCache: function() { return /* binding */ createFallbackableCache; },\n/* harmony export */   createIterablePromise: function() { return /* binding */ createIterablePromise; },\n/* harmony export */   createMemoryCache: function() { return /* binding */ createMemoryCache; },\n/* harmony export */   createNullCache: function() { return /* binding */ createNullCache; },\n/* harmony export */   createNullLogger: function() { return /* binding */ createNullLogger; },\n/* harmony export */   createStatefulHost: function() { return /* binding */ createStatefulHost; },\n/* harmony export */   createTransporter: function() { return /* binding */ createTransporter; },\n/* harmony export */   deserializeFailure: function() { return /* binding */ deserializeFailure; },\n/* harmony export */   deserializeSuccess: function() { return /* binding */ deserializeSuccess; },\n/* harmony export */   getAlgoliaAgent: function() { return /* binding */ getAlgoliaAgent; },\n/* harmony export */   isNetworkError: function() { return /* binding */ isNetworkError; },\n/* harmony export */   isRetryable: function() { return /* binding */ isRetryable; },\n/* harmony export */   isSuccess: function() { return /* binding */ isSuccess; },\n/* harmony export */   serializeData: function() { return /* binding */ serializeData; },\n/* harmony export */   serializeHeaders: function() { return /* binding */ serializeHeaders; },\n/* harmony export */   serializeQueryParameters: function() { return /* binding */ serializeQueryParameters; },\n/* harmony export */   serializeUrl: function() { return /* binding */ serializeUrl; },\n/* harmony export */   shuffle: function() { return /* binding */ shuffle; },\n/* harmony export */   stackFrameWithoutCredentials: function() { return /* binding */ stackFrameWithoutCredentials; },\n/* harmony export */   stackTraceWithoutCredentials: function() { return /* binding */ stackTraceWithoutCredentials; }\n/* harmony export */ });\n// src/cache/createBrowserLocalStorageCache.ts\nfunction createBrowserLocalStorageCache(options) {\n  let storage;\n  const namespaceKey = `algolia-client-js-${options.key}`;\n  function getStorage() {\n    if (storage === void 0) {\n      storage = options.localStorage || window.localStorage;\n    }\n    return storage;\n  }\n  function getNamespace() {\n    return JSON.parse(getStorage().getItem(namespaceKey) || \"{}\");\n  }\n  function setNamespace(namespace) {\n    getStorage().setItem(namespaceKey, JSON.stringify(namespace));\n  }\n  function removeOutdatedCacheItems() {\n    const timeToLive = options.timeToLive ? options.timeToLive * 1e3 : null;\n    const namespace = getNamespace();\n    const filteredNamespaceWithoutOldFormattedCacheItems = Object.fromEntries(\n      Object.entries(namespace).filter(([, cacheItem]) => {\n        return cacheItem.timestamp !== void 0;\n      })\n    );\n    setNamespace(filteredNamespaceWithoutOldFormattedCacheItems);\n    if (!timeToLive) {\n      return;\n    }\n    const filteredNamespaceWithoutExpiredItems = Object.fromEntries(\n      Object.entries(filteredNamespaceWithoutOldFormattedCacheItems).filter(([, cacheItem]) => {\n        const currentTimestamp = (/* @__PURE__ */ new Date()).getTime();\n        const isExpired = cacheItem.timestamp + timeToLive < currentTimestamp;\n        return !isExpired;\n      })\n    );\n    setNamespace(filteredNamespaceWithoutExpiredItems);\n  }\n  return {\n    get(key, defaultValue, events = {\n      miss: () => Promise.resolve()\n    }) {\n      return Promise.resolve().then(() => {\n        removeOutdatedCacheItems();\n        return getNamespace()[JSON.stringify(key)];\n      }).then((value) => {\n        return Promise.all([value ? value.value : defaultValue(), value !== void 0]);\n      }).then(([value, exists]) => {\n        return Promise.all([value, exists || events.miss(value)]);\n      }).then(([value]) => value);\n    },\n    set(key, value) {\n      return Promise.resolve().then(() => {\n        const namespace = getNamespace();\n        namespace[JSON.stringify(key)] = {\n          timestamp: (/* @__PURE__ */ new Date()).getTime(),\n          value\n        };\n        getStorage().setItem(namespaceKey, JSON.stringify(namespace));\n        return value;\n      });\n    },\n    delete(key) {\n      return Promise.resolve().then(() => {\n        const namespace = getNamespace();\n        delete namespace[JSON.stringify(key)];\n        getStorage().setItem(namespaceKey, JSON.stringify(namespace));\n      });\n    },\n    clear() {\n      return Promise.resolve().then(() => {\n        getStorage().removeItem(namespaceKey);\n      });\n    }\n  };\n}\n\n// src/cache/createNullCache.ts\nfunction createNullCache() {\n  return {\n    get(_key, defaultValue, events = {\n      miss: () => Promise.resolve()\n    }) {\n      const value = defaultValue();\n      return value.then((result) => Promise.all([result, events.miss(result)])).then(([result]) => result);\n    },\n    set(_key, value) {\n      return Promise.resolve(value);\n    },\n    delete(_key) {\n      return Promise.resolve();\n    },\n    clear() {\n      return Promise.resolve();\n    }\n  };\n}\n\n// src/cache/createFallbackableCache.ts\nfunction createFallbackableCache(options) {\n  const caches = [...options.caches];\n  const current = caches.shift();\n  if (current === void 0) {\n    return createNullCache();\n  }\n  return {\n    get(key, defaultValue, events = {\n      miss: () => Promise.resolve()\n    }) {\n      return current.get(key, defaultValue, events).catch(() => {\n        return createFallbackableCache({ caches }).get(key, defaultValue, events);\n      });\n    },\n    set(key, value) {\n      return current.set(key, value).catch(() => {\n        return createFallbackableCache({ caches }).set(key, value);\n      });\n    },\n    delete(key) {\n      return current.delete(key).catch(() => {\n        return createFallbackableCache({ caches }).delete(key);\n      });\n    },\n    clear() {\n      return current.clear().catch(() => {\n        return createFallbackableCache({ caches }).clear();\n      });\n    }\n  };\n}\n\n// src/cache/createMemoryCache.ts\nfunction createMemoryCache(options = { serializable: true }) {\n  let cache = {};\n  return {\n    get(key, defaultValue, events = {\n      miss: () => Promise.resolve()\n    }) {\n      const keyAsString = JSON.stringify(key);\n      if (keyAsString in cache) {\n        return Promise.resolve(options.serializable ? JSON.parse(cache[keyAsString]) : cache[keyAsString]);\n      }\n      const promise = defaultValue();\n      return promise.then((value) => events.miss(value)).then(() => promise);\n    },\n    set(key, value) {\n      cache[JSON.stringify(key)] = options.serializable ? JSON.stringify(value) : value;\n      return Promise.resolve(value);\n    },\n    delete(key) {\n      delete cache[JSON.stringify(key)];\n      return Promise.resolve();\n    },\n    clear() {\n      cache = {};\n      return Promise.resolve();\n    }\n  };\n}\n\n// src/constants.ts\nvar DEFAULT_CONNECT_TIMEOUT_BROWSER = 1e3;\nvar DEFAULT_READ_TIMEOUT_BROWSER = 2e3;\nvar DEFAULT_WRITE_TIMEOUT_BROWSER = 3e4;\nvar DEFAULT_CONNECT_TIMEOUT_NODE = 2e3;\nvar DEFAULT_READ_TIMEOUT_NODE = 5e3;\nvar DEFAULT_WRITE_TIMEOUT_NODE = 3e4;\n\n// src/createAlgoliaAgent.ts\nfunction createAlgoliaAgent(version) {\n  const algoliaAgent = {\n    value: `Algolia for JavaScript (${version})`,\n    add(options) {\n      const addedAlgoliaAgent = `; ${options.segment}${options.version !== void 0 ? ` (${options.version})` : \"\"}`;\n      if (algoliaAgent.value.indexOf(addedAlgoliaAgent) === -1) {\n        algoliaAgent.value = `${algoliaAgent.value}${addedAlgoliaAgent}`;\n      }\n      return algoliaAgent;\n    }\n  };\n  return algoliaAgent;\n}\n\n// src/createAuth.ts\nfunction createAuth(appId, apiKey, authMode = \"WithinHeaders\") {\n  const credentials = {\n    \"x-algolia-api-key\": apiKey,\n    \"x-algolia-application-id\": appId\n  };\n  return {\n    headers() {\n      return authMode === \"WithinHeaders\" ? credentials : {};\n    },\n    queryParameters() {\n      return authMode === \"WithinQueryParameters\" ? credentials : {};\n    }\n  };\n}\n\n// src/createIterablePromise.ts\nfunction createIterablePromise({\n  func,\n  validate,\n  aggregator,\n  error,\n  timeout = () => 0\n}) {\n  const retry = (previousResponse) => {\n    return new Promise((resolve, reject) => {\n      func(previousResponse).then(async (response) => {\n        if (aggregator) {\n          await aggregator(response);\n        }\n        if (await validate(response)) {\n          return resolve(response);\n        }\n        if (error && await error.validate(response)) {\n          return reject(new Error(await error.message(response)));\n        }\n        return setTimeout(\n          () => {\n            retry(response).then(resolve).catch(reject);\n          },\n          await timeout()\n        );\n      }).catch((err) => {\n        reject(err);\n      });\n    });\n  };\n  return retry();\n}\n\n// src/getAlgoliaAgent.ts\nfunction getAlgoliaAgent({ algoliaAgents, client, version }) {\n  const defaultAlgoliaAgent = createAlgoliaAgent(version).add({\n    segment: client,\n    version\n  });\n  algoliaAgents.forEach((algoliaAgent) => defaultAlgoliaAgent.add(algoliaAgent));\n  return defaultAlgoliaAgent;\n}\n\n// src/logger/createNullLogger.ts\nfunction createNullLogger() {\n  return {\n    debug(_message, _args) {\n      return Promise.resolve();\n    },\n    info(_message, _args) {\n      return Promise.resolve();\n    },\n    error(_message, _args) {\n      return Promise.resolve();\n    }\n  };\n}\n\n// src/transporter/createStatefulHost.ts\nvar EXPIRATION_DELAY = 2 * 60 * 1e3;\nfunction createStatefulHost(host, status = \"up\") {\n  const lastUpdate = Date.now();\n  function isUp() {\n    return status === \"up\" || Date.now() - lastUpdate > EXPIRATION_DELAY;\n  }\n  function isTimedOut() {\n    return status === \"timed out\" && Date.now() - lastUpdate <= EXPIRATION_DELAY;\n  }\n  return { ...host, status, lastUpdate, isUp, isTimedOut };\n}\n\n// src/transporter/errors.ts\nvar AlgoliaError = class extends Error {\n  name = \"AlgoliaError\";\n  constructor(message, name) {\n    super(message);\n    if (name) {\n      this.name = name;\n    }\n  }\n};\nvar ErrorWithStackTrace = class extends AlgoliaError {\n  stackTrace;\n  constructor(message, stackTrace, name) {\n    super(message, name);\n    this.stackTrace = stackTrace;\n  }\n};\nvar RetryError = class extends ErrorWithStackTrace {\n  constructor(stackTrace) {\n    super(\n      \"Unreachable hosts - your application id may be incorrect. If the error persists, please reach out to the Algolia Support team: https://alg.li/support.\",\n      stackTrace,\n      \"RetryError\"\n    );\n  }\n};\nvar ApiError = class extends ErrorWithStackTrace {\n  status;\n  constructor(message, status, stackTrace, name = \"ApiError\") {\n    super(message, stackTrace, name);\n    this.status = status;\n  }\n};\nvar DeserializationError = class extends AlgoliaError {\n  response;\n  constructor(message, response) {\n    super(message, \"DeserializationError\");\n    this.response = response;\n  }\n};\nvar DetailedApiError = class extends ApiError {\n  error;\n  constructor(message, status, error, stackTrace) {\n    super(message, status, stackTrace, \"DetailedApiError\");\n    this.error = error;\n  }\n};\n\n// src/transporter/helpers.ts\nfunction shuffle(array) {\n  const shuffledArray = array;\n  for (let c = array.length - 1; c > 0; c--) {\n    const b = Math.floor(Math.random() * (c + 1));\n    const a = array[c];\n    shuffledArray[c] = array[b];\n    shuffledArray[b] = a;\n  }\n  return shuffledArray;\n}\nfunction serializeUrl(host, path, queryParameters) {\n  const queryParametersAsString = serializeQueryParameters(queryParameters);\n  let url = `${host.protocol}://${host.url}${host.port ? `:${host.port}` : \"\"}/${path.charAt(0) === \"/\" ? path.substring(1) : path}`;\n  if (queryParametersAsString.length) {\n    url += `?${queryParametersAsString}`;\n  }\n  return url;\n}\nfunction serializeQueryParameters(parameters) {\n  return Object.keys(parameters).filter((key) => parameters[key] !== void 0).sort().map(\n    (key) => `${key}=${encodeURIComponent(\n      Object.prototype.toString.call(parameters[key]) === \"[object Array]\" ? parameters[key].join(\",\") : parameters[key]\n    ).replace(/\\+/g, \"%20\")}`\n  ).join(\"&\");\n}\nfunction serializeData(request, requestOptions) {\n  if (request.method === \"GET\" || request.data === void 0 && requestOptions.data === void 0) {\n    return void 0;\n  }\n  const data = Array.isArray(request.data) ? request.data : { ...request.data, ...requestOptions.data };\n  return JSON.stringify(data);\n}\nfunction serializeHeaders(baseHeaders, requestHeaders, requestOptionsHeaders) {\n  const headers = {\n    Accept: \"application/json\",\n    ...baseHeaders,\n    ...requestHeaders,\n    ...requestOptionsHeaders\n  };\n  const serializedHeaders = {};\n  Object.keys(headers).forEach((header) => {\n    const value = headers[header];\n    serializedHeaders[header.toLowerCase()] = value;\n  });\n  return serializedHeaders;\n}\nfunction deserializeSuccess(response) {\n  try {\n    return JSON.parse(response.content);\n  } catch (e) {\n    throw new DeserializationError(e.message, response);\n  }\n}\nfunction deserializeFailure({ content, status }, stackFrame) {\n  try {\n    const parsed = JSON.parse(content);\n    if (\"error\" in parsed) {\n      return new DetailedApiError(parsed.message, status, parsed.error, stackFrame);\n    }\n    return new ApiError(parsed.message, status, stackFrame);\n  } catch {\n  }\n  return new ApiError(content, status, stackFrame);\n}\n\n// src/transporter/responses.ts\nfunction isNetworkError({ isTimedOut, status }) {\n  return !isTimedOut && ~~status === 0;\n}\nfunction isRetryable({ isTimedOut, status }) {\n  return isTimedOut || isNetworkError({ isTimedOut, status }) || ~~(status / 100) !== 2 && ~~(status / 100) !== 4;\n}\nfunction isSuccess({ status }) {\n  return ~~(status / 100) === 2;\n}\n\n// src/transporter/stackTrace.ts\nfunction stackTraceWithoutCredentials(stackTrace) {\n  return stackTrace.map((stackFrame) => stackFrameWithoutCredentials(stackFrame));\n}\nfunction stackFrameWithoutCredentials(stackFrame) {\n  const modifiedHeaders = stackFrame.request.headers[\"x-algolia-api-key\"] ? { \"x-algolia-api-key\": \"*****\" } : {};\n  return {\n    ...stackFrame,\n    request: {\n      ...stackFrame.request,\n      headers: {\n        ...stackFrame.request.headers,\n        ...modifiedHeaders\n      }\n    }\n  };\n}\n\n// src/transporter/createTransporter.ts\nfunction createTransporter({\n  hosts,\n  hostsCache,\n  baseHeaders,\n  logger,\n  baseQueryParameters,\n  algoliaAgent,\n  timeouts,\n  requester,\n  requestsCache,\n  responsesCache\n}) {\n  async function createRetryableOptions(compatibleHosts) {\n    const statefulHosts = await Promise.all(\n      compatibleHosts.map((compatibleHost) => {\n        return hostsCache.get(compatibleHost, () => {\n          return Promise.resolve(createStatefulHost(compatibleHost));\n        });\n      })\n    );\n    const hostsUp = statefulHosts.filter((host) => host.isUp());\n    const hostsTimedOut = statefulHosts.filter((host) => host.isTimedOut());\n    const hostsAvailable = [...hostsUp, ...hostsTimedOut];\n    const compatibleHostsAvailable = hostsAvailable.length > 0 ? hostsAvailable : compatibleHosts;\n    return {\n      hosts: compatibleHostsAvailable,\n      getTimeout(timeoutsCount, baseTimeout) {\n        const timeoutMultiplier = hostsTimedOut.length === 0 && timeoutsCount === 0 ? 1 : hostsTimedOut.length + 3 + timeoutsCount;\n        return timeoutMultiplier * baseTimeout;\n      }\n    };\n  }\n  async function retryableRequest(request, requestOptions, isRead = true) {\n    const stackTrace = [];\n    const data = serializeData(request, requestOptions);\n    const headers = serializeHeaders(baseHeaders, request.headers, requestOptions.headers);\n    const dataQueryParameters = request.method === \"GET\" ? {\n      ...request.data,\n      ...requestOptions.data\n    } : {};\n    const queryParameters = {\n      ...baseQueryParameters,\n      ...request.queryParameters,\n      ...dataQueryParameters\n    };\n    if (algoliaAgent.value) {\n      queryParameters[\"x-algolia-agent\"] = algoliaAgent.value;\n    }\n    if (requestOptions && requestOptions.queryParameters) {\n      for (const key of Object.keys(requestOptions.queryParameters)) {\n        if (!requestOptions.queryParameters[key] || Object.prototype.toString.call(requestOptions.queryParameters[key]) === \"[object Object]\") {\n          queryParameters[key] = requestOptions.queryParameters[key];\n        } else {\n          queryParameters[key] = requestOptions.queryParameters[key].toString();\n        }\n      }\n    }\n    let timeoutsCount = 0;\n    const retry = async (retryableHosts, getTimeout) => {\n      const host = retryableHosts.pop();\n      if (host === void 0) {\n        throw new RetryError(stackTraceWithoutCredentials(stackTrace));\n      }\n      const timeout = { ...timeouts, ...requestOptions.timeouts };\n      const payload = {\n        data,\n        headers,\n        method: request.method,\n        url: serializeUrl(host, request.path, queryParameters),\n        connectTimeout: getTimeout(timeoutsCount, timeout.connect),\n        responseTimeout: getTimeout(timeoutsCount, isRead ? timeout.read : timeout.write)\n      };\n      const pushToStackTrace = (response2) => {\n        const stackFrame = {\n          request: payload,\n          response: response2,\n          host,\n          triesLeft: retryableHosts.length\n        };\n        stackTrace.push(stackFrame);\n        return stackFrame;\n      };\n      const response = await requester.send(payload);\n      if (isRetryable(response)) {\n        const stackFrame = pushToStackTrace(response);\n        if (response.isTimedOut) {\n          timeoutsCount++;\n        }\n        logger.info(\"Retryable failure\", stackFrameWithoutCredentials(stackFrame));\n        await hostsCache.set(host, createStatefulHost(host, response.isTimedOut ? \"timed out\" : \"down\"));\n        return retry(retryableHosts, getTimeout);\n      }\n      if (isSuccess(response)) {\n        return deserializeSuccess(response);\n      }\n      pushToStackTrace(response);\n      throw deserializeFailure(response, stackTrace);\n    };\n    const compatibleHosts = hosts.filter(\n      (host) => host.accept === \"readWrite\" || (isRead ? host.accept === \"read\" : host.accept === \"write\")\n    );\n    const options = await createRetryableOptions(compatibleHosts);\n    return retry([...options.hosts].reverse(), options.getTimeout);\n  }\n  function createRequest(request, requestOptions = {}) {\n    const isRead = request.useReadTransporter || request.method === \"GET\";\n    if (!isRead) {\n      return retryableRequest(request, requestOptions, isRead);\n    }\n    const createRetryableRequest = () => {\n      return retryableRequest(request, requestOptions);\n    };\n    const cacheable = requestOptions.cacheable || request.cacheable;\n    if (cacheable !== true) {\n      return createRetryableRequest();\n    }\n    const key = {\n      request,\n      requestOptions,\n      transporter: {\n        queryParameters: baseQueryParameters,\n        headers: baseHeaders\n      }\n    };\n    return responsesCache.get(\n      key,\n      () => {\n        return requestsCache.get(\n          key,\n          () => (\n            /**\n             * Finally, if there is no request in progress with the same key,\n             * this `createRetryableRequest()` will actually trigger the\n             * retryable request.\n             */\n            requestsCache.set(key, createRetryableRequest()).then(\n              (response) => Promise.all([requestsCache.delete(key), response]),\n              (err) => Promise.all([requestsCache.delete(key), Promise.reject(err)])\n            ).then(([_, response]) => response)\n          )\n        );\n      },\n      {\n        /**\n         * Of course, once we get this response back from the server, we\n         * tell response cache to actually store the received response\n         * to be used later.\n         */\n        miss: (response) => responsesCache.set(key, response)\n      }\n    );\n  }\n  return {\n    hostsCache,\n    requester,\n    timeouts,\n    logger,\n    algoliaAgent,\n    baseHeaders,\n    baseQueryParameters,\n    hosts,\n    request: createRequest,\n    requestsCache,\n    responsesCache\n  };\n}\n\n// src/types/logger.ts\nvar LogLevelEnum = {\n  Debug: 1,\n  Info: 2,\n  Error: 3\n};\n\n//# sourceMappingURL=common.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-common/dist/common.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-insights/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   insightsClient: function() { return /* binding */ insightsClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/insightsClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nvar REGIONS = [\"de\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = !region ? \"insights.algolia.io\" : \"insights.{region}.algolia.io\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createInsightsClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Insights\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes all events related to the specified user token from events metrics and analytics. The deletion is asynchronous, and processed within 48 hours. To delete a personalization user profile, see `Delete a user profile` in the Personalization API.\n     * @param deleteUserToken - The deleteUserToken object.\n     * @param deleteUserToken.userToken - User token for which to delete all associated events.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteUserToken({ userToken }, requestOptions) {\n      if (!userToken) {\n        throw new Error(\"Parameter `userToken` is required when calling `deleteUserToken`.\");\n      }\n      const requestPath = \"/1/usertokens/{userToken}\".replace(\"{userToken}\", encodeURIComponent(userToken));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Sends a list of events to the Insights API.  You can include up to 1,000 events in a single request, but the request body must be smaller than 2&nbsp;MB.\n     * @param insightsEvents - The insightsEvents object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    pushEvents(insightsEvents, requestOptions) {\n      if (!insightsEvents) {\n        throw new Error(\"Parameter `insightsEvents` is required when calling `pushEvents`.\");\n      }\n      if (!insightsEvents.events) {\n        throw new Error(\"Parameter `insightsEvents.events` is required when calling `pushEvents`.\");\n      }\n      const requestPath = \"/1/events\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: insightsEvents\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction insightsClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createInsightsClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-insights/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-personalization/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   personalizationClient: function() { return /* binding */ personalizationClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/personalizationClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nvar REGIONS = [\"eu\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = \"personalization.{region}.algolia.com\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createPersonalizationClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Personalization\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a user profile.  The response includes a date and time when the user profile can safely be considered deleted.\n     *\n     * Required API Key ACLs:\n     *  - recommendation\n     * @param deleteUserProfile - The deleteUserProfile object.\n     * @param deleteUserProfile.userToken - Unique identifier representing a user for which to fetch the personalization profile.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteUserProfile({ userToken }, requestOptions) {\n      if (!userToken) {\n        throw new Error(\"Parameter `userToken` is required when calling `deleteUserProfile`.\");\n      }\n      const requestPath = \"/1/profiles/{userToken}\".replace(\"{userToken}\", encodeURIComponent(userToken));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the current personalization strategy.\n     *\n     * Required API Key ACLs:\n     *  - recommendation\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getPersonalizationStrategy(requestOptions) {\n      const requestPath = \"/1/strategies/personalization\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a user profile and their affinities for different facets.\n     *\n     * Required API Key ACLs:\n     *  - recommendation\n     * @param getUserTokenProfile - The getUserTokenProfile object.\n     * @param getUserTokenProfile.userToken - Unique identifier representing a user for which to fetch the personalization profile.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getUserTokenProfile({ userToken }, requestOptions) {\n      if (!userToken) {\n        throw new Error(\"Parameter `userToken` is required when calling `getUserTokenProfile`.\");\n      }\n      const requestPath = \"/1/profiles/personalization/{userToken}\".replace(\n        \"{userToken}\",\n        encodeURIComponent(userToken)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new personalization strategy.\n     *\n     * Required API Key ACLs:\n     *  - recommendation\n     * @param personalizationStrategyParams - The personalizationStrategyParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    setPersonalizationStrategy(personalizationStrategyParams, requestOptions) {\n      if (!personalizationStrategyParams) {\n        throw new Error(\n          \"Parameter `personalizationStrategyParams` is required when calling `setPersonalizationStrategy`.\"\n        );\n      }\n      if (!personalizationStrategyParams.eventsScoring) {\n        throw new Error(\n          \"Parameter `personalizationStrategyParams.eventsScoring` is required when calling `setPersonalizationStrategy`.\"\n        );\n      }\n      if (!personalizationStrategyParams.facetsScoring) {\n        throw new Error(\n          \"Parameter `personalizationStrategyParams.facetsScoring` is required when calling `setPersonalizationStrategy`.\"\n        );\n      }\n      if (!personalizationStrategyParams.personalizationImpact) {\n        throw new Error(\n          \"Parameter `personalizationStrategyParams.personalizationImpact` is required when calling `setPersonalizationStrategy`.\"\n        );\n      }\n      const requestPath = \"/1/strategies/personalization\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: personalizationStrategyParams\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction personalizationClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (!region || region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` is required and must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createPersonalizationClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-personalization/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-query-suggestions/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   querySuggestionsClient: function() { return /* binding */ querySuggestionsClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/querySuggestionsClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nvar REGIONS = [\"eu\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = \"query-suggestions.{region}.algolia.com\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createQuerySuggestionsClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"QuerySuggestions\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * Creates a new Query Suggestions configuration.  You can have up to 100 configurations per Algolia application.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param configurationWithIndex - The configurationWithIndex object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createConfig(configurationWithIndex, requestOptions) {\n      if (!configurationWithIndex) {\n        throw new Error(\"Parameter `configurationWithIndex` is required when calling `createConfig`.\");\n      }\n      const requestPath = \"/1/configs\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: configurationWithIndex\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a Query Suggestions configuration.  Deleting only removes the configuration and stops updates to the Query Suggestions index. To delete the Query Suggestions index itself, use the Search API and the `Delete an index` operation.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param deleteConfig - The deleteConfig object.\n     * @param deleteConfig.indexName - Query Suggestions index name.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteConfig({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteConfig`.\");\n      }\n      const requestPath = \"/1/configs/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves all Query Suggestions configurations of your Algolia application.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getAllConfigs(requestOptions) {\n      const requestPath = \"/1/configs\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a single Query Suggestions configuration by its index name.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getConfig - The getConfig object.\n     * @param getConfig.indexName - Query Suggestions index name.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getConfig({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getConfig`.\");\n      }\n      const requestPath = \"/1/configs/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Reports the status of a Query Suggestions index.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getConfigStatus - The getConfigStatus object.\n     * @param getConfigStatus.indexName - Query Suggestions index name.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getConfigStatus({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getConfigStatus`.\");\n      }\n      const requestPath = \"/1/configs/{indexName}/status\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the logs for a single Query Suggestions index.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getLogFile - The getLogFile object.\n     * @param getLogFile.indexName - Query Suggestions index name.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getLogFile({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getLogFile`.\");\n      }\n      const requestPath = \"/1/logs/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates a QuerySuggestions configuration.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param updateConfig - The updateConfig object.\n     * @param updateConfig.indexName - Query Suggestions index name.\n     * @param updateConfig.configuration - The configuration object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateConfig({ indexName, configuration }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `updateConfig`.\");\n      }\n      if (!configuration) {\n        throw new Error(\"Parameter `configuration` is required when calling `updateConfig`.\");\n      }\n      if (!configuration.sourceIndices) {\n        throw new Error(\"Parameter `configuration.sourceIndices` is required when calling `updateConfig`.\");\n      }\n      const requestPath = \"/1/configs/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: configuration\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction querySuggestionsClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (!region || region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` is required and must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createQuerySuggestionsClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-query-suggestions/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/client-search/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   searchClient: function() { return /* binding */ searchClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/searchClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nfunction getDefaultHosts(appId) {\n  return [\n    {\n      url: `${appId}-dsn.algolia.net`,\n      accept: \"read\",\n      protocol: \"https\"\n    },\n    {\n      url: `${appId}.algolia.net`,\n      accept: \"write\",\n      protocol: \"https\"\n    }\n  ].concat(\n    (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.shuffle)([\n      {\n        url: `${appId}-1.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      },\n      {\n        url: `${appId}-2.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      },\n      {\n        url: `${appId}-3.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      }\n    ])\n  );\n}\nfunction createSearchClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(appIdOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Search\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * Helper: Wait for a task to be published (completed) for a given `indexName` and `taskID`.\n     *\n     * @summary Helper method that waits for a task to be published (completed).\n     * @param waitForTaskOptions - The `waitForTaskOptions` object.\n     * @param waitForTaskOptions.indexName - The `indexName` where the operation was performed.\n     * @param waitForTaskOptions.taskID - The `taskID` returned in the method response.\n     * @param waitForTaskOptions.maxRetries - The maximum number of retries. 50 by default.\n     * @param waitForTaskOptions.timeout - The function to decide how long to wait between retries.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `getTask` method and merged with the transporter requestOptions.\n     */\n    waitForTask({\n      indexName,\n      taskID,\n      maxRetries = 50,\n      timeout = (retryCount) => Math.min(retryCount * 200, 5e3)\n    }, requestOptions) {\n      let retryCount = 0;\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        func: () => this.getTask({ indexName, taskID }, requestOptions),\n        validate: (response) => response.status === \"published\",\n        aggregator: () => retryCount += 1,\n        error: {\n          validate: () => retryCount >= maxRetries,\n          message: () => `The maximum number of retries exceeded. (${retryCount}/${maxRetries})`\n        },\n        timeout: () => timeout(retryCount)\n      });\n    },\n    /**\n     * Helper: Wait for an application-level task to complete for a given `taskID`.\n     *\n     * @summary Helper method that waits for a task to be published (completed).\n     * @param waitForAppTaskOptions - The `waitForTaskOptions` object.\n     * @param waitForAppTaskOptions.taskID - The `taskID` returned in the method response.\n     * @param waitForAppTaskOptions.maxRetries - The maximum number of retries. 50 by default.\n     * @param waitForAppTaskOptions.timeout - The function to decide how long to wait between retries.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `getTask` method and merged with the transporter requestOptions.\n     */\n    waitForAppTask({\n      taskID,\n      maxRetries = 50,\n      timeout = (retryCount) => Math.min(retryCount * 200, 5e3)\n    }, requestOptions) {\n      let retryCount = 0;\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        func: () => this.getAppTask({ taskID }, requestOptions),\n        validate: (response) => response.status === \"published\",\n        aggregator: () => retryCount += 1,\n        error: {\n          validate: () => retryCount >= maxRetries,\n          message: () => `The maximum number of retries exceeded. (${retryCount}/${maxRetries})`\n        },\n        timeout: () => timeout(retryCount)\n      });\n    },\n    /**\n     * Helper: Wait for an API key to be added, updated or deleted based on a given `operation`.\n     *\n     * @summary Helper method that waits for an API key task to be processed.\n     * @param waitForApiKeyOptions - The `waitForApiKeyOptions` object.\n     * @param waitForApiKeyOptions.operation - The `operation` that was done on a `key`.\n     * @param waitForApiKeyOptions.key - The `key` that has been added, deleted or updated.\n     * @param waitForApiKeyOptions.apiKey - Necessary to know if an `update` operation has been processed, compare fields of the response with it.\n     * @param waitForApiKeyOptions.maxRetries - The maximum number of retries. 50 by default.\n     * @param waitForApiKeyOptions.timeout - The function to decide how long to wait between retries.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `getApikey` method and merged with the transporter requestOptions.\n     */\n    waitForApiKey({\n      operation,\n      key,\n      apiKey,\n      maxRetries = 50,\n      timeout = (retryCount) => Math.min(retryCount * 200, 5e3)\n    }, requestOptions) {\n      let retryCount = 0;\n      const baseIteratorOptions = {\n        aggregator: () => retryCount += 1,\n        error: {\n          validate: () => retryCount >= maxRetries,\n          message: () => `The maximum number of retries exceeded. (${retryCount}/${maxRetries})`\n        },\n        timeout: () => timeout(retryCount)\n      };\n      if (operation === \"update\") {\n        if (!apiKey) {\n          throw new Error(\"`apiKey` is required when waiting for an `update` operation.\");\n        }\n        return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n          ...baseIteratorOptions,\n          func: () => this.getApiKey({ key }, requestOptions),\n          validate: (response) => {\n            for (const field of Object.keys(apiKey)) {\n              const value = apiKey[field];\n              const resValue = response[field];\n              if (Array.isArray(value) && Array.isArray(resValue)) {\n                if (value.length !== resValue.length || value.some((v, index) => v !== resValue[index])) {\n                  return false;\n                }\n              } else if (value !== resValue) {\n                return false;\n              }\n            }\n            return true;\n          }\n        });\n      }\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        ...baseIteratorOptions,\n        func: () => this.getApiKey({ key }, requestOptions).catch((error) => {\n          if (error.status === 404) {\n            return void 0;\n          }\n          throw error;\n        }),\n        validate: (response) => operation === \"add\" ? response !== void 0 : response === void 0\n      });\n    },\n    /**\n     * Helper: Iterate on the `browse` method of the client to allow aggregating objects of an index.\n     *\n     * @summary Helper method that iterates on the `browse` method.\n     * @param browseObjects - The `browseObjects` object.\n     * @param browseObjects.indexName - The index in which to perform the request.\n     * @param browseObjects.browseParams - The `browse` parameters.\n     * @param browseObjects.validate - The validator function. It receive the resolved return of the API call. By default, stops when there is no `cursor` in the response.\n     * @param browseObjects.aggregator - The function that runs right after the API call has been resolved, allows you to do anything with the response before `validate`.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `browse` method and merged with the transporter requestOptions.\n     */\n    browseObjects({ indexName, browseParams, ...browseObjectsOptions }, requestOptions) {\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        func: (previousResponse) => {\n          return this.browse(\n            {\n              indexName,\n              browseParams: {\n                cursor: previousResponse ? previousResponse.cursor : void 0,\n                hitsPerPage: 1e3,\n                ...browseParams\n              }\n            },\n            requestOptions\n          );\n        },\n        validate: (response) => response.cursor === void 0,\n        ...browseObjectsOptions\n      });\n    },\n    /**\n     * Helper: Iterate on the `searchRules` method of the client to allow aggregating rules of an index.\n     *\n     * @summary Helper method that iterates on the `searchRules` method.\n     * @param browseRules - The `browseRules` object.\n     * @param browseRules.indexName - The index in which to perform the request.\n     * @param browseRules.searchRulesParams - The `searchRules` method parameters.\n     * @param browseRules.validate - The validator function. It receive the resolved return of the API call. By default, stops when there is less hits returned than the number of maximum hits (1000).\n     * @param browseRules.aggregator - The function that runs right after the API call has been resolved, allows you to do anything with the response before `validate`.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `searchRules` method and merged with the transporter requestOptions.\n     */\n    browseRules({ indexName, searchRulesParams, ...browseRulesOptions }, requestOptions) {\n      const params = {\n        hitsPerPage: 1e3,\n        ...searchRulesParams\n      };\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        func: (previousResponse) => {\n          return this.searchRules(\n            {\n              indexName,\n              searchRulesParams: {\n                ...params,\n                page: previousResponse ? previousResponse.page + 1 : params.page || 0\n              }\n            },\n            requestOptions\n          );\n        },\n        validate: (response) => response.hits.length < params.hitsPerPage,\n        ...browseRulesOptions\n      });\n    },\n    /**\n     * Helper: Iterate on the `searchSynonyms` method of the client to allow aggregating rules of an index.\n     *\n     * @summary Helper method that iterates on the `searchSynonyms` method.\n     * @param browseSynonyms - The `browseSynonyms` object.\n     * @param browseSynonyms.indexName - The index in which to perform the request.\n     * @param browseSynonyms.validate - The validator function. It receive the resolved return of the API call. By default, stops when there is less hits returned than the number of maximum hits (1000).\n     * @param browseSynonyms.aggregator - The function that runs right after the API call has been resolved, allows you to do anything with the response before `validate`.\n     * @param browseSynonyms.searchSynonymsParams - The `searchSynonyms` method parameters.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `searchSynonyms` method and merged with the transporter requestOptions.\n     */\n    browseSynonyms({\n      indexName,\n      searchSynonymsParams,\n      ...browseSynonymsOptions\n    }, requestOptions) {\n      const params = {\n        page: 0,\n        ...searchSynonymsParams,\n        hitsPerPage: 1e3\n      };\n      return (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createIterablePromise)({\n        func: (_) => {\n          const resp = this.searchSynonyms(\n            {\n              indexName,\n              searchSynonymsParams: {\n                ...params,\n                page: params.page\n              }\n            },\n            requestOptions\n          );\n          params.page += 1;\n          return resp;\n        },\n        validate: (response) => response.hits.length < params.hitsPerPage,\n        ...browseSynonymsOptions\n      });\n    },\n    /**\n     * Helper: Chunks the given `objects` list in subset of 1000 elements max in order to make it fit in `batch` requests.\n     *\n     * @summary Helper: Chunks the given `objects` list in subset of 1000 elements max in order to make it fit in `batch` requests.\n     * @param chunkedBatch - The `chunkedBatch` object.\n     * @param chunkedBatch.indexName - The `indexName` to replace `objects` in.\n     * @param chunkedBatch.objects - The array of `objects` to store in the given Algolia `indexName`.\n     * @param chunkedBatch.action - The `batch` `action` to perform on the given array of `objects`, defaults to `addObject`.\n     * @param chunkedBatch.waitForTasks - Whether or not we should wait until every `batch` tasks has been processed, this operation may slow the total execution time of this method but is more reliable.\n     * @param chunkedBatch.batchSize - The size of the chunk of `objects`. The number of `batch` calls will be equal to `length(objects) / batchSize`. Defaults to 1000.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `getTask` method and merged with the transporter requestOptions.\n     */\n    async chunkedBatch({ indexName, objects, action = \"addObject\", waitForTasks, batchSize = 1e3 }, requestOptions) {\n      let requests = [];\n      const responses = [];\n      const objectEntries = objects.entries();\n      for (const [i, obj] of objectEntries) {\n        requests.push({ action, body: obj });\n        if (requests.length === batchSize || i === objects.length - 1) {\n          responses.push(await this.batch({ indexName, batchWriteParams: { requests } }, requestOptions));\n          requests = [];\n        }\n      }\n      if (waitForTasks) {\n        for (const resp of responses) {\n          await this.waitForTask({ indexName, taskID: resp.taskID });\n        }\n      }\n      return responses;\n    },\n    /**\n     * Helper: Saves the given array of objects in the given index. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objects in it.\n     *\n     * @summary Helper: Saves the given array of objects in the given index. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objects in it.\n     * @param saveObjects - The `saveObjects` object.\n     * @param saveObjects.indexName - The `indexName` to save `objects` in.\n     * @param saveObjects.objects - The array of `objects` to store in the given Algolia `indexName`.\n     * @param chunkedBatch.batchSize - The size of the chunk of `objects`. The number of `batch` calls will be equal to `length(objects) / batchSize`. Defaults to 1000.\n     * @param saveObjects.waitForTasks - Whether or not we should wait until every `batch` tasks has been processed, this operation may slow the total execution time of this method but is more reliable.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `batch` method and merged with the transporter requestOptions.\n     */\n    async saveObjects({ indexName, objects, waitForTasks, batchSize }, requestOptions) {\n      return await this.chunkedBatch(\n        { indexName, objects, action: \"addObject\", waitForTasks, batchSize },\n        requestOptions\n      );\n    },\n    /**\n     * Helper: Deletes every records for the given objectIDs. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objectIDs in it.\n     *\n     * @summary Helper: Deletes every records for the given objectIDs. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objectIDs in it.\n     * @param deleteObjects - The `deleteObjects` object.\n     * @param deleteObjects.indexName - The `indexName` to delete `objectIDs` from.\n     * @param deleteObjects.objectIDs - The objectIDs to delete.\n     * @param chunkedBatch.batchSize - The size of the chunk of `objects`. The number of `batch` calls will be equal to `length(objects) / batchSize`. Defaults to 1000.\n     * @param deleteObjects.waitForTasks - Whether or not we should wait until every `batch` tasks has been processed, this operation may slow the total execution time of this method but is more reliable.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `batch` method and merged with the transporter requestOptions.\n     */\n    async deleteObjects({ indexName, objectIDs, waitForTasks, batchSize }, requestOptions) {\n      return await this.chunkedBatch(\n        {\n          indexName,\n          objects: objectIDs.map((objectID) => ({ objectID })),\n          action: \"deleteObject\",\n          waitForTasks,\n          batchSize\n        },\n        requestOptions\n      );\n    },\n    /**\n     * Helper: Replaces object content of all the given objects according to their respective `objectID` field. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objects in it.\n     *\n     * @summary Helper: Replaces object content of all the given objects according to their respective `objectID` field. The `chunkedBatch` helper is used under the hood, which creates a `batch` requests with at most 1000 objects in it.\n     * @param partialUpdateObjects - The `partialUpdateObjects` object.\n     * @param partialUpdateObjects.indexName - The `indexName` to update `objects` in.\n     * @param partialUpdateObjects.objects - The array of `objects` to update in the given Algolia `indexName`.\n     * @param partialUpdateObjects.createIfNotExists - To be provided if non-existing objects are passed, otherwise, the call will fail..\n     * @param chunkedBatch.batchSize - The size of the chunk of `objects`. The number of `batch` calls will be equal to `length(objects) / batchSize`. Defaults to 1000.\n     * @param partialUpdateObjects.waitForTasks - Whether or not we should wait until every `batch` tasks has been processed, this operation may slow the total execution time of this method but is more reliable.\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `getTask` method and merged with the transporter requestOptions.\n     */\n    async partialUpdateObjects({ indexName, objects, createIfNotExists, waitForTasks, batchSize }, requestOptions) {\n      return await this.chunkedBatch(\n        {\n          indexName,\n          objects,\n          action: createIfNotExists ? \"partialUpdateObject\" : \"partialUpdateObjectNoCreate\",\n          batchSize,\n          waitForTasks\n        },\n        requestOptions\n      );\n    },\n    /**\n     * Helper: Replaces all objects (records) in the given `index_name` with the given `objects`. A temporary index is created during this process in order to backup your data.\n     * See https://api-clients-automation.netlify.app/docs/add-new-api-client#5-helpers for implementation details.\n     *\n     * @summary Helper: Replaces all objects (records) in the given `index_name` with the given `objects`. A temporary index is created during this process in order to backup your data.\n     * @param replaceAllObjects - The `replaceAllObjects` object.\n     * @param replaceAllObjects.indexName - The `indexName` to replace `objects` in.\n     * @param replaceAllObjects.objects - The array of `objects` to store in the given Algolia `indexName`.\n     * @param replaceAllObjects.batchSize - The size of the chunk of `objects`. The number of `batch` calls will be equal to `objects.length / batchSize`. Defaults to 1000.\n     * @param replaceAllObjects.scopes - The `scopes` to keep from the index. Defaults to ['settings', 'rules', 'synonyms'].\n     * @param requestOptions - The requestOptions to send along with the query, they will be forwarded to the `batch`, `operationIndex` and `getTask` method and merged with the transporter requestOptions.\n     */\n    async replaceAllObjects({ indexName, objects, batchSize, scopes }, requestOptions) {\n      const randomSuffix = Math.floor(Math.random() * 1e6) + 1e5;\n      const tmpIndexName = `${indexName}_tmp_${randomSuffix}`;\n      if (scopes === void 0) {\n        scopes = [\"settings\", \"rules\", \"synonyms\"];\n      }\n      try {\n        let copyOperationResponse = await this.operationIndex(\n          {\n            indexName,\n            operationIndexParams: {\n              operation: \"copy\",\n              destination: tmpIndexName,\n              scope: scopes\n            }\n          },\n          requestOptions\n        );\n        const batchResponses = await this.chunkedBatch(\n          { indexName: tmpIndexName, objects, waitForTasks: true, batchSize },\n          requestOptions\n        );\n        await this.waitForTask({\n          indexName: tmpIndexName,\n          taskID: copyOperationResponse.taskID\n        });\n        copyOperationResponse = await this.operationIndex(\n          {\n            indexName,\n            operationIndexParams: {\n              operation: \"copy\",\n              destination: tmpIndexName,\n              scope: scopes\n            }\n          },\n          requestOptions\n        );\n        await this.waitForTask({\n          indexName: tmpIndexName,\n          taskID: copyOperationResponse.taskID\n        });\n        const moveOperationResponse = await this.operationIndex(\n          {\n            indexName: tmpIndexName,\n            operationIndexParams: { operation: \"move\", destination: indexName }\n          },\n          requestOptions\n        );\n        await this.waitForTask({\n          indexName: tmpIndexName,\n          taskID: moveOperationResponse.taskID\n        });\n        return { copyOperationResponse, batchResponses, moveOperationResponse };\n      } catch (error) {\n        await this.deleteIndex({ indexName: tmpIndexName });\n        throw error;\n      }\n    },\n    async indexExists({ indexName }) {\n      try {\n        await this.getSettings({ indexName });\n      } catch (error) {\n        if (error instanceof _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.ApiError && error.status === 404) {\n          return false;\n        }\n        throw error;\n      }\n      return true;\n    },\n    /**\n     * Helper: calls the `search` method but with certainty that we will only request Algolia records (hits) and not facets.\n     * Disclaimer: We don't assert that the parameters you pass to this method only contains `hits` requests to prevent impacting search performances, this helper is purely for typing purposes.\n     *\n     * @summary Search multiple indices for `hits`.\n     * @param searchMethodParams - Query requests and strategies. Results will be received in the same order as the queries.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchForHits(searchMethodParams, requestOptions) {\n      return this.search(searchMethodParams, requestOptions);\n    },\n    /**\n     * Helper: calls the `search` method but with certainty that we will only request Algolia facets and not records (hits).\n     * Disclaimer: We don't assert that the parameters you pass to this method only contains `facets` requests to prevent impacting search performances, this helper is purely for typing purposes.\n     *\n     * @summary Search multiple indices for `facets`.\n     * @param searchMethodParams - Query requests and strategies. Results will be received in the same order as the queries.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchForFacets(searchMethodParams, requestOptions) {\n      return this.search(searchMethodParams, requestOptions);\n    },\n    /**\n     * Creates a new API key with specific permissions and restrictions.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param apiKey - The apiKey object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    addApiKey(apiKey, requestOptions) {\n      if (!apiKey) {\n        throw new Error(\"Parameter `apiKey` is required when calling `addApiKey`.\");\n      }\n      if (!apiKey.acl) {\n        throw new Error(\"Parameter `apiKey.acl` is required when calling `addApiKey`.\");\n      }\n      const requestPath = \"/1/keys\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: apiKey\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * If a record with the specified object ID exists, the existing record is replaced. Otherwise, a new record is added to the index.  If you want to use auto-generated object IDs, use the [`saveObject` operation](#tag/Records/operation/saveObject). To update _some_ attributes of an existing record, use the [`partial` operation](#tag/Records/operation/partialUpdateObject) instead. To add, update, or replace multiple records, use the [`batch` operation](#tag/Records/operation/batch).\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     * @param addOrUpdateObject - The addOrUpdateObject object.\n     * @param addOrUpdateObject.indexName - Name of the index on which to perform the operation.\n     * @param addOrUpdateObject.objectID - Unique record identifier.\n     * @param addOrUpdateObject.body - The record. A schemaless object with attributes that are useful in the context of search and discovery.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    addOrUpdateObject({ indexName, objectID, body }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `addOrUpdateObject`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `addOrUpdateObject`.\");\n      }\n      if (!body) {\n        throw new Error(\"Parameter `body` is required when calling `addOrUpdateObject`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds a source to the list of allowed sources.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param source - Source to add.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    appendSource(source, requestOptions) {\n      if (!source) {\n        throw new Error(\"Parameter `source` is required when calling `appendSource`.\");\n      }\n      if (!source.source) {\n        throw new Error(\"Parameter `source.source` is required when calling `appendSource`.\");\n      }\n      const requestPath = \"/1/security/sources/append\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: source\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Assigns or moves a user ID to a cluster.  The time it takes to move a user is proportional to the amount of data linked to the user ID.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param assignUserId - The assignUserId object.\n     * @param assignUserId.xAlgoliaUserID - Unique identifier of the user who makes the search request.\n     * @param assignUserId.assignUserIdParams - The assignUserIdParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    assignUserId({ xAlgoliaUserID, assignUserIdParams }, requestOptions) {\n      if (!xAlgoliaUserID) {\n        throw new Error(\"Parameter `xAlgoliaUserID` is required when calling `assignUserId`.\");\n      }\n      if (!assignUserIdParams) {\n        throw new Error(\"Parameter `assignUserIdParams` is required when calling `assignUserId`.\");\n      }\n      if (!assignUserIdParams.cluster) {\n        throw new Error(\"Parameter `assignUserIdParams.cluster` is required when calling `assignUserId`.\");\n      }\n      const requestPath = \"/1/clusters/mapping\";\n      const headers = {};\n      const queryParameters = {};\n      if (xAlgoliaUserID !== void 0) {\n        headers[\"X-Algolia-User-ID\"] = xAlgoliaUserID.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: assignUserIdParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds, updates, or deletes records in one index with a single API request.  Batching index updates reduces latency and increases data integrity.  - Actions are applied in the order they\\'re specified. - Actions are equivalent to the individual API requests of the same name.  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     * @param batch - The batch object.\n     * @param batch.indexName - Name of the index on which to perform the operation.\n     * @param batch.batchWriteParams - The batchWriteParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    batch({ indexName, batchWriteParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `batch`.\");\n      }\n      if (!batchWriteParams) {\n        throw new Error(\"Parameter `batchWriteParams` is required when calling `batch`.\");\n      }\n      if (!batchWriteParams.requests) {\n        throw new Error(\"Parameter `batchWriteParams.requests` is required when calling `batch`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/batch\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: batchWriteParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Assigns multiple user IDs to a cluster.  **You can\\'t move users with this operation**.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param batchAssignUserIds - The batchAssignUserIds object.\n     * @param batchAssignUserIds.xAlgoliaUserID - Unique identifier of the user who makes the search request.\n     * @param batchAssignUserIds.batchAssignUserIdsParams - The batchAssignUserIdsParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    batchAssignUserIds({ xAlgoliaUserID, batchAssignUserIdsParams }, requestOptions) {\n      if (!xAlgoliaUserID) {\n        throw new Error(\"Parameter `xAlgoliaUserID` is required when calling `batchAssignUserIds`.\");\n      }\n      if (!batchAssignUserIdsParams) {\n        throw new Error(\"Parameter `batchAssignUserIdsParams` is required when calling `batchAssignUserIds`.\");\n      }\n      if (!batchAssignUserIdsParams.cluster) {\n        throw new Error(\"Parameter `batchAssignUserIdsParams.cluster` is required when calling `batchAssignUserIds`.\");\n      }\n      if (!batchAssignUserIdsParams.users) {\n        throw new Error(\"Parameter `batchAssignUserIdsParams.users` is required when calling `batchAssignUserIds`.\");\n      }\n      const requestPath = \"/1/clusters/mapping/batch\";\n      const headers = {};\n      const queryParameters = {};\n      if (xAlgoliaUserID !== void 0) {\n        headers[\"X-Algolia-User-ID\"] = xAlgoliaUserID.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: batchAssignUserIdsParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds or deletes multiple entries from your plurals, segmentation, or stop word dictionaries.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param batchDictionaryEntries - The batchDictionaryEntries object.\n     * @param batchDictionaryEntries.dictionaryName - Dictionary type in which to search.\n     * @param batchDictionaryEntries.batchDictionaryEntriesParams - The batchDictionaryEntriesParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    batchDictionaryEntries({ dictionaryName, batchDictionaryEntriesParams }, requestOptions) {\n      if (!dictionaryName) {\n        throw new Error(\"Parameter `dictionaryName` is required when calling `batchDictionaryEntries`.\");\n      }\n      if (!batchDictionaryEntriesParams) {\n        throw new Error(\"Parameter `batchDictionaryEntriesParams` is required when calling `batchDictionaryEntries`.\");\n      }\n      if (!batchDictionaryEntriesParams.requests) {\n        throw new Error(\n          \"Parameter `batchDictionaryEntriesParams.requests` is required when calling `batchDictionaryEntries`.\"\n        );\n      }\n      const requestPath = \"/1/dictionaries/{dictionaryName}/batch\".replace(\n        \"{dictionaryName}\",\n        encodeURIComponent(dictionaryName)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: batchDictionaryEntriesParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves records from an index, up to 1,000 per request.  While searching retrieves _hits_ (records augmented with attributes for highlighting and ranking details), browsing _just_ returns matching records. This can be useful if you want to export your indices.  - The Analytics API doesn\\'t collect data when using `browse`. - Records are ranked by attributes and custom ranking. - There\\'s no ranking for: typo-tolerance, number of matched words, proximity, geo distance.  Browse requests automatically apply these settings:  - `advancedSyntax`: `false` - `attributesToHighlight`: `[]` - `attributesToSnippet`: `[]` - `distinct`: `false` - `enablePersonalization`: `false` - `enableRules`: `false` - `facets`: `[]` - `getRankingInfo`: `false` - `ignorePlurals`: `false` - `optionalFilters`: `[]` - `typoTolerance`: `true` or `false` (`min` and `strict` evaluate to `true`)  If you send these parameters with your browse requests, they\\'ll be ignored.\n     *\n     * Required API Key ACLs:\n     *  - browse\n     * @param browse - The browse object.\n     * @param browse.indexName - Name of the index on which to perform the operation.\n     * @param browse.browseParams - The browseParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    browse({ indexName, browseParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `browse`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/browse\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: browseParams ? browseParams : {},\n        useReadTransporter: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes only the records from an index while keeping settings, synonyms, and rules. This operation is resource-intensive and subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - deleteIndex\n     * @param clearObjects - The clearObjects object.\n     * @param clearObjects.indexName - Name of the index on which to perform the operation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    clearObjects({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `clearObjects`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/clear\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes all rules from the index.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param clearRules - The clearRules object.\n     * @param clearRules.indexName - Name of the index on which to perform the operation.\n     * @param clearRules.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    clearRules({ indexName, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `clearRules`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/clear\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes all synonyms from the index.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param clearSynonyms - The clearSynonyms object.\n     * @param clearSynonyms.indexName - Name of the index on which to perform the operation.\n     * @param clearSynonyms.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    clearSynonyms({ indexName, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `clearSynonyms`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/clear\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes the API key.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param deleteApiKey - The deleteApiKey object.\n     * @param deleteApiKey.key - API key.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteApiKey({ key }, requestOptions) {\n      if (!key) {\n        throw new Error(\"Parameter `key` is required when calling `deleteApiKey`.\");\n      }\n      const requestPath = \"/1/keys/{key}\".replace(\"{key}\", encodeURIComponent(key));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This operation doesn\\'t accept empty filters.  This operation is resource-intensive. You should only use it if you can\\'t get the object IDs of the records you want to delete. It\\'s more efficient to get a list of object IDs with the [`browse` operation](#tag/Search/operation/browse), and then delete the records using the [`batch` operation](#tag/Records/operation/batch).  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - deleteIndex\n     * @param deleteBy - The deleteBy object.\n     * @param deleteBy.indexName - Name of the index on which to perform the operation.\n     * @param deleteBy.deleteByParams - The deleteByParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteBy({ indexName, deleteByParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteBy`.\");\n      }\n      if (!deleteByParams) {\n        throw new Error(\"Parameter `deleteByParams` is required when calling `deleteBy`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/deleteByQuery\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: deleteByParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes an index and all its settings.  - Deleting an index doesn\\'t delete its analytics data. - If you try to delete a non-existing index, the operation is ignored without warning. - If the index you want to delete has replica indices, the replicas become independent indices. - If the index you want to delete is a replica index, you must first unlink it from its primary index before you can delete it.   For more information, see [Delete replica indices](https://www.algolia.com/doc/guides/managing-results/refine-results/sorting/how-to/deleting-replicas/).\n     *\n     * Required API Key ACLs:\n     *  - deleteIndex\n     * @param deleteIndex - The deleteIndex object.\n     * @param deleteIndex.indexName - Name of the index on which to perform the operation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteIndex({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteIndex`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a record by its object ID.  To delete more than one record, use the [`batch` operation](#tag/Records/operation/batch). To delete records matching a query, use the [`deleteByQuery` operation](#tag/Records/operation/deleteBy).\n     *\n     * Required API Key ACLs:\n     *  - deleteObject\n     * @param deleteObject - The deleteObject object.\n     * @param deleteObject.indexName - Name of the index on which to perform the operation.\n     * @param deleteObject.objectID - Unique record identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteObject({ indexName, objectID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteObject`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `deleteObject`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a rule by its ID. To find the object ID for rules, use the [`search` operation](#tag/Rules/operation/searchRules).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param deleteRule - The deleteRule object.\n     * @param deleteRule.indexName - Name of the index on which to perform the operation.\n     * @param deleteRule.objectID - Unique identifier of a rule object.\n     * @param deleteRule.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteRule({ indexName, objectID, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteRule`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `deleteRule`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a source from the list of allowed sources.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param deleteSource - The deleteSource object.\n     * @param deleteSource.source - IP address range of the source.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteSource({ source }, requestOptions) {\n      if (!source) {\n        throw new Error(\"Parameter `source` is required when calling `deleteSource`.\");\n      }\n      const requestPath = \"/1/security/sources/{source}\".replace(\"{source}\", encodeURIComponent(source));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a synonym by its ID. To find the object IDs of your synonyms, use the [`search` operation](#tag/Synonyms/operation/searchSynonyms).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param deleteSynonym - The deleteSynonym object.\n     * @param deleteSynonym.indexName - Name of the index on which to perform the operation.\n     * @param deleteSynonym.objectID - Unique identifier of a synonym object.\n     * @param deleteSynonym.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteSynonym({ indexName, objectID, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteSynonym`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `deleteSynonym`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Gets the permissions and restrictions of an API key.  When authenticating with the admin API key, you can request information for any of your application\\'s keys. When authenticating with other API keys, you can only retrieve information for that key, with the description replaced by `<redacted>`.\n     * @param getApiKey - The getApiKey object.\n     * @param getApiKey.key - API key.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getApiKey({ key }, requestOptions) {\n      if (!key) {\n        throw new Error(\"Parameter `key` is required when calling `getApiKey`.\");\n      }\n      const requestPath = \"/1/keys/{key}\".replace(\"{key}\", encodeURIComponent(key));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Checks the status of a given application task.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param getAppTask - The getAppTask object.\n     * @param getAppTask.taskID - Unique task identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getAppTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `getAppTask`.\");\n      }\n      const requestPath = \"/1/task/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists supported languages with their supported dictionary types and number of custom entries.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getDictionaryLanguages(requestOptions) {\n      const requestPath = \"/1/dictionaries/*/languages\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the languages for which standard dictionary entries are turned off.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getDictionarySettings(requestOptions) {\n      const requestPath = \"/1/dictionaries/*/settings\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * The request must be authenticated by an API key with the [`logs` ACL](https://www.algolia.com/doc/guides/security/api-keys/#access-control-list-acl).  - Logs are held for the last seven days. - Up to 1,000 API requests per server are logged. - This request counts towards your [operations quota](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-) but doesn\\'t appear in the logs itself.\n     *\n     * Required API Key ACLs:\n     *  - logs\n     * @param getLogs - The getLogs object.\n     * @param getLogs.offset - First log entry to retrieve. The most recent entries are listed first.\n     * @param getLogs.length - Maximum number of entries to retrieve.\n     * @param getLogs.indexName - Index for which to retrieve log entries. By default, log entries are retrieved for all indices.\n     * @param getLogs.type - Type of log entries to retrieve. By default, all log entries are retrieved.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getLogs({ offset, length, indexName, type } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/logs\";\n      const headers = {};\n      const queryParameters = {};\n      if (offset !== void 0) {\n        queryParameters[\"offset\"] = offset.toString();\n      }\n      if (length !== void 0) {\n        queryParameters[\"length\"] = length.toString();\n      }\n      if (indexName !== void 0) {\n        queryParameters[\"indexName\"] = indexName.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves one record by its object ID.  To retrieve more than one record, use the [`objects` operation](#tag/Records/operation/getObjects).\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param getObject - The getObject object.\n     * @param getObject.indexName - Name of the index on which to perform the operation.\n     * @param getObject.objectID - Unique record identifier.\n     * @param getObject.attributesToRetrieve - Attributes to include with the records in the response. This is useful to reduce the size of the API response. By default, all retrievable attributes are returned.  `objectID` is always retrieved.  Attributes included in `unretrievableAttributes` won\\'t be retrieved unless the request is authenticated with the admin API key.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getObject({ indexName, objectID, attributesToRetrieve }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getObject`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `getObject`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (attributesToRetrieve !== void 0) {\n        queryParameters[\"attributesToRetrieve\"] = attributesToRetrieve.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves one or more records, potentially from different indices.  Records are returned in the same order as the requests.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param getObjectsParams - Request object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getObjects(getObjectsParams, requestOptions) {\n      if (!getObjectsParams) {\n        throw new Error(\"Parameter `getObjectsParams` is required when calling `getObjects`.\");\n      }\n      if (!getObjectsParams.requests) {\n        throw new Error(\"Parameter `getObjectsParams.requests` is required when calling `getObjects`.\");\n      }\n      const requestPath = \"/1/indexes/*/objects\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: getObjectsParams,\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a rule by its ID. To find the object ID of rules, use the [`search` operation](#tag/Rules/operation/searchRules).\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getRule - The getRule object.\n     * @param getRule.indexName - Name of the index on which to perform the operation.\n     * @param getRule.objectID - Unique identifier of a rule object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRule({ indexName, objectID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getRule`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `getRule`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves an object with non-null index settings.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param getSettings - The getSettings object.\n     * @param getSettings.indexName - Name of the index on which to perform the operation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSettings({ indexName }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getSettings`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/settings\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves all allowed IP addresses with access to your application.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSources(requestOptions) {\n      const requestPath = \"/1/security/sources\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a synonym by its ID. To find the object IDs for your synonyms, use the [`search` operation](#tag/Synonyms/operation/searchSynonyms).\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getSynonym - The getSynonym object.\n     * @param getSynonym.indexName - Name of the index on which to perform the operation.\n     * @param getSynonym.objectID - Unique identifier of a synonym object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSynonym({ indexName, objectID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getSynonym`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `getSynonym`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Checks the status of a given task.  Indexing tasks are asynchronous. When you add, update, or delete records or indices, a task is created on a queue and completed depending on the load on the server.  The indexing tasks\\' responses include a task ID that you can use to check the status.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     * @param getTask - The getTask object.\n     * @param getTask.indexName - Name of the index on which to perform the operation.\n     * @param getTask.taskID - Unique task identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTask({ indexName, taskID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getTask`.\");\n      }\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `getTask`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/task/{taskID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Get the IDs of the 10 users with the highest number of records per cluster.  Since it can take a few seconds to get the data from the different clusters, the response isn\\'t real-time.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTopUserIds(requestOptions) {\n      const requestPath = \"/1/clusters/mapping/top\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Returns the user ID data stored in the mapping.  Since it can take a few seconds to get the data from the different clusters, the response isn\\'t real-time.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param getUserId - The getUserId object.\n     * @param getUserId.userID - Unique identifier of the user who makes the search request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getUserId({ userID }, requestOptions) {\n      if (!userID) {\n        throw new Error(\"Parameter `userID` is required when calling `getUserId`.\");\n      }\n      const requestPath = \"/1/clusters/mapping/{userID}\".replace(\"{userID}\", encodeURIComponent(userID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * To determine when the time-consuming process of creating a large batch of users or migrating users from one cluster to another is complete, this operation retrieves the status of the process.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param hasPendingMappings - The hasPendingMappings object.\n     * @param hasPendingMappings.getClusters - Whether to include the cluster\\'s pending mapping state in the response.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    hasPendingMappings({ getClusters } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/clusters/mapping/pending\";\n      const headers = {};\n      const queryParameters = {};\n      if (getClusters !== void 0) {\n        queryParameters[\"getClusters\"] = getClusters.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists all API keys associated with your Algolia application, including their permissions and restrictions.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listApiKeys(requestOptions) {\n      const requestPath = \"/1/keys\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists the available clusters in a multi-cluster setup.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listClusters(requestOptions) {\n      const requestPath = \"/1/clusters\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists all indices in the current Algolia application.  The request follows any index restrictions of the API key you use to make the request.\n     *\n     * Required API Key ACLs:\n     *  - listIndexes\n     * @param listIndices - The listIndices object.\n     * @param listIndices.page - Requested page of the API response. If `null`, the API response is not paginated.\n     * @param listIndices.hitsPerPage - Number of hits per page.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listIndices({ page, hitsPerPage } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/indexes\";\n      const headers = {};\n      const queryParameters = {};\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (hitsPerPage !== void 0) {\n        queryParameters[\"hitsPerPage\"] = hitsPerPage.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Lists the userIDs assigned to a multi-cluster application.  Since it can take a few seconds to get the data from the different clusters, the response isn\\'t real-time.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param listUserIds - The listUserIds object.\n     * @param listUserIds.page - Requested page of the API response. If `null`, the API response is not paginated.\n     * @param listUserIds.hitsPerPage - Number of hits per page.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listUserIds({ page, hitsPerPage } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/clusters/mapping\";\n      const headers = {};\n      const queryParameters = {};\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (hitsPerPage !== void 0) {\n        queryParameters[\"hitsPerPage\"] = hitsPerPage.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds, updates, or deletes records in multiple indices with a single API request.  - Actions are applied in the order they are specified. - Actions are equivalent to the individual API requests of the same name.  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     * @param batchParams - The batchParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    multipleBatch(batchParams, requestOptions) {\n      if (!batchParams) {\n        throw new Error(\"Parameter `batchParams` is required when calling `multipleBatch`.\");\n      }\n      if (!batchParams.requests) {\n        throw new Error(\"Parameter `batchParams.requests` is required when calling `multipleBatch`.\");\n      }\n      const requestPath = \"/1/indexes/*/batch\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: batchParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Copies or moves (renames) an index within the same Algolia application.  - Existing destination indices are overwritten, except for their analytics data. - If the destination index doesn\\'t exist yet, it\\'ll be created. - This operation is resource-intensive.  **Copy**  - Copying a source index that doesn\\'t exist creates a new index with 0 records and default settings. - The API keys of the source index are merged with the existing keys in the destination index. - You can\\'t copy the `enableReRanking`, `mode`, and `replicas` settings. - You can\\'t copy to a destination index that already has replicas. - Be aware of the [size limits](https://www.algolia.com/doc/guides/scaling/algolia-service-limits/#application-record-and-index-limits). - Related guide: [Copy indices](https://www.algolia.com/doc/guides/sending-and-managing-data/manage-indices-and-apps/manage-indices/how-to/copy-indices/)  **Move**  - Moving a source index that doesn\\'t exist is ignored without returning an error. - When moving an index, the analytics data keeps its original name, and a new set of analytics data is started for the new name.   To access the original analytics in the dashboard, create an index with the original name. - If the destination index has replicas, moving will overwrite the existing index and copy the data to the replica indices. - Related guide: [Move indices](https://www.algolia.com/doc/guides/sending-and-managing-data/manage-indices-and-apps/manage-indices/how-to/move-indices/).  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     * @param operationIndex - The operationIndex object.\n     * @param operationIndex.indexName - Name of the index on which to perform the operation.\n     * @param operationIndex.operationIndexParams - The operationIndexParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    operationIndex({ indexName, operationIndexParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `operationIndex`.\");\n      }\n      if (!operationIndexParams) {\n        throw new Error(\"Parameter `operationIndexParams` is required when calling `operationIndex`.\");\n      }\n      if (!operationIndexParams.operation) {\n        throw new Error(\"Parameter `operationIndexParams.operation` is required when calling `operationIndex`.\");\n      }\n      if (!operationIndexParams.destination) {\n        throw new Error(\"Parameter `operationIndexParams.destination` is required when calling `operationIndex`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/operation\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: operationIndexParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds new attributes to a record, or updates existing ones.  - If a record with the specified object ID doesn\\'t exist,   a new record is added to the index **if** `createIfNotExists` is true. - If the index doesn\\'t exist yet, this method creates a new index. - You can use any first-level attribute but not nested attributes.   If you specify a nested attribute, this operation replaces its first-level ancestor.  To update an attribute without pushing the entire record, you can use these built-in operations. These operations can be helpful if you don\\'t have access to your initial data.  - Increment: increment a numeric attribute - Decrement: decrement a numeric attribute - Add: append a number or string element to an array attribute - Remove: remove all matching number or string elements from an array attribute made of numbers or strings - AddUnique: add a number or string element to an array attribute made of numbers or strings only if it\\'s not already present - IncrementFrom: increment a numeric integer attribute only if the provided value matches the current value, and otherwise ignore the whole object update. For example, if you pass an IncrementFrom value of 2 for the version attribute, but the current value of the attribute is 1, the engine ignores the update. If the object doesn\\'t exist, the engine only creates it if you pass an IncrementFrom value of 0. - IncrementSet: increment a numeric integer attribute only if the provided value is greater than the current value, and otherwise ignore the whole object update. For example, if you pass an IncrementSet value of 2 for the version attribute, and the current value of the attribute is 1, the engine updates the object. If the object doesn\\'t exist yet, the engine only creates it if you pass an IncrementSet value greater than 0.  You can specify an operation by providing an object with the attribute to update as the key and its value being an object with the following properties:  - _operation: the operation to apply on the attribute - value: the right-hand side argument to the operation, for example, increment or decrement step, value to add or remove.  When updating multiple attributes or using multiple operations targeting the same record, you should use a single partial update for faster processing.  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     * @param partialUpdateObject - The partialUpdateObject object.\n     * @param partialUpdateObject.indexName - Name of the index on which to perform the operation.\n     * @param partialUpdateObject.objectID - Unique record identifier.\n     * @param partialUpdateObject.attributesToUpdate - Attributes with their values.\n     * @param partialUpdateObject.createIfNotExists - Whether to create a new record if it doesn\\'t exist.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    partialUpdateObject({ indexName, objectID, attributesToUpdate, createIfNotExists }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `partialUpdateObject`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `partialUpdateObject`.\");\n      }\n      if (!attributesToUpdate) {\n        throw new Error(\"Parameter `attributesToUpdate` is required when calling `partialUpdateObject`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{objectID}/partial\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (createIfNotExists !== void 0) {\n        queryParameters[\"createIfNotExists\"] = createIfNotExists.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: attributesToUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a user ID and its associated data from the clusters.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param removeUserId - The removeUserId object.\n     * @param removeUserId.userID - Unique identifier of the user who makes the search request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    removeUserId({ userID }, requestOptions) {\n      if (!userID) {\n        throw new Error(\"Parameter `userID` is required when calling `removeUserId`.\");\n      }\n      const requestPath = \"/1/clusters/mapping/{userID}\".replace(\"{userID}\", encodeURIComponent(userID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Replaces the list of allowed sources.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param replaceSources - The replaceSources object.\n     * @param replaceSources.source - Allowed sources.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    replaceSources({ source }, requestOptions) {\n      if (!source) {\n        throw new Error(\"Parameter `source` is required when calling `replaceSources`.\");\n      }\n      const requestPath = \"/1/security/sources\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: source\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Restores a deleted API key.  Restoring resets the `validity` attribute to `0`.  Algolia stores up to 1,000 API keys per application. If you create more, the oldest API keys are deleted and can\\'t be restored.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param restoreApiKey - The restoreApiKey object.\n     * @param restoreApiKey.key - API key.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    restoreApiKey({ key }, requestOptions) {\n      if (!key) {\n        throw new Error(\"Parameter `key` is required when calling `restoreApiKey`.\");\n      }\n      const requestPath = \"/1/keys/{key}/restore\".replace(\"{key}\", encodeURIComponent(key));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Adds a record to an index or replaces it.  - If the record doesn\\'t have an object ID, a new record with an auto-generated object ID is added to your index. - If a record with the specified object ID exists, the existing record is replaced. - If a record with the specified object ID doesn\\'t exist, a new record is added to your index. - If you add a record to an index that doesn\\'t exist yet, a new index is created.  To update _some_ attributes of a record, use the [`partial` operation](#tag/Records/operation/partialUpdateObject). To add, update, or replace multiple records, use the [`batch` operation](#tag/Records/operation/batch).  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     * @param saveObject - The saveObject object.\n     * @param saveObject.indexName - Name of the index on which to perform the operation.\n     * @param saveObject.body - The record. A schemaless object with attributes that are useful in the context of search and discovery.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    saveObject({ indexName, body }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `saveObject`.\");\n      }\n      if (!body) {\n        throw new Error(\"Parameter `body` is required when calling `saveObject`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * If a rule with the specified object ID doesn\\'t exist, it\\'s created. Otherwise, the existing rule is replaced.  To create or update more than one rule, use the [`batch` operation](#tag/Rules/operation/saveRules).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param saveRule - The saveRule object.\n     * @param saveRule.indexName - Name of the index on which to perform the operation.\n     * @param saveRule.objectID - Unique identifier of a rule object.\n     * @param saveRule.rule - The rule object.\n     * @param saveRule.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    saveRule({ indexName, objectID, rule, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `saveRule`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `saveRule`.\");\n      }\n      if (!rule) {\n        throw new Error(\"Parameter `rule` is required when calling `saveRule`.\");\n      }\n      if (!rule.objectID) {\n        throw new Error(\"Parameter `rule.objectID` is required when calling `saveRule`.\");\n      }\n      if (!rule.consequence) {\n        throw new Error(\"Parameter `rule.consequence` is required when calling `saveRule`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: rule\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Create or update multiple rules.  If a rule with the specified object ID doesn\\'t exist, Algolia creates a new one. Otherwise, existing rules are replaced.  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param saveRules - The saveRules object.\n     * @param saveRules.indexName - Name of the index on which to perform the operation.\n     * @param saveRules.rules - The rules object.\n     * @param saveRules.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param saveRules.clearExistingRules - Whether existing rules should be deleted before adding this batch.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    saveRules({ indexName, rules, forwardToReplicas, clearExistingRules }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `saveRules`.\");\n      }\n      if (!rules) {\n        throw new Error(\"Parameter `rules` is required when calling `saveRules`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/batch\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      if (clearExistingRules !== void 0) {\n        queryParameters[\"clearExistingRules\"] = clearExistingRules.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: rules\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * If a synonym with the specified object ID doesn\\'t exist, Algolia adds a new one. Otherwise, the existing synonym is replaced. To add multiple synonyms in a single API request, use the [`batch` operation](#tag/Synonyms/operation/saveSynonyms).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param saveSynonym - The saveSynonym object.\n     * @param saveSynonym.indexName - Name of the index on which to perform the operation.\n     * @param saveSynonym.objectID - Unique identifier of a synonym object.\n     * @param saveSynonym.synonymHit - The synonymHit object.\n     * @param saveSynonym.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    saveSynonym({ indexName, objectID, synonymHit, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `saveSynonym`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `saveSynonym`.\");\n      }\n      if (!synonymHit) {\n        throw new Error(\"Parameter `synonymHit` is required when calling `saveSynonym`.\");\n      }\n      if (!synonymHit.objectID) {\n        throw new Error(\"Parameter `synonymHit.objectID` is required when calling `saveSynonym`.\");\n      }\n      if (!synonymHit.type) {\n        throw new Error(\"Parameter `synonymHit.type` is required when calling `saveSynonym`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: synonymHit\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * If a synonym with the `objectID` doesn\\'t exist, Algolia adds a new one. Otherwise, existing synonyms are replaced.  This operation is subject to [indexing rate limits](https://support.algolia.com/hc/en-us/articles/4406975251089-Is-there-a-rate-limit-for-indexing-on-Algolia).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param saveSynonyms - The saveSynonyms object.\n     * @param saveSynonyms.indexName - Name of the index on which to perform the operation.\n     * @param saveSynonyms.synonymHit - The synonymHit object.\n     * @param saveSynonyms.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param saveSynonyms.replaceExistingSynonyms - Whether to replace all synonyms in the index with the ones sent with this request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    saveSynonyms({ indexName, synonymHit, forwardToReplicas, replaceExistingSynonyms }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `saveSynonyms`.\");\n      }\n      if (!synonymHit) {\n        throw new Error(\"Parameter `synonymHit` is required when calling `saveSynonyms`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/batch\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      if (replaceExistingSynonyms !== void 0) {\n        queryParameters[\"replaceExistingSynonyms\"] = replaceExistingSynonyms.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: synonymHit\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Sends multiple search requests to one or more indices.  This can be useful in these cases:  - Different indices for different purposes, such as, one index for products, another one for marketing content. - Multiple searches to the same index—for example, with different filters.  Use the helper `searchForHits` or `searchForFacets` to get the results in a more convenient format, if you already know the return type you want.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param searchMethodParams - Muli-search request body. Results are returned in the same order as the requests.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    search(searchMethodParams, requestOptions) {\n      if (searchMethodParams && Array.isArray(searchMethodParams)) {\n        const newSignatureRequest = {\n          requests: searchMethodParams.map(({ params, ...legacyRequest }) => {\n            if (legacyRequest.type === \"facet\") {\n              return {\n                ...legacyRequest,\n                ...params,\n                type: \"facet\"\n              };\n            }\n            return {\n              ...legacyRequest,\n              ...params,\n              facet: void 0,\n              maxFacetHits: void 0,\n              facetQuery: void 0\n            };\n          })\n        };\n        searchMethodParams = newSignatureRequest;\n      }\n      if (!searchMethodParams) {\n        throw new Error(\"Parameter `searchMethodParams` is required when calling `search`.\");\n      }\n      if (!searchMethodParams.requests) {\n        throw new Error(\"Parameter `searchMethodParams.requests` is required when calling `search`.\");\n      }\n      const requestPath = \"/1/indexes/*/queries\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchMethodParams,\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for standard and custom dictionary entries.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param searchDictionaryEntries - The searchDictionaryEntries object.\n     * @param searchDictionaryEntries.dictionaryName - Dictionary type in which to search.\n     * @param searchDictionaryEntries.searchDictionaryEntriesParams - The searchDictionaryEntriesParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchDictionaryEntries({ dictionaryName, searchDictionaryEntriesParams }, requestOptions) {\n      if (!dictionaryName) {\n        throw new Error(\"Parameter `dictionaryName` is required when calling `searchDictionaryEntries`.\");\n      }\n      if (!searchDictionaryEntriesParams) {\n        throw new Error(\n          \"Parameter `searchDictionaryEntriesParams` is required when calling `searchDictionaryEntries`.\"\n        );\n      }\n      if (!searchDictionaryEntriesParams.query) {\n        throw new Error(\n          \"Parameter `searchDictionaryEntriesParams.query` is required when calling `searchDictionaryEntries`.\"\n        );\n      }\n      const requestPath = \"/1/dictionaries/{dictionaryName}/search\".replace(\n        \"{dictionaryName}\",\n        encodeURIComponent(dictionaryName)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchDictionaryEntriesParams,\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for values of a specified facet attribute.  - By default, facet values are sorted by decreasing count.   You can adjust this with the `sortFacetValueBy` parameter. - Searching for facet values doesn\\'t work if you have **more than 65 searchable facets and searchable attributes combined**.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param searchForFacetValues - The searchForFacetValues object.\n     * @param searchForFacetValues.indexName - Name of the index on which to perform the operation.\n     * @param searchForFacetValues.facetName - Facet attribute in which to search for values.  This attribute must be included in the `attributesForFaceting` index setting with the `searchable()` modifier.\n     * @param searchForFacetValues.searchForFacetValuesRequest - The searchForFacetValuesRequest object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchForFacetValues({ indexName, facetName, searchForFacetValuesRequest }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `searchForFacetValues`.\");\n      }\n      if (!facetName) {\n        throw new Error(\"Parameter `facetName` is required when calling `searchForFacetValues`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/facets/{facetName}/query\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{facetName}\", encodeURIComponent(facetName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchForFacetValuesRequest ? searchForFacetValuesRequest : {},\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for rules in your index.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param searchRules - The searchRules object.\n     * @param searchRules.indexName - Name of the index on which to perform the operation.\n     * @param searchRules.searchRulesParams - The searchRulesParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchRules({ indexName, searchRulesParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `searchRules`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/rules/search\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchRulesParams ? searchRulesParams : {},\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches a single index and returns matching search results (_hits_).  This method lets you retrieve up to 1,000 hits. If you need more, use the [`browse` operation](#tag/Search/operation/browse) or increase the `paginatedLimitedTo` index setting.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param searchSingleIndex - The searchSingleIndex object.\n     * @param searchSingleIndex.indexName - Name of the index on which to perform the operation.\n     * @param searchSingleIndex.searchParams - The searchParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchSingleIndex({ indexName, searchParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `searchSingleIndex`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/query\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchParams ? searchParams : {},\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for synonyms in your index.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param searchSynonyms - The searchSynonyms object.\n     * @param searchSynonyms.indexName - Name of the index on which to perform the operation.\n     * @param searchSynonyms.searchSynonymsParams - Body of the `searchSynonyms` operation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchSynonyms({ indexName, searchSynonymsParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `searchSynonyms`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/synonyms/search\".replace(\n        \"{indexName}\",\n        encodeURIComponent(indexName)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchSynonymsParams ? searchSynonymsParams : {},\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Since it can take a few seconds to get the data from the different clusters, the response isn\\'t real-time.  To ensure rapid updates, the user IDs index isn\\'t built at the same time as the mapping. Instead, it\\'s built every 12 hours, at the same time as the update of user ID usage. For example, if you add or move a user ID, the search will show an old value until the next time the mapping is rebuilt (every 12 hours).\n     *\n     * Required API Key ACLs:\n     *  - admin\n     *\n     * @deprecated\n     * @param searchUserIdsParams - The searchUserIdsParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchUserIds(searchUserIdsParams, requestOptions) {\n      if (!searchUserIdsParams) {\n        throw new Error(\"Parameter `searchUserIdsParams` is required when calling `searchUserIds`.\");\n      }\n      if (!searchUserIdsParams.query) {\n        throw new Error(\"Parameter `searchUserIdsParams.query` is required when calling `searchUserIds`.\");\n      }\n      const requestPath = \"/1/clusters/mapping/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchUserIdsParams,\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Turns standard stop word dictionary entries on or off for a given language.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param dictionarySettingsParams - The dictionarySettingsParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    setDictionarySettings(dictionarySettingsParams, requestOptions) {\n      if (!dictionarySettingsParams) {\n        throw new Error(\"Parameter `dictionarySettingsParams` is required when calling `setDictionarySettings`.\");\n      }\n      if (!dictionarySettingsParams.disableStandardEntries) {\n        throw new Error(\n          \"Parameter `dictionarySettingsParams.disableStandardEntries` is required when calling `setDictionarySettings`.\"\n        );\n      }\n      const requestPath = \"/1/dictionaries/*/settings\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: dictionarySettingsParams\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Update the specified index settings.  Index settings that you don\\'t specify are left unchanged. Specify `null` to reset a setting to its default value.  For best performance, update the index settings before you add new records to your index.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param setSettings - The setSettings object.\n     * @param setSettings.indexName - Name of the index on which to perform the operation.\n     * @param setSettings.indexSettings - The indexSettings object.\n     * @param setSettings.forwardToReplicas - Whether changes are applied to replica indices.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    setSettings({ indexName, indexSettings, forwardToReplicas }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `setSettings`.\");\n      }\n      if (!indexSettings) {\n        throw new Error(\"Parameter `indexSettings` is required when calling `setSettings`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/settings\".replace(\"{indexName}\", encodeURIComponent(indexName));\n      const headers = {};\n      const queryParameters = {};\n      if (forwardToReplicas !== void 0) {\n        queryParameters[\"forwardToReplicas\"] = forwardToReplicas.toString();\n      }\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: indexSettings\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Replaces the permissions of an existing API key.  Any unspecified attribute resets that attribute to its default value.\n     *\n     * Required API Key ACLs:\n     *  - admin\n     * @param updateApiKey - The updateApiKey object.\n     * @param updateApiKey.key - API key.\n     * @param updateApiKey.apiKey - The apiKey object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateApiKey({ key, apiKey }, requestOptions) {\n      if (!key) {\n        throw new Error(\"Parameter `key` is required when calling `updateApiKey`.\");\n      }\n      if (!apiKey) {\n        throw new Error(\"Parameter `apiKey` is required when calling `updateApiKey`.\");\n      }\n      if (!apiKey.acl) {\n        throw new Error(\"Parameter `apiKey.acl` is required when calling `updateApiKey`.\");\n      }\n      const requestPath = \"/1/keys/{key}\".replace(\"{key}\", encodeURIComponent(key));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: apiKey\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction searchClient(appId, apiKey, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  return createSearchClient({\n    appId,\n    apiKey,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/client-search/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/ingestion/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   ingestionClient: function() { return /* binding */ ingestionClient; },\n/* harmony export */   isOnDemandTrigger: function() { return /* binding */ isOnDemandTrigger; },\n/* harmony export */   isScheduleTrigger: function() { return /* binding */ isScheduleTrigger; },\n/* harmony export */   isSubscriptionTrigger: function() { return /* binding */ isSubscriptionTrigger; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/ingestionClient.ts\n\nvar apiClientVersion = \"1.23.4\";\nvar REGIONS = [\"eu\", \"us\"];\nfunction getDefaultHosts(region) {\n  const url = \"data.{region}.algolia.com\".replace(\"{region}\", region);\n  return [{ url, accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction isOnDemandTrigger(trigger) {\n  return trigger.type === \"onDemand\";\n}\nfunction isScheduleTrigger(trigger) {\n  return trigger.type === \"schedule\";\n}\nfunction isSubscriptionTrigger(trigger) {\n  return trigger.type === \"subscription\";\n}\nfunction createIngestionClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  region: regionOption,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(regionOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Ingestion\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * Creates a new authentication resource.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param authenticationCreate -\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createAuthentication(authenticationCreate, requestOptions) {\n      if (!authenticationCreate) {\n        throw new Error(\"Parameter `authenticationCreate` is required when calling `createAuthentication`.\");\n      }\n      if (!authenticationCreate.type) {\n        throw new Error(\"Parameter `authenticationCreate.type` is required when calling `createAuthentication`.\");\n      }\n      if (!authenticationCreate.name) {\n        throw new Error(\"Parameter `authenticationCreate.name` is required when calling `createAuthentication`.\");\n      }\n      if (!authenticationCreate.input) {\n        throw new Error(\"Parameter `authenticationCreate.input` is required when calling `createAuthentication`.\");\n      }\n      const requestPath = \"/1/authentications\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: authenticationCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new destination.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param destinationCreate -\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createDestination(destinationCreate, requestOptions) {\n      if (!destinationCreate) {\n        throw new Error(\"Parameter `destinationCreate` is required when calling `createDestination`.\");\n      }\n      if (!destinationCreate.type) {\n        throw new Error(\"Parameter `destinationCreate.type` is required when calling `createDestination`.\");\n      }\n      if (!destinationCreate.name) {\n        throw new Error(\"Parameter `destinationCreate.name` is required when calling `createDestination`.\");\n      }\n      if (!destinationCreate.input) {\n        throw new Error(\"Parameter `destinationCreate.input` is required when calling `createDestination`.\");\n      }\n      const requestPath = \"/1/destinations\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: destinationCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new source.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param sourceCreate -\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createSource(sourceCreate, requestOptions) {\n      if (!sourceCreate) {\n        throw new Error(\"Parameter `sourceCreate` is required when calling `createSource`.\");\n      }\n      if (!sourceCreate.type) {\n        throw new Error(\"Parameter `sourceCreate.type` is required when calling `createSource`.\");\n      }\n      if (!sourceCreate.name) {\n        throw new Error(\"Parameter `sourceCreate.name` is required when calling `createSource`.\");\n      }\n      const requestPath = \"/1/sources\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: sourceCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new task.\n     * @param taskCreate - Request body for creating a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createTask(taskCreate, requestOptions) {\n      if (!taskCreate) {\n        throw new Error(\"Parameter `taskCreate` is required when calling `createTask`.\");\n      }\n      if (!taskCreate.sourceID) {\n        throw new Error(\"Parameter `taskCreate.sourceID` is required when calling `createTask`.\");\n      }\n      if (!taskCreate.destinationID) {\n        throw new Error(\"Parameter `taskCreate.destinationID` is required when calling `createTask`.\");\n      }\n      if (!taskCreate.action) {\n        throw new Error(\"Parameter `taskCreate.action` is required when calling `createTask`.\");\n      }\n      const requestPath = \"/2/tasks\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new task using the v1 endpoint, please use `createTask` instead.\n     *\n     * @deprecated\n     * @param taskCreate - Request body for creating a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createTaskV1(taskCreate, requestOptions) {\n      if (!taskCreate) {\n        throw new Error(\"Parameter `taskCreate` is required when calling `createTaskV1`.\");\n      }\n      if (!taskCreate.sourceID) {\n        throw new Error(\"Parameter `taskCreate.sourceID` is required when calling `createTaskV1`.\");\n      }\n      if (!taskCreate.destinationID) {\n        throw new Error(\"Parameter `taskCreate.destinationID` is required when calling `createTaskV1`.\");\n      }\n      if (!taskCreate.trigger) {\n        throw new Error(\"Parameter `taskCreate.trigger` is required when calling `createTaskV1`.\");\n      }\n      if (!taskCreate.action) {\n        throw new Error(\"Parameter `taskCreate.action` is required when calling `createTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Creates a new transformation.\n     * @param transformationCreate - Request body for creating a transformation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    createTransformation(transformationCreate, requestOptions) {\n      if (!transformationCreate) {\n        throw new Error(\"Parameter `transformationCreate` is required when calling `createTransformation`.\");\n      }\n      if (!transformationCreate.code) {\n        throw new Error(\"Parameter `transformationCreate.code` is required when calling `createTransformation`.\");\n      }\n      if (!transformationCreate.name) {\n        throw new Error(\"Parameter `transformationCreate.name` is required when calling `createTransformation`.\");\n      }\n      const requestPath = \"/1/transformations\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: transformationCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes an authentication resource. You can\\'t delete authentication resources that are used by a source or a destination.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param deleteAuthentication - The deleteAuthentication object.\n     * @param deleteAuthentication.authenticationID - Unique identifier of an authentication resource.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteAuthentication({ authenticationID }, requestOptions) {\n      if (!authenticationID) {\n        throw new Error(\"Parameter `authenticationID` is required when calling `deleteAuthentication`.\");\n      }\n      const requestPath = \"/1/authentications/{authenticationID}\".replace(\n        \"{authenticationID}\",\n        encodeURIComponent(authenticationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a destination by its ID. You can\\'t delete destinations that are referenced in tasks.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param deleteDestination - The deleteDestination object.\n     * @param deleteDestination.destinationID - Unique identifier of a destination.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteDestination({ destinationID }, requestOptions) {\n      if (!destinationID) {\n        throw new Error(\"Parameter `destinationID` is required when calling `deleteDestination`.\");\n      }\n      const requestPath = \"/1/destinations/{destinationID}\".replace(\n        \"{destinationID}\",\n        encodeURIComponent(destinationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a source by its ID. You can\\'t delete sources that are referenced in tasks.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param deleteSource - The deleteSource object.\n     * @param deleteSource.sourceID - Unique identifier of a source.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteSource({ sourceID }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `deleteSource`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a task by its ID.\n     * @param deleteTask - The deleteTask object.\n     * @param deleteTask.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `deleteTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a task by its ID using the v1 endpoint, please use `deleteTask` instead.\n     *\n     * @deprecated\n     * @param deleteTaskV1 - The deleteTaskV1 object.\n     * @param deleteTaskV1.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteTaskV1({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `deleteTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a transformation by its ID.\n     * @param deleteTransformation - The deleteTransformation object.\n     * @param deleteTransformation.transformationID - Unique identifier of a transformation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteTransformation({ transformationID }, requestOptions) {\n      if (!transformationID) {\n        throw new Error(\"Parameter `transformationID` is required when calling `deleteTransformation`.\");\n      }\n      const requestPath = \"/1/transformations/{transformationID}\".replace(\n        \"{transformationID}\",\n        encodeURIComponent(transformationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Disables a task.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param disableTask - The disableTask object.\n     * @param disableTask.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    disableTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `disableTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}/disable\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Disables a task using the v1 endpoint, please use `disableTask` instead.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param disableTaskV1 - The disableTaskV1 object.\n     * @param disableTaskV1.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    disableTaskV1({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `disableTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}/disable\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Enables a task.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param enableTask - The enableTask object.\n     * @param enableTask.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    enableTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `enableTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}/enable\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Enables a task using the v1 endpoint, please use `enableTask` instead.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param enableTaskV1 - The enableTaskV1 object.\n     * @param enableTaskV1.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    enableTaskV1({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `enableTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}/enable\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves an authentication resource by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getAuthentication - The getAuthentication object.\n     * @param getAuthentication.authenticationID - Unique identifier of an authentication resource.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getAuthentication({ authenticationID }, requestOptions) {\n      if (!authenticationID) {\n        throw new Error(\"Parameter `authenticationID` is required when calling `getAuthentication`.\");\n      }\n      const requestPath = \"/1/authentications/{authenticationID}\".replace(\n        \"{authenticationID}\",\n        encodeURIComponent(authenticationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a destination by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getDestination - The getDestination object.\n     * @param getDestination.destinationID - Unique identifier of a destination.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getDestination({ destinationID }, requestOptions) {\n      if (!destinationID) {\n        throw new Error(\"Parameter `destinationID` is required when calling `getDestination`.\");\n      }\n      const requestPath = \"/1/destinations/{destinationID}\".replace(\n        \"{destinationID}\",\n        encodeURIComponent(destinationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a single task run event by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getEvent - The getEvent object.\n     * @param getEvent.runID - Unique identifier of a task run.\n     * @param getEvent.eventID - Unique identifier of an event.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getEvent({ runID, eventID }, requestOptions) {\n      if (!runID) {\n        throw new Error(\"Parameter `runID` is required when calling `getEvent`.\");\n      }\n      if (!eventID) {\n        throw new Error(\"Parameter `eventID` is required when calling `getEvent`.\");\n      }\n      const requestPath = \"/1/runs/{runID}/events/{eventID}\".replace(\"{runID}\", encodeURIComponent(runID)).replace(\"{eventID}\", encodeURIComponent(eventID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieve a single task run by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getRun - The getRun object.\n     * @param getRun.runID - Unique identifier of a task run.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRun({ runID }, requestOptions) {\n      if (!runID) {\n        throw new Error(\"Parameter `runID` is required when calling `getRun`.\");\n      }\n      const requestPath = \"/1/runs/{runID}\".replace(\"{runID}\", encodeURIComponent(runID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieve a source by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getSource - The getSource object.\n     * @param getSource.sourceID - Unique identifier of a source.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getSource({ sourceID }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `getSource`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a task by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getTask - The getTask object.\n     * @param getTask.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `getTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a task by its ID using the v1 endpoint, please use `getTask` instead.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param getTaskV1 - The getTaskV1 object.\n     * @param getTaskV1.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTaskV1({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `getTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a transformation by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param getTransformation - The getTransformation object.\n     * @param getTransformation.transformationID - Unique identifier of a transformation.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getTransformation({ transformationID }, requestOptions) {\n      if (!transformationID) {\n        throw new Error(\"Parameter `transformationID` is required when calling `getTransformation`.\");\n      }\n      const requestPath = \"/1/transformations/{transformationID}\".replace(\n        \"{transformationID}\",\n        encodeURIComponent(transformationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of all authentication resources.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listAuthentications - The listAuthentications object.\n     * @param listAuthentications.itemsPerPage - Number of items per page.\n     * @param listAuthentications.page - Page number of the paginated API response.\n     * @param listAuthentications.type - Type of authentication resource to retrieve.\n     * @param listAuthentications.platform - Ecommerce platform for which to retrieve authentications.\n     * @param listAuthentications.sort - Property by which to sort the list of authentications.\n     * @param listAuthentications.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listAuthentications({ itemsPerPage, page, type, platform, sort, order } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/authentications\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      if (platform !== void 0) {\n        queryParameters[\"platform\"] = platform.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of destinations.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listDestinations - The listDestinations object.\n     * @param listDestinations.itemsPerPage - Number of items per page.\n     * @param listDestinations.page - Page number of the paginated API response.\n     * @param listDestinations.type - Destination type.\n     * @param listDestinations.authenticationID - Authentication ID used by destinations.\n     * @param listDestinations.transformationID - Get the list of destinations used by a transformation.\n     * @param listDestinations.sort - Property by which to sort the destinations.\n     * @param listDestinations.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listDestinations({ itemsPerPage, page, type, authenticationID, transformationID, sort, order } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/destinations\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      if (authenticationID !== void 0) {\n        queryParameters[\"authenticationID\"] = authenticationID.toString();\n      }\n      if (transformationID !== void 0) {\n        queryParameters[\"transformationID\"] = transformationID.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of events for a task run, identified by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listEvents - The listEvents object.\n     * @param listEvents.runID - Unique identifier of a task run.\n     * @param listEvents.itemsPerPage - Number of items per page.\n     * @param listEvents.page - Page number of the paginated API response.\n     * @param listEvents.status - Event status for filtering the list of task runs.\n     * @param listEvents.type - Event type for filtering the list of task runs.\n     * @param listEvents.sort - Property by which to sort the list of task run events.\n     * @param listEvents.order - Sort order of the response, ascending or descending.\n     * @param listEvents.startDate - Date and time in RFC 3339 format for the earliest events to retrieve. By default, the current time minus three hours is used.\n     * @param listEvents.endDate - Date and time in RFC 3339 format for the latest events to retrieve. By default, the current time is used.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listEvents({ runID, itemsPerPage, page, status, type, sort, order, startDate, endDate }, requestOptions) {\n      if (!runID) {\n        throw new Error(\"Parameter `runID` is required when calling `listEvents`.\");\n      }\n      const requestPath = \"/1/runs/{runID}/events\".replace(\"{runID}\", encodeURIComponent(runID));\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (status !== void 0) {\n        queryParameters[\"status\"] = status.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieve a list of task runs.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listRuns - The listRuns object.\n     * @param listRuns.itemsPerPage - Number of items per page.\n     * @param listRuns.page - Page number of the paginated API response.\n     * @param listRuns.status - Run status for filtering the list of task runs.\n     * @param listRuns.type - Run type for filtering the list of task runs.\n     * @param listRuns.taskID - Task ID for filtering the list of task runs.\n     * @param listRuns.sort - Property by which to sort the list of task runs.\n     * @param listRuns.order - Sort order of the response, ascending or descending.\n     * @param listRuns.startDate - Date in RFC 3339 format for the earliest run to retrieve. By default, the current day minus seven days is used.\n     * @param listRuns.endDate - Date in RFC 3339 format for the latest run to retrieve. By default, the current day is used.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listRuns({ itemsPerPage, page, status, type, taskID, sort, order, startDate, endDate } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/runs\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (status !== void 0) {\n        queryParameters[\"status\"] = status.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      if (taskID !== void 0) {\n        queryParameters[\"taskID\"] = taskID.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      if (startDate !== void 0) {\n        queryParameters[\"startDate\"] = startDate.toString();\n      }\n      if (endDate !== void 0) {\n        queryParameters[\"endDate\"] = endDate.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of sources.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listSources - The listSources object.\n     * @param listSources.itemsPerPage - Number of items per page.\n     * @param listSources.page - Page number of the paginated API response.\n     * @param listSources.type - Source type. Some sources require authentication.\n     * @param listSources.authenticationID - Authentication IDs of the sources to retrieve. \\'none\\' returns sources that doesn\\'t have an authentication.\n     * @param listSources.sort - Property by which to sort the list of sources.\n     * @param listSources.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listSources({ itemsPerPage, page, type, authenticationID, sort, order } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/sources\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (type !== void 0) {\n        queryParameters[\"type\"] = type.toString();\n      }\n      if (authenticationID !== void 0) {\n        queryParameters[\"authenticationID\"] = authenticationID.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of tasks.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listTasks - The listTasks object.\n     * @param listTasks.itemsPerPage - Number of items per page.\n     * @param listTasks.page - Page number of the paginated API response.\n     * @param listTasks.action - Actions for filtering the list of tasks.\n     * @param listTasks.enabled - Whether to filter the list of tasks by the `enabled` status.\n     * @param listTasks.sourceID - Source IDs for filtering the list of tasks.\n     * @param listTasks.sourceType - Filters the tasks with the specified source type.\n     * @param listTasks.destinationID - Destination IDs for filtering the list of tasks.\n     * @param listTasks.triggerType - Type of task trigger for filtering the list of tasks.\n     * @param listTasks.withEmailNotifications - If specified, the response only includes tasks with notifications.email.enabled set to this value.\n     * @param listTasks.sort - Property by which to sort the list of tasks.\n     * @param listTasks.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listTasks({\n      itemsPerPage,\n      page,\n      action,\n      enabled,\n      sourceID,\n      sourceType,\n      destinationID,\n      triggerType,\n      withEmailNotifications,\n      sort,\n      order\n    } = {}, requestOptions = void 0) {\n      const requestPath = \"/2/tasks\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (action !== void 0) {\n        queryParameters[\"action\"] = action.toString();\n      }\n      if (enabled !== void 0) {\n        queryParameters[\"enabled\"] = enabled.toString();\n      }\n      if (sourceID !== void 0) {\n        queryParameters[\"sourceID\"] = sourceID.toString();\n      }\n      if (sourceType !== void 0) {\n        queryParameters[\"sourceType\"] = sourceType.toString();\n      }\n      if (destinationID !== void 0) {\n        queryParameters[\"destinationID\"] = destinationID.toString();\n      }\n      if (triggerType !== void 0) {\n        queryParameters[\"triggerType\"] = triggerType.toString();\n      }\n      if (withEmailNotifications !== void 0) {\n        queryParameters[\"withEmailNotifications\"] = withEmailNotifications.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of tasks using the v1 endpoint, please use `getTasks` instead.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param listTasksV1 - The listTasksV1 object.\n     * @param listTasksV1.itemsPerPage - Number of items per page.\n     * @param listTasksV1.page - Page number of the paginated API response.\n     * @param listTasksV1.action - Actions for filtering the list of tasks.\n     * @param listTasksV1.enabled - Whether to filter the list of tasks by the `enabled` status.\n     * @param listTasksV1.sourceID - Source IDs for filtering the list of tasks.\n     * @param listTasksV1.destinationID - Destination IDs for filtering the list of tasks.\n     * @param listTasksV1.triggerType - Type of task trigger for filtering the list of tasks.\n     * @param listTasksV1.sort - Property by which to sort the list of tasks.\n     * @param listTasksV1.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listTasksV1({ itemsPerPage, page, action, enabled, sourceID, destinationID, triggerType, sort, order } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/tasks\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (action !== void 0) {\n        queryParameters[\"action\"] = action.toString();\n      }\n      if (enabled !== void 0) {\n        queryParameters[\"enabled\"] = enabled.toString();\n      }\n      if (sourceID !== void 0) {\n        queryParameters[\"sourceID\"] = sourceID.toString();\n      }\n      if (destinationID !== void 0) {\n        queryParameters[\"destinationID\"] = destinationID.toString();\n      }\n      if (triggerType !== void 0) {\n        queryParameters[\"triggerType\"] = triggerType.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a list of transformations.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param listTransformations - The listTransformations object.\n     * @param listTransformations.itemsPerPage - Number of items per page.\n     * @param listTransformations.page - Page number of the paginated API response.\n     * @param listTransformations.sort - Property by which to sort the list of transformations.\n     * @param listTransformations.order - Sort order of the response, ascending or descending.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    listTransformations({ itemsPerPage, page, sort, order } = {}, requestOptions = void 0) {\n      const requestPath = \"/1/transformations\";\n      const headers = {};\n      const queryParameters = {};\n      if (itemsPerPage !== void 0) {\n        queryParameters[\"itemsPerPage\"] = itemsPerPage.toString();\n      }\n      if (page !== void 0) {\n        queryParameters[\"page\"] = page.toString();\n      }\n      if (sort !== void 0) {\n        queryParameters[\"sort\"] = sort.toString();\n      }\n      if (order !== void 0) {\n        queryParameters[\"order\"] = order.toString();\n      }\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Push a `batch` request payload through the Pipeline. You can check the status of task pushes with the observability endpoints.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param pushTask - The pushTask object.\n     * @param pushTask.taskID - Unique identifier of a task.\n     * @param pushTask.pushTaskPayload - Request body of a Search API `batch` request that will be pushed in the Connectors pipeline.\n     * @param pushTask.watch - When provided, the push operation will be synchronous and the API will wait for the ingestion to be finished before responding.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    pushTask({ taskID, pushTaskPayload, watch }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `pushTask`.\");\n      }\n      if (!pushTaskPayload) {\n        throw new Error(\"Parameter `pushTaskPayload` is required when calling `pushTask`.\");\n      }\n      if (!pushTaskPayload.action) {\n        throw new Error(\"Parameter `pushTaskPayload.action` is required when calling `pushTask`.\");\n      }\n      if (!pushTaskPayload.records) {\n        throw new Error(\"Parameter `pushTaskPayload.records` is required when calling `pushTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}/push\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      if (watch !== void 0) {\n        queryParameters[\"watch\"] = watch.toString();\n      }\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: pushTaskPayload\n      };\n      requestOptions = {\n        timeouts: {\n          connect: 18e4,\n          read: 18e4,\n          write: 18e4,\n          ...requestOptions?.timeouts\n        }\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Runs all tasks linked to a source, only available for Shopify sources. It will create 1 run per task.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param runSource - The runSource object.\n     * @param runSource.sourceID - Unique identifier of a source.\n     * @param runSource.runSourcePayload -\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    runSource({ sourceID, runSourcePayload }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `runSource`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}/run\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: runSourcePayload ? runSourcePayload : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Runs a task. You can check the status of task runs with the observability endpoints.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param runTask - The runTask object.\n     * @param runTask.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    runTask({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `runTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}/run\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Runs a task using the v1 endpoint, please use `runTask` instead. You can check the status of task runs with the observability endpoints.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param runTaskV1 - The runTaskV1 object.\n     * @param runTaskV1.taskID - Unique identifier of a task.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    runTaskV1({ taskID }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `runTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}/run\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for authentication resources.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param authenticationSearch - The authenticationSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchAuthentications(authenticationSearch, requestOptions) {\n      if (!authenticationSearch) {\n        throw new Error(\"Parameter `authenticationSearch` is required when calling `searchAuthentications`.\");\n      }\n      if (!authenticationSearch.authenticationIDs) {\n        throw new Error(\n          \"Parameter `authenticationSearch.authenticationIDs` is required when calling `searchAuthentications`.\"\n        );\n      }\n      const requestPath = \"/1/authentications/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: authenticationSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for destinations.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param destinationSearch - The destinationSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchDestinations(destinationSearch, requestOptions) {\n      if (!destinationSearch) {\n        throw new Error(\"Parameter `destinationSearch` is required when calling `searchDestinations`.\");\n      }\n      if (!destinationSearch.destinationIDs) {\n        throw new Error(\"Parameter `destinationSearch.destinationIDs` is required when calling `searchDestinations`.\");\n      }\n      const requestPath = \"/1/destinations/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: destinationSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for sources.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param sourceSearch - The sourceSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchSources(sourceSearch, requestOptions) {\n      if (!sourceSearch) {\n        throw new Error(\"Parameter `sourceSearch` is required when calling `searchSources`.\");\n      }\n      if (!sourceSearch.sourceIDs) {\n        throw new Error(\"Parameter `sourceSearch.sourceIDs` is required when calling `searchSources`.\");\n      }\n      const requestPath = \"/1/sources/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: sourceSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for tasks.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param taskSearch - The taskSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchTasks(taskSearch, requestOptions) {\n      if (!taskSearch) {\n        throw new Error(\"Parameter `taskSearch` is required when calling `searchTasks`.\");\n      }\n      if (!taskSearch.taskIDs) {\n        throw new Error(\"Parameter `taskSearch.taskIDs` is required when calling `searchTasks`.\");\n      }\n      const requestPath = \"/2/tasks/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for tasks using the v1 endpoint, please use `searchTasks` instead.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     *\n     * @deprecated\n     * @param taskSearch - The taskSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchTasksV1(taskSearch, requestOptions) {\n      if (!taskSearch) {\n        throw new Error(\"Parameter `taskSearch` is required when calling `searchTasksV1`.\");\n      }\n      if (!taskSearch.taskIDs) {\n        throw new Error(\"Parameter `taskSearch.taskIDs` is required when calling `searchTasksV1`.\");\n      }\n      const requestPath = \"/1/tasks/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for transformations.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param transformationSearch - The transformationSearch object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchTransformations(transformationSearch, requestOptions) {\n      if (!transformationSearch) {\n        throw new Error(\"Parameter `transformationSearch` is required when calling `searchTransformations`.\");\n      }\n      if (!transformationSearch.transformationIDs) {\n        throw new Error(\n          \"Parameter `transformationSearch.transformationIDs` is required when calling `searchTransformations`.\"\n        );\n      }\n      const requestPath = \"/1/transformations/search\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: transformationSearch\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Triggers a stream-listing request for a source. Triggering stream-listing requests only works with sources with `type: docker` and `imageType: airbyte`.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param triggerDockerSourceDiscover - The triggerDockerSourceDiscover object.\n     * @param triggerDockerSourceDiscover.sourceID - Unique identifier of a source.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    triggerDockerSourceDiscover({ sourceID }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `triggerDockerSourceDiscover`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}/discover\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      requestOptions = {\n        timeouts: {\n          connect: 18e4,\n          read: 18e4,\n          write: 18e4,\n          ...requestOptions?.timeouts\n        }\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Try a transformation before creating it.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param transformationTry - The transformationTry object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    tryTransformation(transformationTry, requestOptions) {\n      if (!transformationTry) {\n        throw new Error(\"Parameter `transformationTry` is required when calling `tryTransformation`.\");\n      }\n      if (!transformationTry.code) {\n        throw new Error(\"Parameter `transformationTry.code` is required when calling `tryTransformation`.\");\n      }\n      if (!transformationTry.sampleRecord) {\n        throw new Error(\"Parameter `transformationTry.sampleRecord` is required when calling `tryTransformation`.\");\n      }\n      const requestPath = \"/1/transformations/try\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: transformationTry\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Try a transformation before updating it.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param tryTransformationBeforeUpdate - The tryTransformationBeforeUpdate object.\n     * @param tryTransformationBeforeUpdate.transformationID - Unique identifier of a transformation.\n     * @param tryTransformationBeforeUpdate.transformationTry - The transformationTry object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    tryTransformationBeforeUpdate({ transformationID, transformationTry }, requestOptions) {\n      if (!transformationID) {\n        throw new Error(\"Parameter `transformationID` is required when calling `tryTransformationBeforeUpdate`.\");\n      }\n      if (!transformationTry) {\n        throw new Error(\"Parameter `transformationTry` is required when calling `tryTransformationBeforeUpdate`.\");\n      }\n      if (!transformationTry.code) {\n        throw new Error(\"Parameter `transformationTry.code` is required when calling `tryTransformationBeforeUpdate`.\");\n      }\n      if (!transformationTry.sampleRecord) {\n        throw new Error(\n          \"Parameter `transformationTry.sampleRecord` is required when calling `tryTransformationBeforeUpdate`.\"\n        );\n      }\n      const requestPath = \"/1/transformations/{transformationID}/try\".replace(\n        \"{transformationID}\",\n        encodeURIComponent(transformationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: transformationTry\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates an authentication resource.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param updateAuthentication - The updateAuthentication object.\n     * @param updateAuthentication.authenticationID - Unique identifier of an authentication resource.\n     * @param updateAuthentication.authenticationUpdate - The authenticationUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateAuthentication({ authenticationID, authenticationUpdate }, requestOptions) {\n      if (!authenticationID) {\n        throw new Error(\"Parameter `authenticationID` is required when calling `updateAuthentication`.\");\n      }\n      if (!authenticationUpdate) {\n        throw new Error(\"Parameter `authenticationUpdate` is required when calling `updateAuthentication`.\");\n      }\n      const requestPath = \"/1/authentications/{authenticationID}\".replace(\n        \"{authenticationID}\",\n        encodeURIComponent(authenticationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PATCH\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: authenticationUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates the destination by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param updateDestination - The updateDestination object.\n     * @param updateDestination.destinationID - Unique identifier of a destination.\n     * @param updateDestination.destinationUpdate - The destinationUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateDestination({ destinationID, destinationUpdate }, requestOptions) {\n      if (!destinationID) {\n        throw new Error(\"Parameter `destinationID` is required when calling `updateDestination`.\");\n      }\n      if (!destinationUpdate) {\n        throw new Error(\"Parameter `destinationUpdate` is required when calling `updateDestination`.\");\n      }\n      const requestPath = \"/1/destinations/{destinationID}\".replace(\n        \"{destinationID}\",\n        encodeURIComponent(destinationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PATCH\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: destinationUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates a source by its ID.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param updateSource - The updateSource object.\n     * @param updateSource.sourceID - Unique identifier of a source.\n     * @param updateSource.sourceUpdate - The sourceUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateSource({ sourceID, sourceUpdate }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `updateSource`.\");\n      }\n      if (!sourceUpdate) {\n        throw new Error(\"Parameter `sourceUpdate` is required when calling `updateSource`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PATCH\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: sourceUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates a task by its ID.\n     * @param updateTask - The updateTask object.\n     * @param updateTask.taskID - Unique identifier of a task.\n     * @param updateTask.taskUpdate - The taskUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateTask({ taskID, taskUpdate }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `updateTask`.\");\n      }\n      if (!taskUpdate) {\n        throw new Error(\"Parameter `taskUpdate` is required when calling `updateTask`.\");\n      }\n      const requestPath = \"/2/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PATCH\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates a task by its ID using the v1 endpoint, please use `updateTask` instead.\n     *\n     * @deprecated\n     * @param updateTaskV1 - The updateTaskV1 object.\n     * @param updateTaskV1.taskID - Unique identifier of a task.\n     * @param updateTaskV1.taskUpdate - The taskUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateTaskV1({ taskID, taskUpdate }, requestOptions) {\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `updateTaskV1`.\");\n      }\n      if (!taskUpdate) {\n        throw new Error(\"Parameter `taskUpdate` is required when calling `updateTaskV1`.\");\n      }\n      const requestPath = \"/1/tasks/{taskID}\".replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PATCH\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: taskUpdate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Updates a transformation by its ID.\n     * @param updateTransformation - The updateTransformation object.\n     * @param updateTransformation.transformationID - Unique identifier of a transformation.\n     * @param updateTransformation.transformationCreate - The transformationCreate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    updateTransformation({ transformationID, transformationCreate }, requestOptions) {\n      if (!transformationID) {\n        throw new Error(\"Parameter `transformationID` is required when calling `updateTransformation`.\");\n      }\n      if (!transformationCreate) {\n        throw new Error(\"Parameter `transformationCreate` is required when calling `updateTransformation`.\");\n      }\n      if (!transformationCreate.code) {\n        throw new Error(\"Parameter `transformationCreate.code` is required when calling `updateTransformation`.\");\n      }\n      if (!transformationCreate.name) {\n        throw new Error(\"Parameter `transformationCreate.name` is required when calling `updateTransformation`.\");\n      }\n      const requestPath = \"/1/transformations/{transformationID}\".replace(\n        \"{transformationID}\",\n        encodeURIComponent(transformationID)\n      );\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: transformationCreate\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Validates a source payload to ensure it can be created and that the data source can be reached by Algolia.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param sourceCreate -\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    validateSource(sourceCreate, requestOptions = void 0) {\n      const requestPath = \"/1/sources/validate\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: sourceCreate ? sourceCreate : {}\n      };\n      requestOptions = {\n        timeouts: {\n          connect: 18e4,\n          read: 18e4,\n          write: 18e4,\n          ...requestOptions?.timeouts\n        }\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Validates an update of a source payload to ensure it can be created and that the data source can be reached by Algolia.\n     *\n     * Required API Key ACLs:\n     *  - addObject\n     *  - deleteIndex\n     *  - editSettings\n     * @param validateSourceBeforeUpdate - The validateSourceBeforeUpdate object.\n     * @param validateSourceBeforeUpdate.sourceID - Unique identifier of a source.\n     * @param validateSourceBeforeUpdate.sourceUpdate - The sourceUpdate object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    validateSourceBeforeUpdate({ sourceID, sourceUpdate }, requestOptions) {\n      if (!sourceID) {\n        throw new Error(\"Parameter `sourceID` is required when calling `validateSourceBeforeUpdate`.\");\n      }\n      if (!sourceUpdate) {\n        throw new Error(\"Parameter `sourceUpdate` is required when calling `validateSourceBeforeUpdate`.\");\n      }\n      const requestPath = \"/1/sources/{sourceID}/validate\".replace(\"{sourceID}\", encodeURIComponent(sourceID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: sourceUpdate\n      };\n      requestOptions = {\n        timeouts: {\n          connect: 18e4,\n          read: 18e4,\n          write: 18e4,\n          ...requestOptions?.timeouts\n        }\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction ingestionClient(appId, apiKey, region, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  if (!region || region && (typeof region !== \"string\" || !REGIONS.includes(region))) {\n    throw new Error(`\\`region\\` is required and must be one of the following: ${REGIONS.join(\", \")}`);\n  }\n  return createIngestionClient({\n    appId,\n    apiKey,\n    region,\n    timeouts: {\n      connect: 25e3,\n      read: 25e3,\n      write: 25e3\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/ingestion/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/monitoring/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   monitoringClient: function() { return /* binding */ monitoringClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/monitoringClient.ts\n\nvar apiClientVersion = \"1.23.4\";\nfunction getDefaultHosts() {\n  return [{ url: \"status.algolia.com\", accept: \"readWrite\", protocol: \"https\" }];\n}\nfunction createMonitoringClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Monitoring\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves known incidents for the selected clusters.\n     * @param getClusterIncidents - The getClusterIncidents object.\n     * @param getClusterIncidents.clusters - Subset of clusters, separated by commas.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getClusterIncidents({ clusters }, requestOptions) {\n      if (!clusters) {\n        throw new Error(\"Parameter `clusters` is required when calling `getClusterIncidents`.\");\n      }\n      const requestPath = \"/1/incidents/{clusters}\".replace(\"{clusters}\", encodeURIComponent(clusters));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the status of selected clusters.\n     * @param getClusterStatus - The getClusterStatus object.\n     * @param getClusterStatus.clusters - Subset of clusters, separated by commas.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getClusterStatus({ clusters }, requestOptions) {\n      if (!clusters) {\n        throw new Error(\"Parameter `clusters` is required when calling `getClusterStatus`.\");\n      }\n      const requestPath = \"/1/status/{clusters}\".replace(\"{clusters}\", encodeURIComponent(clusters));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves known incidents for all clusters.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getIncidents(requestOptions) {\n      const requestPath = \"/1/incidents\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves average times for indexing operations for selected clusters.\n     * @param getIndexingTime - The getIndexingTime object.\n     * @param getIndexingTime.clusters - Subset of clusters, separated by commas.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getIndexingTime({ clusters }, requestOptions) {\n      if (!clusters) {\n        throw new Error(\"Parameter `clusters` is required when calling `getIndexingTime`.\");\n      }\n      const requestPath = \"/1/indexing/{clusters}\".replace(\"{clusters}\", encodeURIComponent(clusters));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the average latency for search requests for selected clusters.\n     * @param getLatency - The getLatency object.\n     * @param getLatency.clusters - Subset of clusters, separated by commas.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getLatency({ clusters }, requestOptions) {\n      if (!clusters) {\n        throw new Error(\"Parameter `clusters` is required when calling `getLatency`.\");\n      }\n      const requestPath = \"/1/latency/{clusters}\".replace(\"{clusters}\", encodeURIComponent(clusters));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves metrics related to your Algolia infrastructure, aggregated over a selected time window.  Access to this API is available as part of the [Premium or Elevate plans](https://www.algolia.com/pricing). You must authenticate requests with the `x-algolia-application-id` and `x-algolia-api-key` headers (using the Monitoring API key).\n     * @param getMetrics - The getMetrics object.\n     * @param getMetrics.metric - Metric to report.  For more information about the individual metrics, see the description of the API response. To include all metrics, use `*`.\n     * @param getMetrics.period - Period over which to aggregate the metrics:  - `minute`. Aggregate the last minute. 1 data point per 10 seconds. - `hour`. Aggregate the last hour. 1 data point per minute. - `day`. Aggregate the last day. 1 data point per 10 minutes. - `week`. Aggregate the last week. 1 data point per hour. - `month`. Aggregate the last month. 1 data point per day.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getMetrics({ metric, period }, requestOptions) {\n      if (!metric) {\n        throw new Error(\"Parameter `metric` is required when calling `getMetrics`.\");\n      }\n      if (!period) {\n        throw new Error(\"Parameter `period` is required when calling `getMetrics`.\");\n      }\n      const requestPath = \"/1/infrastructure/{metric}/period/{period}\".replace(\"{metric}\", encodeURIComponent(metric)).replace(\"{period}\", encodeURIComponent(period));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Test whether clusters are reachable or not.\n     * @param getReachability - The getReachability object.\n     * @param getReachability.clusters - Subset of clusters, separated by commas.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getReachability({ clusters }, requestOptions) {\n      if (!clusters) {\n        throw new Error(\"Parameter `clusters` is required when calling `getReachability`.\");\n      }\n      const requestPath = \"/1/reachability/{clusters}/probes\".replace(\"{clusters}\", encodeURIComponent(clusters));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the servers that belong to clusters.  The response depends on whether you authenticate your API request:  - With authentication, the response lists the servers assigned to your Algolia application\\'s cluster.  - Without authentication, the response lists the servers for all Algolia clusters.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getServers(requestOptions) {\n      const requestPath = \"/1/inventory/servers\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves the status of all Algolia clusters and instances.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getStatus(requestOptions) {\n      const requestPath = \"/1/status\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction monitoringClient(appId, apiKey, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  return createMonitoringClient({\n    appId,\n    apiKey,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/monitoring/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/recommend/dist/builds/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClientVersion: function() { return /* binding */ apiClientVersion; },\n/* harmony export */   recommendClient: function() { return /* binding */ recommendClient; }\n/* harmony export */ });\n/* harmony import */ var _algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js\");\n/* harmony import */ var _algolia_client_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-common/dist/common.js\");\n// builds/browser.ts\n\n\n\n// src/recommendClient.ts\n\nvar apiClientVersion = \"5.23.4\";\nfunction getDefaultHosts(appId) {\n  return [\n    {\n      url: `${appId}-dsn.algolia.net`,\n      accept: \"read\",\n      protocol: \"https\"\n    },\n    {\n      url: `${appId}.algolia.net`,\n      accept: \"write\",\n      protocol: \"https\"\n    }\n  ].concat(\n    (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.shuffle)([\n      {\n        url: `${appId}-1.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      },\n      {\n        url: `${appId}-2.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      },\n      {\n        url: `${appId}-3.algolianet.com`,\n        accept: \"readWrite\",\n        protocol: \"https\"\n      }\n    ])\n  );\n}\nfunction createRecommendClient({\n  appId: appIdOption,\n  apiKey: apiKeyOption,\n  authMode,\n  algoliaAgents,\n  ...options\n}) {\n  const auth = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createAuth)(appIdOption, apiKeyOption, authMode);\n  const transporter = (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createTransporter)({\n    hosts: getDefaultHosts(appIdOption),\n    ...options,\n    algoliaAgent: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.getAlgoliaAgent)({\n      algoliaAgents,\n      client: \"Recommend\",\n      version: apiClientVersion\n    }),\n    baseHeaders: {\n      \"content-type\": \"text/plain\",\n      ...auth.headers(),\n      ...options.baseHeaders\n    },\n    baseQueryParameters: {\n      ...auth.queryParameters(),\n      ...options.baseQueryParameters\n    }\n  });\n  return {\n    transporter,\n    /**\n     * The `appId` currently in use.\n     */\n    appId: appIdOption,\n    /**\n     * The `apiKey` currently in use.\n     */\n    apiKey: apiKeyOption,\n    /**\n     * Clears the cache of the transporter for the `requestsCache` and `responsesCache` properties.\n     */\n    clearCache() {\n      return Promise.all([transporter.requestsCache.clear(), transporter.responsesCache.clear()]).then(() => void 0);\n    },\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return transporter.algoliaAgent.value;\n    },\n    /**\n     * Adds a `segment` to the `x-algolia-agent` sent with every requests.\n     *\n     * @param segment - The algolia agent (user-agent) segment to add.\n     * @param version - The version of the agent.\n     */\n    addAlgoliaAgent(segment, version) {\n      transporter.algoliaAgent.add({ segment, version });\n    },\n    /**\n     * Helper method to switch the API key used to authenticate the requests.\n     *\n     * @param params - Method params.\n     * @param params.apiKey - The new API Key to use.\n     */\n    setClientApiKey({ apiKey }) {\n      if (!authMode || authMode === \"WithinHeaders\") {\n        transporter.baseHeaders[\"x-algolia-api-key\"] = apiKey;\n      } else {\n        transporter.baseQueryParameters[\"x-algolia-api-key\"] = apiKey;\n      }\n    },\n    /**\n     * Create or update a batch of Recommend Rules  Each Recommend Rule is created or updated, depending on whether a Recommend Rule with the same `objectID` already exists. You may also specify `true` for `clearExistingRules`, in which case the batch will atomically replace all the existing Recommend Rules.  Recommend Rules are similar to Search Rules, except that the conditions and consequences apply to a [source item](/doc/guides/algolia-recommend/overview/#recommend-models) instead of a query. The main differences are the following: - Conditions `pattern` and `anchoring` are unavailable. - Condition `filters` triggers if the source item matches the specified filters. - Condition `filters` accepts numeric filters. - Consequence `params` only covers filtering parameters. - Consequence `automaticFacetFilters` doesn\\'t require a facet value placeholder (it tries to match the data source item\\'s attributes instead).\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param batchRecommendRules - The batchRecommendRules object.\n     * @param batchRecommendRules.indexName - Name of the index on which to perform the operation.\n     * @param batchRecommendRules.model - [Recommend model](https://www.algolia.com/doc/guides/algolia-recommend/overview/#recommend-models).\n     * @param batchRecommendRules.recommendRule - The recommendRule object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    batchRecommendRules({ indexName, model, recommendRule }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `batchRecommendRules`.\");\n      }\n      if (!model) {\n        throw new Error(\"Parameter `model` is required when calling `batchRecommendRules`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{model}/recommend/rules/batch\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{model}\", encodeURIComponent(model));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: recommendRule ? recommendRule : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customDelete - The customDelete object.\n     * @param customDelete.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customDelete.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customDelete({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customDelete`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customGet - The customGet object.\n     * @param customGet.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customGet.parameters - Query parameters to apply to the current query.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customGet({ path, parameters }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customGet`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPost - The customPost object.\n     * @param customPost.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPost.parameters - Query parameters to apply to the current query.\n     * @param customPost.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPost({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPost`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * This method lets you send requests to the Algolia REST API.\n     * @param customPut - The customPut object.\n     * @param customPut.path - Path of the endpoint, anything after \\\"/1\\\" must be specified.\n     * @param customPut.parameters - Query parameters to apply to the current query.\n     * @param customPut.body - Parameters to send with the custom request.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    customPut({ path, parameters, body }, requestOptions) {\n      if (!path) {\n        throw new Error(\"Parameter `path` is required when calling `customPut`.\");\n      }\n      const requestPath = \"/{path}\".replace(\"{path}\", path);\n      const headers = {};\n      const queryParameters = parameters ? parameters : {};\n      const request = {\n        method: \"PUT\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: body ? body : {}\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Deletes a Recommend rule from a recommendation scenario.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param deleteRecommendRule - The deleteRecommendRule object.\n     * @param deleteRecommendRule.indexName - Name of the index on which to perform the operation.\n     * @param deleteRecommendRule.model - [Recommend model](https://www.algolia.com/doc/guides/algolia-recommend/overview/#recommend-models).\n     * @param deleteRecommendRule.objectID - Unique record identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    deleteRecommendRule({ indexName, model, objectID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `deleteRecommendRule`.\");\n      }\n      if (!model) {\n        throw new Error(\"Parameter `model` is required when calling `deleteRecommendRule`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `deleteRecommendRule`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{model}\", encodeURIComponent(model)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"DELETE\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves a Recommend rule that you previously created in the Algolia dashboard.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param getRecommendRule - The getRecommendRule object.\n     * @param getRecommendRule.indexName - Name of the index on which to perform the operation.\n     * @param getRecommendRule.model - [Recommend model](https://www.algolia.com/doc/guides/algolia-recommend/overview/#recommend-models).\n     * @param getRecommendRule.objectID - Unique record identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRecommendRule({ indexName, model, objectID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getRecommendRule`.\");\n      }\n      if (!model) {\n        throw new Error(\"Parameter `model` is required when calling `getRecommendRule`.\");\n      }\n      if (!objectID) {\n        throw new Error(\"Parameter `objectID` is required when calling `getRecommendRule`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{model}\", encodeURIComponent(model)).replace(\"{objectID}\", encodeURIComponent(objectID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Checks the status of a given task.  Deleting a Recommend rule is asynchronous. When you delete a rule, a task is created on a queue and completed depending on the load on the server. The API response includes a task ID that you can use to check the status.\n     *\n     * Required API Key ACLs:\n     *  - editSettings\n     * @param getRecommendStatus - The getRecommendStatus object.\n     * @param getRecommendStatus.indexName - Name of the index on which to perform the operation.\n     * @param getRecommendStatus.model - [Recommend model](https://www.algolia.com/doc/guides/algolia-recommend/overview/#recommend-models).\n     * @param getRecommendStatus.taskID - Unique task identifier.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRecommendStatus({ indexName, model, taskID }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `getRecommendStatus`.\");\n      }\n      if (!model) {\n        throw new Error(\"Parameter `model` is required when calling `getRecommendStatus`.\");\n      }\n      if (!taskID) {\n        throw new Error(\"Parameter `taskID` is required when calling `getRecommendStatus`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{model}/task/{taskID}\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{model}\", encodeURIComponent(model)).replace(\"{taskID}\", encodeURIComponent(taskID));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"GET\",\n        path: requestPath,\n        queryParameters,\n        headers\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Retrieves recommendations from selected AI models.\n     *\n     * Required API Key ACLs:\n     *  - search\n     * @param getRecommendationsParams - The getRecommendationsParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    getRecommendations(getRecommendationsParams, requestOptions) {\n      if (getRecommendationsParams && Array.isArray(getRecommendationsParams)) {\n        const newSignatureRequest = {\n          requests: getRecommendationsParams\n        };\n        getRecommendationsParams = newSignatureRequest;\n      }\n      if (!getRecommendationsParams) {\n        throw new Error(\"Parameter `getRecommendationsParams` is required when calling `getRecommendations`.\");\n      }\n      if (!getRecommendationsParams.requests) {\n        throw new Error(\"Parameter `getRecommendationsParams.requests` is required when calling `getRecommendations`.\");\n      }\n      const requestPath = \"/1/indexes/*/recommendations\";\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: getRecommendationsParams,\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    },\n    /**\n     * Searches for Recommend rules.  Use an empty query to list all rules for this recommendation scenario.\n     *\n     * Required API Key ACLs:\n     *  - settings\n     * @param searchRecommendRules - The searchRecommendRules object.\n     * @param searchRecommendRules.indexName - Name of the index on which to perform the operation.\n     * @param searchRecommendRules.model - [Recommend model](https://www.algolia.com/doc/guides/algolia-recommend/overview/#recommend-models).\n     * @param searchRecommendRules.searchRecommendRulesParams - The searchRecommendRulesParams object.\n     * @param requestOptions - The requestOptions to send along with the query, they will be merged with the transporter requestOptions.\n     */\n    searchRecommendRules({ indexName, model, searchRecommendRulesParams }, requestOptions) {\n      if (!indexName) {\n        throw new Error(\"Parameter `indexName` is required when calling `searchRecommendRules`.\");\n      }\n      if (!model) {\n        throw new Error(\"Parameter `model` is required when calling `searchRecommendRules`.\");\n      }\n      const requestPath = \"/1/indexes/{indexName}/{model}/recommend/rules/search\".replace(\"{indexName}\", encodeURIComponent(indexName)).replace(\"{model}\", encodeURIComponent(model));\n      const headers = {};\n      const queryParameters = {};\n      const request = {\n        method: \"POST\",\n        path: requestPath,\n        queryParameters,\n        headers,\n        data: searchRecommendRulesParams ? searchRecommendRulesParams : {},\n        useReadTransporter: true,\n        cacheable: true\n      };\n      return transporter.request(request, requestOptions);\n    }\n  };\n}\n\n// builds/browser.ts\nfunction recommendClient(appId, apiKey, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  return createRecommendClient({\n    appId,\n    apiKey,\n    timeouts: {\n      connect: 1e3,\n      read: 2e3,\n      write: 3e4\n    },\n    logger: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createNullLogger)(),\n    requester: (0,_algolia_requester_browser_xhr__WEBPACK_IMPORTED_MODULE_0__.createXhrRequester)(),\n    algoliaAgents: [{ segment: \"Browser\" }],\n    authMode: \"WithinQueryParameters\",\n    responsesCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)(),\n    requestsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)({ serializable: false }),\n    hostsCache: (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createFallbackableCache)({\n      caches: [(0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createBrowserLocalStorageCache)({ key: `${apiClientVersion}-${appId}` }), (0,_algolia_client_common__WEBPACK_IMPORTED_MODULE_1__.createMemoryCache)()]\n    }),\n    ...options\n  });\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/recommend/dist/builds/browser.js?");

/***/ }),

/***/ "../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createXhrRequester: function() { return /* binding */ m; }\n/* harmony export */ });\nfunction m(){function r(t){return new Promise(s=>{let e=new XMLHttpRequest;e.open(t.method,t.url,!0),Object.keys(t.headers).forEach(n=>e.setRequestHeader(n,t.headers[n]));let i=(n,a)=>setTimeout(()=>{e.abort(),s({status:0,content:a,isTimedOut:!0})},n),u=i(t.connectTimeout,\"Connection timeout\"),o;e.onreadystatechange=()=>{e.readyState>e.OPENED&&o===void 0&&(clearTimeout(u),o=i(t.responseTimeout,\"Socket timeout\"))},e.onerror=()=>{e.status===0&&(clearTimeout(u),clearTimeout(o),s({content:e.responseText||\"Network request failed\",status:e.status,isTimedOut:!1}))},e.onload=()=>{clearTimeout(u),clearTimeout(o),s({content:e.responseText,status:e.status,isTimedOut:!1})},e.send(t.data)})}return{send:r}}\n//# sourceMappingURL=requester.xhr.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@algolia/requester-browser-xhr/dist/requester.xhr.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/dom-ready.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst domReady = onReady => {\n    window.requestAnimationFrame(async function check() {\n        document.body ? await onReady() : window.requestAnimationFrame(check);\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (domReady);\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/dom-ready.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/client.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: function() { return /* binding */ client; }\n/* harmony export */ });\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/index.js\");\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/events.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/log.js\");\n/* harmony import */ var _options_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/options.js\");\n/* eslint-disable no-console */\n/* global __resourceQuery */\n/* global __webpack_hash__ */\n\n\n\n\n/**\n * Initializes bud.js HMR handling\n */\nconst client = async (queryString, webpackHot) => {\n    /* Guard: EventSource browser support */\n    if (typeof window?.EventSource === `undefined`) {\n        console.error(`[bud] hot module reload requires EventSource to work. https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools`);\n        return false;\n    }\n    /* Guard: webpackHot api availability */\n    if (!webpackHot) {\n        console.error(`[bud] hot module reload requires the webpack hot api to be available`);\n        return false;\n    }\n    /* Set client options from URL params */\n    const options = _options_js__WEBPACK_IMPORTED_MODULE_3__.setFromParameters(queryString);\n    /* Setup logger */\n    const logger = (0,_log_js__WEBPACK_IMPORTED_MODULE_2__.makeLogger)(options);\n    if (typeof window.bud === `undefined`) {\n        window.bud = {\n            controllers: [],\n            current: {},\n            hmr: {},\n            listeners: {},\n            reload: () => {\n                window.location.reload();\n            },\n        };\n    }\n    if (!window.bud.current[options.name]) {\n        window.bud.current[options.name] = null;\n    }\n    const isStale = (hash) => {\n        if (hash)\n            window.bud.current[options.name] = hash;\n        return __webpack_require__.h() === window.bud.current[options.name];\n    };\n    /**\n     * Webpack HMR check handler\n     */\n    const check = async () => {\n        if (webpackHot.status() === `idle`) {\n            await webpackHot.check(false);\n            requestAnimationFrame(async function whenReady() {\n                if (webpackHot.status() === `ready`) {\n                    await update();\n                }\n                else {\n                    requestAnimationFrame(whenReady);\n                }\n            });\n        }\n    };\n    /**\n     * Webpack HMR unaccepted module handler\n     */\n    const onUnacceptedOrDeclined = (info) => {\n        console.warn(`[${options.name}] ${info.type}`, info);\n        options.reload && window.location.reload();\n    };\n    const onAccepted = (info) => {\n        window.bud.controllers.map(controller => controller?.update({ action: `sync`, errors: [] }));\n    };\n    /**\n     * Webpack HMR error handler\n     */\n    const onErrored = (error) => {\n        window.bud.controllers.map(controller => controller?.update({ errors: [error] }));\n    };\n    /**\n     * Webpack HMR update handler\n     */\n    const update = async () => {\n        try {\n            await webpackHot.apply({\n                ignoreDeclined: true,\n                ignoreErrored: true,\n                ignoreUnaccepted: true,\n                onAccepted,\n                onDeclined: onUnacceptedOrDeclined,\n                onErrored,\n                onUnaccepted: onUnacceptedOrDeclined,\n            });\n            if (!isStale())\n                await check();\n        }\n        catch (error) {\n            logger.error(error);\n        }\n    };\n    /* Instantiate indicator, overlay */\n    try {\n        await _components_index_js__WEBPACK_IMPORTED_MODULE_0__.make(options);\n    }\n    catch (error) { }\n    /* Instantiate eventSource */\n    const events = (0,_events_js__WEBPACK_IMPORTED_MODULE_1__.injectEvents)(EventSource).make(options);\n    if (!window.bud.listeners?.[options.name]) {\n        window.bud.listeners[options.name] = async (payload) => {\n            if (!payload)\n                return;\n            if (options.reload && payload.action === `reload`)\n                return window.bud.reload();\n            if (payload.name !== options.name)\n                return;\n            window.bud.controllers.map(controller => controller?.update(payload));\n            if (payload.errors?.length > 0)\n                return;\n            if (payload.action === `built` || payload.action === `sync`) {\n                if (isStale(payload.hash))\n                    return;\n                if (payload.action === `built`) {\n                    logger.log(`built in ${payload.time}ms`);\n                }\n                await check();\n            }\n        };\n        /*\n         * Instantiate HMR event source\n         * and register client listeners\n         */\n        events.addListener(window.bud.listeners[options.name]);\n    }\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/client.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/index.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   make: function() { return /* binding */ make; }\n/* harmony export */ });\n/* harmony import */ var _indicator_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/indicator/index.js\");\n/* harmony import */ var _overlay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/overlay/index.js\");\n\n\nconst make = async (options) => {\n    if (options.indicator && !customElements.get(`bud-activity-indicator`)) {\n        maybePushController(_indicator_index_js__WEBPACK_IMPORTED_MODULE_0__.make());\n    }\n    if (options.overlay && !customElements.get(`bud-error`)) {\n        maybePushController(_overlay_index_js__WEBPACK_IMPORTED_MODULE_1__.make());\n    }\n    return window.bud.controllers;\n};\nconst maybePushController = (controller) => {\n    if (!controller)\n        return;\n    window.bud.controllers.push(controller);\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/index.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/indicator/index.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   make: function() { return /* binding */ make; }\n/* harmony export */ });\n/* harmony import */ var _indicator_component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.component.js\");\n/* harmony import */ var _indicator_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.controller.js\");\n\n\nconst make = () => {\n    if (customElements.get(`bud-activity-indicator`))\n        return;\n    customElements.define(`bud-activity-indicator`, _indicator_component_js__WEBPACK_IMPORTED_MODULE_0__.Component);\n    return new _indicator_controller_js__WEBPACK_IMPORTED_MODULE_1__.Controller();\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/indicator/index.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.component.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: function() { return /* binding */ Component; }\n/* harmony export */ });\n/* harmony import */ var _indicator_pulse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.pulse.js\");\n\n/**\n * Indicator web component\n */\nclass Component extends HTMLElement {\n    static get observedAttributes() {\n        return [`has-errors`, `has-warnings`, `action`];\n    }\n    /**\n     * Class constructor\n     */\n    constructor() {\n        super();\n        /**\n         * Status indicator colors\n         */\n        this.colors = {\n            error: [220, 38, 38, 1],\n            pending: [59, 130, 246, 1],\n            success: [4, 120, 87, 1],\n            warn: [252, 211, 77, 1],\n        };\n        /**\n         * Component name\n         */\n        this.name = `bud-activity-indicator`;\n        this.renderShadow();\n    }\n    /**\n     * Status is error\n     */\n    onError() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`warning`, `success`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`error`);\n        this.hide();\n    }\n    /**\n     * Status is pending\n     */\n    onPending() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `warning`, `success`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`pending`);\n        this.hide();\n    }\n    /**\n     * Status is success\n     */\n    onSuccess() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `warning`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`success`);\n        this.hide();\n    }\n    /**\n     * Status is warning\n     */\n    onWarning() {\n        this.show();\n        this.shadowRoot\n            .querySelector(this.selector)\n            .classList.remove(`error`, `success`, `pending`);\n        this.shadowRoot.querySelector(this.selector).classList.add(`warning`);\n        this.hide();\n    }\n    attributeChangedCallback() {\n        if (this.hasAttribute(`has-errors`))\n            return this.onError();\n        if (this.hasAttribute(`has-warnings`))\n            return this.onWarning();\n        if (this.getAttribute(`action`) == `building` ||\n            this.getAttribute(`action`) == `sync`)\n            return this.onSuccess();\n        this.onPending();\n    }\n    /**\n     * Get accessor: has errors\n     */\n    get hasErrors() {\n        return this.getAttribute(`has-errors`) == `true`;\n    }\n    /**\n     * Get accessor: has warnings\n     */\n    get hasWarnings() {\n        return this.getAttribute(`has-warnings`) == `true`;\n    }\n    /**\n     * Hide status indicator\n     */\n    hide() {\n        this.timeout = setTimeout(() => {\n            this.shadowRoot.querySelector(this.selector).classList.remove(`show`);\n        }, 2000);\n    }\n    /**\n     * Render status indicator\n     */\n    renderShadow() {\n        const container = document.createElement(`div`);\n        container.classList.add(this.name);\n        container.innerHTML = `\n    <style>\n    .bud-activity-indicator {\n      position: fixed;\n      width: 10px;\n      height: 10px;\n      left: 10px;\n      bottom: 10px;\n      z-index: 9999;\n      margin: 5px;\n      padding: 5px;\n      -webkit-transition:\n        all .6s ease-in-out,\n      transition:\n        all .6s ease-in-out;\n      animation-fill-mode: forwards;\n      pointer-events: none;\n      border-radius: 50%;\n      transform: scale(0);\n      opacity: 0;\n    }\n\n    .show {\n      opacity: 1;\n      background-color: rgba(255, 255, 255, 1);\n      transform: scale(1);\n      transition:\n        all .6s ease-in-out;\n    }\n\n    ${(0,_indicator_pulse_js__WEBPACK_IMPORTED_MODULE_0__.pulse)(`success`, this.colors.success)}\n    ${(0,_indicator_pulse_js__WEBPACK_IMPORTED_MODULE_0__.pulse)(`error`, this.colors.error)}\n    ${(0,_indicator_pulse_js__WEBPACK_IMPORTED_MODULE_0__.pulse)(`warning`, this.colors.warn)}\n    ${(0,_indicator_pulse_js__WEBPACK_IMPORTED_MODULE_0__.pulse)(`pending`, this.colors.pending)}\n\n    </style>\n    `;\n        this.attachShadow({ mode: `open` }).appendChild(container);\n    }\n    /**\n     * Root div querySelector selector\n     */\n    get selector() {\n        return `.${this.name}`;\n    }\n    /**\n     * Show status indicator\n     */\n    show() {\n        this.timeout && clearTimeout(this.timeout);\n        this.shadowRoot.querySelector(this.selector).classList.add(`show`);\n    }\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.component.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.controller.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controller: function() { return /* binding */ Controller; }\n/* harmony export */ });\n/**\n * Activity indicator controller\n */\nclass Controller {\n    /**\n     * Initialization\n     */\n    constructor() {\n        /**\n         * Active WHM payload\n         */\n        this.payload = null;\n        this.node = document.createElement(`bud-activity-indicator`);\n        this.update = this.update.bind(this);\n    }\n    /**\n     * Append `bud-error` element to the DOM\n     */\n    addNode() {\n        if (document.body.querySelector(`bud-activity-indicator`)) {\n            if (typeof this.timer.unref === `function`)\n                this.timer.unref();\n            this.removeNode();\n        }\n        document.body?.appendChild(this.node);\n        this.timer = setTimeout(this.removeNode, 3000);\n    }\n    /**\n     * Remove `bud-error` element from the DOM (if present)\n     */\n    removeNode() {\n        document.body.querySelector(`bud-activity-indicator`)?.remove();\n    }\n    /**\n     * Update activity indicator\n     */\n    update(payload) {\n        this.node.toggleAttribute(`has-errors`, payload.errors?.length > 0);\n        this.node.toggleAttribute(`has-warnings`, payload.warnings?.length > 0);\n        this.node.setAttribute(`action`, payload.action);\n        this.addNode();\n    }\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.controller.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.pulse.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pulse: function() { return /* binding */ pulse; }\n/* harmony export */ });\n/**\n * CSS animation for reload indicator\n */\nconst pulse = (name, color) => `\n  .${name} {\n    box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]});\n    animation: ${name}__pulse 2s infinite;\n    transition: all 0.4s ease-in-out;\n  }\n\n  .${name}:not(.show) {\n    background-color: rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n  }\n\n  .${name}.show {\n    background-color: rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]});\n  }\n\n  @keyframes ${name}__pulse {\n    0% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.7);\n    }\n\n    70% {\n      transform: scale(1);\n      box-shadow: 0 0 0 10px rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n    }\n\n    100% {\n      transform: scale(0.95);\n      box-shadow: 0 0 0 0 rgba(${color[0]}, ${color[1]}, ${color[2]}, 0);\n    }\n  }\n`;\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/indicator/indicator.pulse.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/overlay/index.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   make: function() { return /* binding */ make; }\n/* harmony export */ });\n/* harmony import */ var _overlay_component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.component.js\");\n/* harmony import */ var _overlay_controller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.controller.js\");\n\n\nconst make = () => {\n    if (customElements.get(`bud-error`))\n        return;\n    customElements.define(`bud-error`, _overlay_component_js__WEBPACK_IMPORTED_MODULE_0__.Component);\n    return new _overlay_controller_js__WEBPACK_IMPORTED_MODULE_1__.Controller();\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/overlay/index.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.component.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: function() { return /* binding */ Component; }\n/* harmony export */ });\n/**\n * Component container\n */\nclass Component extends HTMLElement {\n    static get observedAttributes() {\n        return [`message`];\n    }\n    constructor() {\n        super();\n        this.name = `bud-overlay`;\n        this.renderShadow();\n    }\n    attributeChangedCallback() {\n        if (!this.documentBodyStyle)\n            this.documentBodyStyle = document.body?.style;\n        if (this.getAttribute(`message`)) {\n            document.body.style.overflow = `hidden`;\n            this.shadowRoot.querySelector(`.overlay`).classList.add(`visible`);\n            this.shadowRoot.querySelector(`.messages`).innerHTML =\n                this.getAttribute(`message`);\n            return;\n        }\n        if (this.documentBodyStyle?.overflow && document?.body?.style) {\n            document.body.style.overflow = this.documentBodyStyle.overflow;\n        }\n        this.shadowRoot.querySelector(`.overlay`).classList.remove(`visible`);\n    }\n    connectedCallback() {\n        if (document.body?.style)\n            this.documentBodyStyle = document.body.style;\n    }\n    get message() {\n        return this.getAttribute(`message`);\n    }\n    renderShadow() {\n        const container = document.createElement(`div`);\n        container.classList.add(`overlay`);\n        container.innerHTML = `\n      <style>\n        .overlay {\n          width: 100vw;\n          backdrop-filter: blur(10px);\n          display: flex;\n          height: 100vh;\n          border-top: 2px solid transparent;\n          overflow-x: hidden;\n          overflow-y: scroll;\n          position: absolute;\n          top: -1000px;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out, border 0.4s ease-in-out;\n          justify-content: center;\n        }\n\n        .visible {\n          position: fixed;\n          top: 0;\n          z-index: 9998;\n          opacity: 1;\n          border-top: 5px solid red;\n          transition: opacity 0.2s ease-in-out, border 0.4s ease-in-out;\n          max-width: 100vw;\n        }\n\n        .messages {\n          background-color: white;\n          border-radius: 5px;\n          filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));\n          display: flex;\n          align-self: center;\n          width: 800px;\n          max-width: 90vw;\n          margin-left: auto;\n          margin-right: auto;\n          flex-direction: column;\n          flex-wrap: wrap;\n          align-items: center;\n          align-content: center;\n          padding: 2rem 2rem 0rem 2rem;\n        }\n\n        .visible .messages > div {\n          position: relative;\n          top: 0;\n          opacity: 1;\n          transition: all: 0.2s ease-in-out;\n        }\n\n        .messages > div {\n          position: relative;\n          top: 20px;\n          opacity: 0;\n          transition: all: 0.2s ease-in-out;\n          align-items: center;\n          align-content: center;\n          color: rgba(0, 0, 0, 0.87);\n          flex-direction: column;\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n          padding: 0rem 2rem 2rem 2rem;\n          width: 100%;\n          max-width:95vw;\n        }\n\n        .messages > div > pre {\n          font-weight: 300;\n          font-size: 0.8rem;\n          overflow-x: scroll;\n        }\n\n        pre {\n          background: #303030;\n          color: #f1f1f1;\n          padding: 10px 16px;\n          border-radius: 2px;\n          border-top: 4px solid #dd0303;\n          -moz-box-shadow: inset 0 0 10px #000;\n          box-shadow: inset 0 0 10px #000;\n          counter-reset: line;\n        }\n\n        pre span {\n          display: block;\n          line-height: 1.5rem;\n        }\n\n        pre span:before {\n          counter-increment: line;\n          content: counter(line);\n          display: inline-block;\n          border-right: 1px solid #ddd;\n          padding: 0 .5em;\n          margin-right: .5em;\n          color: #888;\n          width: 30px;\n        }\n      </style>\n      <div class=\"messages\"></div>\n    `;\n        this.attachShadow({ mode: `open` }).appendChild(container);\n    }\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.component.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.controller.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controller: function() { return /* binding */ Controller; }\n/* harmony export */ });\nconst ansiPattern = [\n    `[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)`,\n    `(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))`,\n].join(`|`);\nconst stripAnsi = (body) => body?.replace?.(new RegExp(ansiPattern, `g`), ``) ?? body;\n/**\n * Overlay controller\n */\nclass Controller {\n    /**\n     * Class constructor\n     */\n    constructor() {\n        this.update = this.update.bind(this);\n        this.element = document.createElement(`bud-error`);\n    }\n    /**\n     * Append `bud-error` element to the DOM\n     */\n    createError() {\n        !document.body.querySelector(`bud-error`) &&\n            document.body?.appendChild(this.element);\n    }\n    /**\n     * Formatted error message\n     */\n    get message() {\n        return this.payload.errors?.reduce((a, c) => {\n            const msg = c?.message ?? c?.error ?? c;\n            if (!msg)\n                return a;\n            return `${a}\n        <div>\n          <pre>${stripAnsi(msg)}</pre>\n        </div>`;\n        }, ``);\n    }\n    /**\n     * Remove `bud-error` element from the DOM (if present)\n     */\n    removeError() {\n        document.body.querySelector(`bud-error`)?.remove();\n    }\n    /**\n     * Update DOM\n     */\n    update(payload) {\n        this.payload = payload;\n        this.element.setAttribute(`message`, this.message ?? ``);\n        if (this.payload.errors?.length > 0) {\n            return this.createError();\n        }\n        this.removeError();\n    }\n}\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/components/overlay/overlay.controller.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/events.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   injectEvents: function() { return /* binding */ injectEvents; }\n/* harmony export */ });\nconst injectEvents = (eventSource) => {\n    /**\n     * EventSource wrapper\n     *\n     * @remarks\n     * wraps EventSource in a function to allow for\n     * mocking in tests\n     */\n    return class Events extends eventSource {\n        /**\n         * Singleton constructor\n         *\n         */\n        static make(options) {\n            if (typeof window.bud.hmr[options.name] === `undefined`)\n                Object.assign(window.bud.hmr, {\n                    [options.name]: new Events(options),\n                });\n            return window.bud.hmr[options.name];\n        }\n        /**\n         * Class constructor\n         *\n         * @remarks\n         * Singleton interface, so this is private.\n         *\n         */\n        constructor(options) {\n            super(options.path);\n            this.options = options;\n            /**\n             * Registered listeners\n             */\n            this.listeners = new Set();\n            /**\n             * EventSource `onmessage` handler\n             */\n            this.onmessage = async function (payload) {\n                if (!payload?.data || payload.data == `\\uD83D\\uDC93`) {\n                    return;\n                }\n                try {\n                    const data = JSON.parse(payload.data);\n                    if (!data)\n                        return;\n                    await Promise.all([...this.listeners].map(async (listener) => {\n                        return await listener(data);\n                    }));\n                }\n                catch (ex) { }\n            };\n            /**\n             * EventSource `onopen` handler\n             */\n            this.onopen = function () { };\n            this.onopen = this.onopen.bind(this);\n            this.onmessage = this.onmessage.bind(this);\n            this.addListener = this.addListener.bind(this);\n        }\n        /**\n         * EventSource `addMessageListener` handler\n         */\n        addListener(listener) {\n            this.listeners.add(listener);\n            return this;\n        }\n    };\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/events.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/index.js?indicator=true&name=sage&overlay=true&reload=true":
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var __resourceQuery = \"?indicator=true&name=sage&overlay=true&reload=true\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/hot/client.js\");\n/* eslint-disable no-console */\n/* global __resourceQuery */\n/* global module */\n\n(async function () {\n    try {\n        await (0,_client_js__WEBPACK_IMPORTED_MODULE_0__.client)(__resourceQuery, __webpack_module__.hot);\n    }\n    catch (err) {\n        console.error(err);\n    }\n})();\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/index.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/log.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeError: function() { return /* binding */ makeError; },\n/* harmony export */   makeInfo: function() { return /* binding */ makeInfo; },\n/* harmony export */   makeLog: function() { return /* binding */ makeLog; },\n/* harmony export */   makeLogger: function() { return /* binding */ makeLogger; },\n/* harmony export */   makeWarn: function() { return /* binding */ makeWarn; }\n/* harmony export */ });\n/* eslint-disable no-console */\nconst makeLogger = (options) => {\n    return {\n        error: makeError(options),\n        info: makeInfo(options),\n        log: makeLog(options),\n        warn: makeWarn(options),\n    };\n};\nconst makeLog = (options) => {\n    return (...args) => {\n        if (options.log) {\n            console.log(`[${options.name}]`, ...args);\n        }\n    };\n};\nconst makeInfo = (options) => {\n    return (...args) => {\n        if (options.log) {\n            console.info(`[${options.name}]`, ...args);\n        }\n    };\n};\nconst makeError = (options) => {\n    return (...args) => {\n        console.error(`[${options.name}]`, ...args);\n    };\n};\nconst makeWarn = (options) => {\n    return (...args) => {\n        console.warn(`[${options.name}]`, ...args);\n    };\n};\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/log.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/hot/options.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   data: function() { return /* binding */ data; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   setFromParameters: function() { return /* binding */ setFromParameters; }\n/* harmony export */ });\n/**\n * Client options\n */\nlet data = {\n    debug: true,\n    indicator: true,\n    log: true,\n    name: `@roots/bud-client`,\n    overlay: true,\n    path: `/bud/hot`,\n    reload: true,\n    timeout: 2000,\n};\n/**\n * Get client option\n */\nconst get = (name, key) => key ? data[name][key] : data[name];\n/**\n * Set client data based on URL parameters\n */\nconst setFromParameters = (query) => {\n    let parsedParams = {};\n    new window.URLSearchParams(query).forEach((value, key) => {\n        parsedParams[key] =\n            value === `true` ? true : value === `false` ? false : value;\n    });\n    data[parsedParams.name] = { ...data, ...parsedParams };\n    return data[parsedParams.name];\n};\n\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/hot/options.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/intercept/index.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst intercept = (...args) => {\n    args.every(arg => typeof arg === `string`) &&\n        setInterval(() => [\n            [document.getElementsByTagName(`a`), `href`],\n            [document.getElementsByTagName(`link`), `href`],\n        ]\n            .map(([elements, attribute]) => [Array.from(elements), attribute])\n            .forEach(([elements, attribute]) => elements\n            .filter(el => el.hasAttribute(attribute))\n            .filter(el => !el.hasAttribute(`__bud_processed`))\n            .filter(el => el.getAttribute(attribute).startsWith(args[0]))\n            .map(el => {\n            const value = el.getAttribute(attribute).replace(...args);\n            el.setAttribute(attribute, value);\n            el.toggleAttribute(`__bud_processed`);\n        })), 1000);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (intercept);\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/intercept/index.js?");

/***/ }),

/***/ "../node_modules/@roots/bud-client/lib/intercept/proxy-click-interceptor.js?replace=%2F&search=http%3A%2F%2F0.0.0.0%2F":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var __resourceQuery = \"?replace=%2F&search=http%3A%2F%2F0.0.0.0%2F\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/intercept/index.js\");\n/* eslint-disable no-console */\n/* global __resourceQuery */\n\nwindow.requestAnimationFrame(async function ready() {\n    if (false)\n        {}\n    const params = new URLSearchParams(__resourceQuery);\n    if (!params || !params.has(`search`) || !params.has(`replace`))\n        return;\n    const search = decodeURI(params.get(`search`));\n    const replace = decodeURI(params.get(`replace`));\n    return document.body\n        ? (0,_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(search, replace)\n        : window.requestAnimationFrame(ready);\n});\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/bud-client/lib/intercept/proxy-click-interceptor.js?");

/***/ }),

/***/ "../node_modules/@roots/sage/lib/client/dom-ready.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _roots_bud_client_dom_ready__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _roots_bud_client_dom_ready__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@roots/bud-client/lib/dom-ready.js\");\n\n\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/@roots/sage/lib/client/dom-ready.js?");

/***/ }),

/***/ "../node_modules/algoliasearch/dist/browser.js":
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algoliasearch: function() { return /* binding */ algoliasearch; },\n/* harmony export */   apiClientVersion: function() { return /* reexport safe */ _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion; }\n/* harmony export */ });\n/* harmony import */ var _algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/@algolia/client-abtesting/dist/builds/browser.js\");\n/* harmony import */ var _algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../node_modules/@algolia/client-analytics/dist/builds/browser.js\");\n/* harmony import */ var _algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"../node_modules/@algolia/client-insights/dist/builds/browser.js\");\n/* harmony import */ var _algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"../node_modules/@algolia/client-personalization/dist/builds/browser.js\");\n/* harmony import */ var _algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"../node_modules/@algolia/client-query-suggestions/dist/builds/browser.js\");\n/* harmony import */ var _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/@algolia/client-search/dist/builds/browser.js\");\n/* harmony import */ var _algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"../node_modules/@algolia/ingestion/dist/builds/browser.js\");\n/* harmony import */ var _algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"../node_modules/@algolia/monitoring/dist/builds/browser.js\");\n/* harmony import */ var _algolia_recommend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"../node_modules/@algolia/recommend/dist/builds/browser.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// builds/browser.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  algoliasearch: () => algoliasearch,\n  apiClientVersion: () => _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion\n});\n\n\n\n\n\n\n\n\n\n\n// builds/models.ts\nvar models_exports = {};\n__export(models_exports, {\n  apiClientVersion: () => _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.apiClientVersion\n});\n__reExport(models_exports, _algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__);\n__reExport(models_exports, _algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__);\n__reExport(models_exports, _algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__);\n__reExport(models_exports, _algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__);\n__reExport(models_exports, _algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__);\n__reExport(models_exports, _algolia_client_search__WEBPACK_IMPORTED_MODULE_0__);\n__reExport(models_exports, _algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__);\n__reExport(models_exports, _algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__);\n__reExport(models_exports, _algolia_recommend__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\n\n\n// builds/browser.ts\n__reExport(browser_exports, models_exports);\nfunction algoliasearch(appId, apiKey, options) {\n  if (!appId || typeof appId !== \"string\") {\n    throw new Error(\"`appId` is missing.\");\n  }\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new Error(\"`apiKey` is missing.\");\n  }\n  const client = (0,_algolia_client_search__WEBPACK_IMPORTED_MODULE_0__.searchClient)(appId, apiKey, options);\n  return {\n    ...client,\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua() {\n      return client.transporter.algoliaAgent.value;\n    },\n    initAbtesting: (initOptions) => {\n      return (0,_algolia_client_abtesting__WEBPACK_IMPORTED_MODULE_1__.abtestingClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initAnalytics: (initOptions) => {\n      return (0,_algolia_client_analytics__WEBPACK_IMPORTED_MODULE_2__.analyticsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initIngestion: (initOptions) => {\n      return (0,_algolia_ingestion__WEBPACK_IMPORTED_MODULE_6__.ingestionClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initInsights: (initOptions) => {\n      return (0,_algolia_client_insights__WEBPACK_IMPORTED_MODULE_3__.insightsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initMonitoring: (initOptions = {}) => {\n      return (0,_algolia_monitoring__WEBPACK_IMPORTED_MODULE_7__.monitoringClient)(initOptions.appId || appId, initOptions.apiKey || apiKey, initOptions.options);\n    },\n    initPersonalization: (initOptions) => {\n      return (0,_algolia_client_personalization__WEBPACK_IMPORTED_MODULE_4__.personalizationClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initQuerySuggestions: (initOptions) => {\n      return (0,_algolia_client_query_suggestions__WEBPACK_IMPORTED_MODULE_5__.querySuggestionsClient)(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options\n      );\n    },\n    initRecommend: (initOptions = {}) => {\n      return (0,_algolia_recommend__WEBPACK_IMPORTED_MODULE_8__.recommendClient)(initOptions.appId || appId, initOptions.apiKey || apiKey, initOptions.options);\n    }\n  };\n}\n\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://@roots/bud/sage/../node_modules/algoliasearch/dist/browser.js?");

/***/ }),

/***/ "./scripts/app.js":
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var _Users_johnpuddephatt_Sites_carersleeds_web_app_themes_carersleeds_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_johnpuddephatt_Sites_carersleeds_web_app_themes_carersleeds_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/react-refresh/runtime.js\");\n/* harmony import */ var algoliasearch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../node_modules/algoliasearch/dist/browser.js\");\n/* harmony import */ var _roots_sage_client_dom_ready__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../node_modules/@roots/sage/lib/client/dom-ready.js\");\n/* harmony import */ var alpinejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"../node_modules/alpinejs/dist/module.esm.js\");\n/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(\"../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js\");\n\n__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_Users_johnpuddephatt_Sites_carersleeds_web_app_themes_carersleeds_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_Users_johnpuddephatt_Sites_carersleeds_web_app_themes_carersleeds_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_Users_johnpuddephatt_Sites_carersleeds_web_app_themes_carersleeds_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));\n\n// import { algoliasearch } from '@algolia/client-search ';\n\n\n\nwindow.Alpine = alpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\nconst appId = window.algoliaAppId;\nconst apiKey = window.algoliaApiKey;\nconst indexName = 'wp_searchable_posts';\ndocument.addEventListener('alpine:init', ()=>{\n    alpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].data('search', ()=>({\n            init () {\n                this.client = (0,algoliasearch__WEBPACK_IMPORTED_MODULE_1__.algoliasearch)(appId, apiKey);\n                this.searchReady = true;\n            },\n            client: null,\n            index: null,\n            term: '',\n            searchOpen: false,\n            searchReady: false,\n            noResults: false,\n            results: null,\n            totalHits: null,\n            resultsPerPage: null,\n            searching: false,\n            async search () {\n                this.searching = true;\n                const { results } = await this.client.search({\n                    requests: [\n                        {\n                            indexName,\n                            query: this.term\n                        }\n                    ]\n                });\n                this.results = results[0].hits;\n                this.totalHits = results[0].nbHits;\n                this.resultsPerPage = results[0].hitsPerPage;\n                this.searching = false;\n            }\n        }));\n});\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].start();\n/**\n * Application entrypoint\n */ (0,_roots_sage_client_dom_ready__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(async ()=>{});\n/**\n * @see {@link https://webpack.js.org/api/hot-module-replacement/}\n */ if (true) __webpack_module__.hot.accept(console.error);\nif (document.querySelector('.application-form-job-id input[type=\"hidden\"]')) {\n    if (window.jobApplicationID) {\n        document.querySelector('.application-form-job-id input[type=\"hidden\"]').value = window.jobApplicationID;\n    } else alert('A job application form was loaded but it is not clear what job it is for. The job ID should be specified in the page url with: \\n\\n ?job_id=123');\n} else if (window.jobApplicationID) {\n    alert(\"A job application ID was found, but a corresponding form element was not found. Please ensure the form contains a hidden element with a class of 'application-form-job-id\");\n}\n\n\nvar $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;\nvar $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(\n\t$ReactRefreshModuleId$\n);\n\nfunction $ReactRefreshModuleRuntime$(exports) {\n\tif (true) {\n\t\tvar errorOverlay;\n\t\tif (true) {\n\t\t\terrorOverlay = false;\n\t\t}\n\t\tvar testMode;\n\t\tif (typeof __react_refresh_test__ !== 'undefined') {\n\t\t\ttestMode = __react_refresh_test__;\n\t\t}\n\t\treturn __react_refresh_utils__.executeRuntime(\n\t\t\texports,\n\t\t\t$ReactRefreshModuleId$,\n\t\t\t__webpack_module__.hot,\n\t\t\terrorOverlay,\n\t\t\ttestMode\n\t\t);\n\t}\n}\n\nif (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {\n\t$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);\n} else {\n\t$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);\n}\n\n//# sourceURL=webpack://@roots/bud/sage/./scripts/app.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ var __webpack_exports__ = (__webpack_exec__("../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js"), __webpack_exec__("./scripts/app.js"), __webpack_exec__("./styles/app.css"), __webpack_exec__("../node_modules/@roots/bud-client/lib/hot/index.js?indicator=true&name=sage&overlay=true&reload=true"), __webpack_exec__("../node_modules/@roots/bud-client/lib/intercept/proxy-click-interceptor.js?replace=%2F&search=http%3A%2F%2F0.0.0.0%2F"));
/******/ }
]);